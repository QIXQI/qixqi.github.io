<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QIXQI&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qixqi.github.io/"/>
  <updated>2019-04-21T15:53:46.256Z</updated>
  <id>https://qixqi.github.io/</id>
  
  <author>
    <name>QIXQI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo blog 美化升级</title>
    <link href="https://qixqi.github.io/2019/04/19/hexo-beautify/"/>
    <id>https://qixqi.github.io/2019/04/19/hexo-beautify/</id>
    <published>2019-04-19T12:24:16.000Z</published>
    <updated>2019-04-21T15:53:46.256Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">"Way Back Home"</span> <span class="string">"SHAUN"</span> <span class="string">"https://qixqi.club/audio/homeway.mp3"</span>  <span class="string">"https://qixqi.club/images/zhaolei1.jpeg"</span> %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=https://qixqi.club/video/dingning.mp4"</span> <span class="string">"pic=https://qixqi.club/images/zhaolei1.jpeg"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br></pre></td></tr></table></figure><h2 id="将-Blog-分发到不同的库"><a href="#将-Blog-分发到不同的库" class="headerlink" title="将 Blog 分发到不同的库"></a>将 Blog 分发到不同的库</h2><p>由于某度相当变态的爬虫算法，Github 完全反对某度爬取，所以使用 Github 不得不放弃某度国内庞大的用户，但可以通过将 blog 分发到不同的库，可以同样方便的将自己的 blog 推送到某度。</p><h3 id="上篇已经布置了-Github-Pages"><a href="#上篇已经布置了-Github-Pages" class="headerlink" title="上篇已经布置了 Github Pages"></a>上篇已经布置了 Github Pages</h3><h3 id="Gitee-Pages"><a href="#Gitee-Pages" class="headerlink" title="Gitee Pages"></a>Gitee Pages</h3><ul><li><p><a href="https://gitee.com" target="_blank" rel="noopener">码云</a>，同样提供免费的 Page 服务，注册后（用户名尽量精简），新建一个<b>与用户名相同</b>的仓库（不区分大小写），这样可以避免二级域名</p></li><li><p>开启 Pages服务：在仓库目录下，在上方”服务”中开启 “Gitee Pages”，生成网址：<a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a></p></li><li><p>然后到本地博客目录，我的是blog，修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d;</span><br></pre></td></tr></table></figure></li><li><p>更新 Pages 服务：码云恶心的一点就是提交 blog 后每次需要手动更新Pages 服务，否则访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> 仍是上次提交的blog，亟需解决的问题。</p></li><li>然后访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> ，OK</li></ul><h3 id="Coding-目前Coding-已经被腾讯云开发者平台包揽"><a href="#Coding-目前Coding-已经被腾讯云开发者平台包揽" class="headerlink" title="Coding (目前Coding 已经被腾讯云开发者平台包揽)"></a>Coding (目前Coding 已经被腾讯云开发者平台包揽)</h3><ul><li><p>同样注册账号，创建与用户名一样的仓库</p></li><li><p>在仓库中左侧”代码”中开启 Pages 服务，生成 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a></p></li><li><p>修改本地 blog 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         </span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog，Coding与Github一样，提交后无需再更新Pages服务，直接访问 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a> 即可，多刷新几次就可以</p></li></ul><h3 id="在自己的服务器上搭建-blog"><a href="#在自己的服务器上搭建-blog" class="headerlink" title="在自己的服务器上搭建 blog"></a>在自己的服务器上搭建 blog</h3><p>由于先前自己搭建了一台腾讯云的服务器，学生版，一年才 ¥120，很便宜的；</p><ul><li><p>服务器用 nginx 挂出多个网站</p><p>服务器只用来写 blog 未免有些浪费，可以另开一个网站来挂载 blog</p><p>由于 80端口已经监听 http, 443端口监听 https，需要新开一个端口来监听 blog网站</p><p>访问<a href="https://console.qcloud.com/cvm/securitygroup" target="_blank" rel="noopener">腾讯云安全组</a> ，添加入站规则，类型：自定义，来源：0.0.0.0/0，协议端口：TCP: 90，策略：允许 （根据自己惨痛教训，必须要在安全组开启端口）</p><p>连接服务器，编辑 /etc/nginx/conf.d/virtual.conf（没有新建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  listen 90;   <span class="comment"># 新建的端口</span></span><br><span class="line">  root /usr/share/nginx/qixqi;<span class="comment"># blog 根目录（与网站根目录类似)</span></span><br><span class="line">  server_name: localhost;</span><br><span class="line">  charset: utf-8;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只是简单配置一下 blog 的配置，更详细的可以参考网站的配置</p><p>最后一步：在服务器配置 git</p><p>​    安装 git: </p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></code></pre><p>​    创建 git 仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/git/</span><br><span class="line">chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /home/git/</span><br><span class="line">chmod -R 755 /home/git</span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line">git init --bare qixqi.git<span class="comment"># qixqi 为仓库名，可以自设</span></span><br></pre></td></tr></table></figure><p>​    创建一个新的 git 钩子</p><p>在 /home/git/qixqi.git/hooks 文件下新建钩子文件 post-receive</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/qixqi.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/usr/share/nginx/qixqi --git dir=/home/git/qixqi.git checkout -f</span><br></pre></td></tr></table></figure></li></ul><p>​        工作原理是，提交时先访问 /home/git/qixqi.git ，然后receive，提交到 blog根.        目录，/usr/share/nginx/qixqi/</p><ul><li>修改本地 blog 的配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         - root@qixqi.club:/home/git/qixqi</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>其中 <a href="http://www.qixqi.club" target="_blank" rel="noopener">www.qixqi.club</a> 是我新申请的域名，一年才¥1</p><ul><li>提交</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d</span><br></pre></td></tr></table></figure><p>这样提交一次，会同时分发到4个库</p><p>到这里为止，就配置好了，当然你可以不用4个都分发，只需要选择Github 和另外一个即可，推荐 Gitee，因为Coding 速度最慢，而服务器最快，但收费啊。</p><hr><h2 id="创建-“分类”-“标签”-“关于”-页面"><a href="#创建-“分类”-“标签”-“关于”-页面" class="headerlink" title="创建 “分类” “标签” “关于” 页面"></a>创建 “分类” “标签” “关于” 页面</h2><p>在 blog 站点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br><span class="line">hexo new page <span class="string">"tags"</span></span><br><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure><p>这样就在 blog/source 目录下创建了 “categories”, “tags”, “about” 文件夹，包含的index.md 分别是页面的主页</p><p>但这时候还不能在主页菜单中显示 “分类” “标签” “关于”，需要修改<b>主题</b>配置文件，在 blog/themes/next/下修改 _config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat    #腾讯404公益页面</span></span><br></pre></td></tr></table></figure><p>那么怎样给创建的博文添加标签并分类呢？</p><p>只需要新建博客的时候，修改 .md 文件头部即可，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: <span class="comment">#标题</span></span><br><span class="line">author: <span class="comment">#作者</span></span><br><span class="line">date: <span class="comment">#新建博客的时间</span></span><br><span class="line">tags: <span class="comment">#添加多个标签，Hexo与next并行关系</span></span><br><span class="line">  - Hexo</span><br><span class="line">  - next</span><br><span class="line">categories: <span class="comment">#添加分类，Hexo与next是包含关系</span></span><br><span class="line">  - Hexo</span><br><span class="line">  - next</span><br><span class="line">toc: <span class="literal">true</span>  <span class="comment">#生成文章目录</span></span><br><span class="line">description: <span class="comment">#描述，首页文章显示的摘要</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这样就添加了标签与分类</p><hr><h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>选择好图片后，在 blog 站点下的source 文件夹下，新建 upload 文件夹，在到upload 文件夹下新建 image 文件夹，将图片放到image 文件夹下</p><p>然后配置<b>主题</b>配置文件，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /upload/image/<span class="string">"图像名"</span></span><br></pre></td></tr></table></figure><hr><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>修改 blog 站点的配置文件，即根目录下的_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: <span class="comment">#标题</span></span><br><span class="line">subtitle: <span class="comment">#副标题</span></span><br><span class="line">description: Keep fucking the world <span class="comment">#站点描述</span></span><br><span class="line">author: <span class="comment">#作者</span></span><br><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><hr><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>Next 主题自带4中外观，在<b>主题</b>配置文件中修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scheme: Muse</span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><p>看看自己喜欢哪个😍</p><hr><h2 id="评论系统valine"><a href="#评论系统valine" class="headerlink" title="评论系统valine"></a>评论系统valine</h2><ul><li>valine 是免费、简洁、快速、高效、界面友好、轻量易用的评论系统</li></ul><h3 id="注册-LeanCloud"><a href="#注册-LeanCloud" class="headerlink" title="注册 LeanCloud"></a>注册 LeanCloud</h3><p>跟着提示注册即可</p><h3 id="创建LeanCloud-应用"><a href="#创建LeanCloud-应用" class="headerlink" title="创建LeanCloud 应用"></a>创建LeanCloud 应用</h3><p>选择”开发版”</p><p><img src="/2019/04/19/hexo-beautify/leancloud1.png" alt="aratar"></p><p>在设置  &gt; 应用Key， 就能看到自己应用的 App ID, App Key了</p><p><img src="/2019/04/19/hexo-beautify/leancloud2.png" alt="aratar"></p><p>在设置 &gt; 安全中心 &gt; Web 安全域名 ，添加自己的域名和本地的 localhost:4000</p><p><img src="/2019/04/19/hexo-beautify/leancloud3.png" alt="aratar"></p><p>比如我的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000</span><br><span class="line">https://qixqi.github.io</span><br><span class="line">https://qixqi.gitee.io</span><br><span class="line">https://qixxqi.coding.me</span><br><span class="line">http://qixqi.club:90</span><br><span class="line">https://qixqi.club:91</span><br><span class="line">http://zhengxiang4056.club:90</span><br><span class="line">https://zhengxiang4056.club:91</span><br></pre></td></tr></table></figure><p>你的可能没那么多，全添加上就行了，然后保存</p><h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在 blog/theme/next/ 下，修改<b>主题</b>配置文件，修改 valine</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: <span class="comment">#你的App id，最好复制，自己输入出错率高</span></span><br><span class="line">  appkey: <span class="comment">#你的App key</span></span><br><span class="line">  notify: <span class="literal">false</span></span><br><span class="line">  verify: <span class="literal">false</span></span><br><span class="line">  placeholder: ヾﾉ≧∀≦)来啊，快活啊 </span><br><span class="line">  avatar: mm</span><br><span class="line">  guest_info: nick, mail, link</span><br><span class="line">  pageSize: 10</span><br></pre></td></tr></table></figure><p>这样就添加了评论系统，快去快去快活吧ヾﾉ≧∀≦)</p><hr><h2 id="添加站内搜索功能"><a href="#添加站内搜索功能" class="headerlink" title="添加站内搜索功能"></a>添加站内搜索功能</h2><p>先安装 hexo-generator-searchdb 插件，在 blog 根目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>然后修改<b>站点</b>配置文件，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>然后修改<b>主题</b>配置文件，修改 local_search</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后菜单中就会出现 “搜索” 来实现本地搜索了</p><hr><h2 id="顶部加载条"><a href="#顶部加载条" class="headerlink" title="顶部加载条"></a>顶部加载条</h2><p>在 blog/themes/next/ 下，修改主题配置文件，找到 “pace”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line">pace: <span class="literal">true</span></span><br><span class="line"><span class="comment"># Themes list:</span></span><br><span class="line"><span class="comment">#pace-theme-big-counter</span></span><br><span class="line"><span class="comment">#pace-theme-bounce</span></span><br><span class="line"><span class="comment">#pace-theme-barber-shop</span></span><br><span class="line"><span class="comment">#pace-theme-center-atom</span></span><br><span class="line"><span class="comment">#pace-theme-center-circle</span></span><br><span class="line"><span class="comment">#pace-theme-center-radar</span></span><br><span class="line"><span class="comment">#pace-theme-center-simple</span></span><br><span class="line"><span class="comment">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="comment">#pace-theme-fill-left</span></span><br><span class="line"><span class="comment">#pace-theme-flash</span></span><br><span class="line"><span class="comment">#pace-theme-loading-bar</span></span><br><span class="line"><span class="comment">#pace-theme-mac-osx</span></span><br><span class="line"><span class="comment">#pace-theme-minimal</span></span><br><span class="line"><span class="comment"># For example</span></span><br><span class="line"><span class="comment"># pace_theme: pace-theme-center-simple</span></span><br><span class="line">pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><p>其中 “pace_theme” 是加载条的样式，选择一个就可以了</p><hr><h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      这篇随笔记录了自己 Github Pages 美化的过程，以及添加一系列的常用功能，持续更新
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro/MacOS 搭建 Github Pages 个人博客</title>
    <link href="https://qixqi.github.io/2019/04/15/hexo/"/>
    <id>https://qixqi.github.io/2019/04/15/hexo/</id>
    <published>2019-04-14T16:37:44.000Z</published>
    <updated>2019-04-21T12:12:02.109Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这篇主要是小白记录新建 Github Pages 的过程，大佬手下留情 :-D</p><p>有疑问可以交流的啊  <a href="https://github.com/QIXQI/qixqi.github.io/issues" target="_blank" rel="noopener">Github</a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28267530&auto=0&height=66"></iframe><h2 id="配置本地-Hexo"><a href="#配置本地-Hexo" class="headerlink" title="配置本地 Hexo:"></a>配置本地 Hexo:</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Ｎode.js"></a>安装 Ｎode.js</h3><p>Manjaro  利用 nvm 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装 nvm 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><p>MacOS 利用 Homebrew 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</span><br></pre></td></tr></table></figure><p>安装 brew 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>Manjaro 似乎默认已经安装，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h3 id="全局安装-Hexo"><a href="#全局安装-Hexo" class="headerlink" title="全局安装 Hexo"></a>全局安装 Hexo</h3><p>Manjaro</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="创建blog文件"><a href="#创建blog文件" class="headerlink" title="创建blog文件"></a>创建blog文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="启动-Hexo"><a href="#启动-Hexo" class="headerlink" title="启动 Hexo"></a>启动 Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="替换为next主题"><a href="#替换为next主题" class="headerlink" title="替换为next主题"></a>替换为next主题</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改 blog 目录下的 _config.yml 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>将 theme: landscape 替换为 theme: next</p><h3 id="启动-hexo-服务器"><a href="#启动-hexo-服务器" class="headerlink" title="启动 hexo 服务器"></a>启动 hexo 服务器</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在执行完上面三条命令后，终端中显示 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  ，就会看到本地 hexo 服务器已经配置成功</p><p>效果图</p><p><img src="/2019/04/15/hexo/next.png" alt="aratar"></p><h3 id="开启-MathJax"><a href="#开启-MathJax" class="headerlink" title="开启 MathJax"></a>开启 MathJax</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./themes/next/_config.yml</span><br></pre></td></tr></table></figure><p>找到 mathjax</p><p>修改为  mathjax:</p><p>​         enable: true</p><hr><h2 id="Github-Pages-配置"><a href="#Github-Pages-配置" class="headerlink" title="Github Pages 配置"></a>Github Pages 配置</h2><p>hexo 在本地已经配置好本地服务器，接下来需要在github上创建 repository</p><h3 id="选择New-repository"><a href="#选择New-repository" class="headerlink" title="选择New repository"></a>选择New repository</h3><h3 id="选择repository-name"><a href="#选择repository-name" class="headerlink" title="选择repository name"></a>选择repository name</h3><p>repository name 一般设置为　“username.github.io”, 其中”username” 一般是你的github 用户名，</p><p>选择库名后，在页面底端勾选”Initialize this repository with a README “;</p><p>创建成功后就可以在浏览器中使用 https://用户名.github.io 来访问</p><hr><h2 id="将本地配置的-blog-提交到-Github-Pages"><a href="#将本地配置的-blog-提交到-Github-Pages" class="headerlink" title="将本地配置的 blog 提交到 Github Pages"></a>将本地配置的 blog 提交到 Github Pages</h2><h3 id="Clone-repository"><a href="#Clone-repository" class="headerlink" title="Clone repository"></a>Clone repository</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure><h3 id="生成-index-html"><a href="#生成-index-html" class="headerlink" title="生成 index.html"></a>生成 index.html</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd username.github.io</span><br><span class="line">echo "Hello World" &gt; index.html</span><br></pre></td></tr></table></figure><h3 id="推送本地文件到-Github-Pages"><a href="#推送本地文件到-Github-Pages" class="headerlink" title="推送本地文件到 Github Pages"></a>推送本地文件到 Github Pages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m "Initial commit"</span><br><span class="line">git config --global user.name "github用户名"</span><br><span class="line">git config --global user.email github邮箱</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果输入　“git push -u origin master” 后邮箱报错，可以到 <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> 的 “Setting” 中的 “Email” 取消勾选 “Keep my email address private”</p><hr><h2 id="同步本地的-hexo-博客到-github-上"><a href="#同步本地的-hexo-博客到-github-上" class="headerlink" title="同步本地的 hexo 博客到 github 上"></a>同步本地的 hexo 博客到 github 上</h2><h3 id="安装一个扩展"><a href="#安装一个扩展" class="headerlink" title="安装一个扩展"></a>安装一个扩展</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><p>修改添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/username/username.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="清除缓存上传-hexo-到-Github-Pages"><a href="#清除缓存上传-hexo-到-Github-Pages" class="headerlink" title="清除缓存上传 hexo 到 Github Pages"></a>清除缓存上传 hexo 到 Github Pages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p> 这时候在浏览器中输入 https://用户名.github.io 就可以访问博客了</p><hr><h2 id="美化：更换-theme"><a href="#美化：更换-theme" class="headerlink" title="美化：更换 theme"></a>美化：更换 theme</h2><p>CyanStyle 是 Wordpress 的 Twentytwelve 主题在 Hexo 上的迁移，清新简约，个人感觉良好</p><h3 id="clone-hexo-theme-cyanstyle"><a href="#clone-hexo-theme-cyanstyle" class="headerlink" title="clone hexo-theme-cyanstyle"></a>clone hexo-theme-cyanstyle</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/wizardforcel/hexo-theme-cyanstyle themes/cyanstyle</span><br></pre></td></tr></table></figure><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改 _config.yml"></a>修改 _config.yml</h3><p>在 blog 目录下，</p><p>修改 _config.yml 中的 theme 为 theme: cyanstyle</p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/2019/04/15/hexo/cyanstyle.png" alt="aratar"></p><p>个人觉得挺好看的</p><h3 id="提交到-Github-Repositories"><a href="#提交到-Github-Repositories" class="headerlink" title="提交到 Github Repositories"></a>提交到 Github Repositories</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="浏览器浏览"><a href="#浏览器浏览" class="headerlink" title="浏览器浏览"></a>浏览器浏览</h3><hr><h2 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h2><p>主要解决在 hexo 博客中插入图片路径问题</p><h3 id="修改-config-yml-1"><a href="#修改-config-yml-1" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><p>在 blog 目录下修改 _config.yml 配置文件中的 post_asset_folder: true</p><p>此时在新建博客的时候会自动创建一个文件夹</p><h3 id="安装一个扩展-1"><a href="#安装一个扩展-1" class="headerlink" title="安装一个扩展"></a>安装一个扩展</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "博客名"</span><br></pre></td></tr></table></figure><p>之后会在 blog/source/_post/下出现 “博客名.md” 和 “博客名”文件夹</p><h3 id="编写-md-文件"><a href="#编写-md-文件" class="headerlink" title="编写 .md 文件"></a>编写 .md 文件</h3><p>编写 blog/source/_post/“博客名.md”</p><p>markdown 是一种标记语言，网上教程太多，这里不再赘述了 O(∩_∩)O~~</p><h3 id="在-md-文件中插入图片"><a href="#在-md-文件中插入图片" class="headerlink" title="在 .md 文件中插入图片"></a>在 .md 文件中插入图片</h3><p>先将图片文件放到 /blog/source/_post/“博客名” 文件夹下</p><p>然后在 .md 文件中 插入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![aratar](图像名)</span><br></pre></td></tr></table></figure><p>输入图像名的时候不能有路径，只需要图像名和后缀即可，比如 “cyanstyle.png”</p><p>注意：不要通过 “选择本地文件” 方式插入图片，这种方式插入图片时是绝对路径</p><h3 id="本地预览-1"><a href="#本地预览-1" class="headerlink" title="本地预览"></a>本地预览</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><h3 id="提交到-Github-Repositories-1"><a href="#提交到-Github-Repositories-1" class="headerlink" title="提交到 Github Repositories"></a>提交到 Github Repositories</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>浏览器访问 https://用户名.github.io</p><p><br>    <span>参考：<a href="https://www.jianshu.com/p/e49eeafe506e" target="_blank" rel="noopener">https://www.jianshu.com/p/e49eeafe506e</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">https://www.jianshu.com/p/c2ba9533088a</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/cf0628478a4e" target="_blank" rel="noopener">https://www.jianshu.com/p/cf0628478a4e</a></span><br><br></p>]]></content>
    
    <summary type="html">
    
      本文主要涉及hexo next建站初期的详细过程，目前暂不包括美化过程，持续更新 ......
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
