<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QIXQI&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qixqi.github.io/"/>
  <updated>2020-03-27T02:35:59.138Z</updated>
  <id>https://qixqi.github.io/</id>
  
  <author>
    <name>QIXQI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>J2EE 学习</title>
    <link href="https://qixqi.github.io/2020/03/27/j2ee-learn/"/>
    <id>https://qixqi.github.io/2020/03/27/j2ee-learn/</id>
    <published>2020-03-27T02:32:57.000Z</published>
    <updated>2020-03-27T02:35:59.138Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h2><p>url: 协议 域名 端口</p><p>url 包含: 协议 + 主机 + 文件路径</p><p>文件路径 = web应用的上下文路径 + 文件在当前web应用中路径</p><p>url 中❓ 后是查询字符串，名值对区分大小写</p><p><a href="http://www.baidu.com/s?wd=hello&amp;encoding=utf-8&amp;page=15" target="_blank" rel="noopener">http://www.baidu.com/s?wd=hello&amp;encoding=utf-8&amp;page=15</a></p><p>后台语言: JAVA  C#  PHP Node.js</p><p>javax.servlet.Servlet       Servlet 中的函数必须会</p><p>javax.servlet.ServletRequest</p><p>javax.servlet.ServletResponse</p><p>javax.servlet.http.HttpServlet</p><p>javax.servlet.ServletConfig</p><p>javax.servlet.ServletContext</p><p>javax.servlet.http.HttpServletRequest</p><p>javax.servlet.http.HttpServletResponse</p><p>javax.servlet.http.Cookie</p><p>javax.servlet.http.HttpSession</p><p>javax.servlet.Filter</p><p>国标： GB2312   GBK    GB18030</p><p>UTF –&gt;  UCF（四个字节 2^31）</p><p>编码推荐使用 utf-8</p><p>getParameter() 函数必考</p><p>Web 传文档之前：</p><pre><code>Content-Type: text/htmlContent-Length: 13708   文档长度，显示下载速度</code></pre><p>smtp </p><pre><code>-- 简单邮件传输协议，起初只支持7位 ascii码，现在支持8位数据传输</code></pre><p>base64 编码</p><pre><code>-- 在24位缓冲区中，每6比特转换位一个 ascii 字符，空间大致变为原来的 4/3</code></pre><p>swift 语言</p><pre><code>-- 用空学学</code></pre><p>http 缓存原理（浏览器缓存）</p><p><a href="https://www.cnblogs.com/chenqf/p/6386163.html" target="_blank" rel="noopener">原理</a></p><p>http 响应代码</p><pre><code>-- https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status-- 1**  信息响应-- 2**  成功响应-- 3**  重定向-- 4**  客户端响应-- 5**  服务端响应</code></pre><p>Calendar (MIME)</p><pre><code>- text/plain 纯文本- text/html- text/xml   可扩展自标语言- text/json  传输数据- application/pdf- application/octet-stream  下载文件包- application/x-download    同上- Content-Disposition: filename=a.zip   自动保存文件名</code></pre><hr><h2 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h2><p>web.xml 中的session配置时间是分钟</p><pre><code>-- &lt;session-config&gt;--    &lt;session-timeout&gt;30&lt;/session-timeoiut&gt;-- &lt;/session-config&gt;</code></pre><p>javax.servlet.http.Session 中的设置时间是秒</p><pre><code>-- getMaxInactiveInterval()</code></pre><p>javax.servlet.http.Session 中的函数</p><pre><code>-- getAttribute(String name)-- getAttributeNames()-- getLastAccessedTime()    --&gt; long-- getMaxInactiveInterval()-- invalidate()-- removeAttribute(String name)-- setAttribute(String name, Object value)-- setMaxInactiveInterval(int interval)</code></pre><p>Web 应用中自定义的类最后支持序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pubilc <span class="class"><span class="keyword">class</span> <span class="title">Cart</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="comment">// 没有方法，仅用于 标示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可序列化类的所有子类型都是可序列化的</p><p>使用 session 的三种手段</p><pre><code>-- Cookie(客户端)-- url 重写-- 隐藏域</code></pre><p>没有Cookie，就没有Session</p><h4 id="RequestDispatcher"><a href="#RequestDispatcher" class="headerlink" title="RequestDispatcher"></a>RequestDispatcher</h4><p>forward 在 response uncommited 前使用，只处理头信息，不能包含响应信息</p><p>forward 前后都不能处理 response，转发给新页面处理</p><p>include 中的编码可以被 /servlet/b 中的编码覆盖<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">RequestDispatcher rd = request.getRequestDispatcher(<span class="string">"/servlet/b"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//          /servlet 前的/ 是当前web应用中的根，不一定是服务器的根</span></span><br><span class="line"></span><br><span class="line">request.setAttribute(<span class="string">"data"</span>, ...);</span><br><span class="line"></span><br><span class="line">rd.forward(request, reponse);       <span class="comment">// 在新页面获取rquest 中的信息</span></span><br><span class="line"></span><br><span class="line">response.rd.include(request, response)      <span class="comment">// 后续代码继续处理</span></span><br></pre></td></tr></table></figure></p><p>​    </p><hr><p>List, Set, Map</p><p>ServletConfig   ServletContext</p><p>Cookie</p><p>分布式内存</p><p>Maven 安装 jar包</p><hr><h2 id="第5讲"><a href="#第5讲" class="headerlink" title="第5讲"></a>第5讲</h2><p>url = <a href="http://localhost:8080/j2ee1/servlet/a?abc=123&amp;a=456" target="_blank" rel="noopener">http://localhost:8080/j2ee1/servlet/a?abc=123&amp;a=456</a></p><p>String contextPath = request.getContextPath();  上下文地址</p><pre><code>--&gt; 结果不唯一--&gt; servlet url为/servlet/a, 则返回 &quot;/j2ee1&quot;--&gt; 部署在根下，返回 &quot;&quot;</code></pre><p>get 方式提交数据通常是检索，改变数据可以用post</p><p>get 方式处理 和 post 方式处理(编码问题)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表单action的地址服务器解析，所以要相对服务器的根 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/j2ee1/servlet/a"</span> <span class="attr">method</span>=<span class="string">"post"</span></span></span><br><span class="line">    &lt;input type="text" name="wd" /&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"search"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>静态网页和动态网页都可以过滤</p><p>filter 对于Servlet中的request 和 response 都是同一个对象（内存地址一样）</p><p>过滤器的功能：</p><pre><code>--&gt; 1.认证(下载过滤，要登录时，下载的链接放到 request.getSession() 中)--&gt; 2.日志与审计--&gt; 3.图像转换--&gt; 4.压缩</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(request, response)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> start = System.currentMillis();</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">long</span> end = System.currentMillis();</span><br><span class="line">    getServletContext().log(<span class="string">"cost: "</span> + (end-start));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Filter 接口<br>    –&gt; init(FilterConfig filterConfig)<br>    –&gt; doFilter(request, response, FilterChain chain)</p><p>FilterChain</p><pre><code>--&gt; doFilter(request, response)  参数没有过滤链了</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filter</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> FilterConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig config)</span> <span class="keyword">throws</span>       ServletExcepion</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.config = config;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse response res, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">        <span class="comment">// 处理 request</span></span><br><span class="line">        </span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理 response</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="filter-处理请求乱码"><a href="#filter-处理请求乱码" class="headerlink" title="filter 处理请求乱码"></a>filter 处理请求乱码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(request, response, FilterChain chain)</span> <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 千万别忘了</span></span><br><span class="line">        chain.doFilter(request, response)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="filter-组件部署"><a href="#filter-组件部署" class="headerlink" title="filter 组件部署"></a>filter 组件部署</h4><p>web.xml配置：过滤器的过滤顺序与在web.xml 中filter-mapping 出现的顺序对应</p><p>注解配置：过滤器顺序按照类名的字符串比较规则比较，较小的先执行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 一个sevlet 可以分配很多 servlet-mapping ，也就是有多个 url 地址 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- filter 也可以有多个 filter-mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span><span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span><span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化参数，名值对存在 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span><span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 过滤 /servert 下的所有网页 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- *.jpg 可以过滤所有jpg文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>f1<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 只过滤指定servlet --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用户输入的拦截，容器内派发来的不拦截，默认是这样的，派发的不拦截 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截派发中的 forward(request, response) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截派发中的 include(request, response) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>INCLUDE<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截出错的信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="过滤器如何写"><a href="#过滤器如何写" class="headerlink" title="过滤器如何写"></a>过滤器如何写</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ServletRequest, ServletResponse 处理任何协议</span></span><br><span class="line">    <span class="comment">// HttpServletRequest, HttpServletResponse 处理HTTP协议</span></span><br><span class="line">    </span><br><span class="line">    <span class="function">pubic <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) res;</span><br><span class="line">        </span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        </span><br><span class="line">        String username = (String) session.getAttribute(<span class="string">"username"</span>);</span><br><span class="line">        <span class="keyword">if</span>(username == <span class="keyword">null</span> || username.length() == <span class="number">0</span>)&#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/login.html"</span>);</span><br><span class="line">            forward(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        chain.doFilter(request, respones);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤器注解写法"><a href="#过滤器注解写法" class="headerlink" title="过滤器注解写法"></a>过滤器注解写法</h4><p>多多少少 少一点，haha<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(dispatcherTypes = &#123;</span><br><span class="line">        DispatcherType.REQUEST,</span><br><span class="line">        DispatcherType.FORWARD,</span><br><span class="line">        DispatcherType.INCLUDE,</span><br><span class="line">        DispatcherType.ERROR</span><br><span class="line">    &#125;,</span><br><span class="line">    urlPatterns = (<span class="string">"/TimeFilter"</span>))</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="过滤器示例1"><a href="#过滤器示例1" class="headerlink" title="过滤器示例1"></a>过滤器示例1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/*"</span>,dispatcherTypes = &#123;DispatcherType.FORWARD,DispatcherType.REQUEST&#125;)</span><br><span class="line">...</span><br><span class="line">System.out.println(<span class="string">"filter---in"</span>);</span><br><span class="line">filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">System.out.println(<span class="string">"filter---out"</span>);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ----------------------  //</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/forward"</span>)</span><br><span class="line">...</span><br><span class="line">System.out.println(<span class="string">"/forward"</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------ //</span></span><br><span class="line">inex.jsp</span><br><span class="line">...</span><br><span class="line">&lt;% System.out.println(<span class="string">"index.jsp"</span>); %&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">filter---in   <span class="comment">// 第一次拦截器入栈</span></span><br><span class="line">/forward      <span class="comment">// ...</span></span><br><span class="line">filter---in   <span class="comment">// 第二次拦截器入栈</span></span><br><span class="line">index.jsp     <span class="comment">// ...</span></span><br><span class="line">filter---out  <span class="comment">// 第二次拦截器出栈</span></span><br><span class="line">filter---out  <span class="comment">// 第一次拦截器出栈</span></span><br></pre></td></tr></table></figure><h4 id="过滤器示例2"><a href="#过滤器示例2" class="headerlink" title="过滤器示例2"></a>过滤器示例2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/*"</span>,dispatcherTypes = &#123;DispatcherType.FORWARD,DispatcherType.REQUEST&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterImplA</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">System.out.println(<span class="string">"A---in"</span>);</span><br><span class="line">filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">System.out.println(<span class="string">"A---out"</span>);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ----------------------  //</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/*"</span>,dispatcherTypes = &#123;DispatcherType.FORWARD,DispatcherType.REQUEST&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilterImplB</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">System.out.println(<span class="string">"B---in"</span>);</span><br><span class="line">filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">System.out.println(<span class="string">"B---out"</span>);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ----------------------  //</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/forward"</span>)</span><br><span class="line">...</span><br><span class="line">System.out.println(<span class="string">"/forward"</span>);</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(request, response);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// ------------ //</span></span><br><span class="line">inex.jsp</span><br><span class="line">...</span><br><span class="line">&lt;% System.out.println(<span class="string">"index.jsp"</span>); %&gt;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A---in    <span class="comment">// A1入栈</span></span><br><span class="line">B---in    <span class="comment">// B1入栈</span></span><br><span class="line">/forward</span><br><span class="line">A---in    <span class="comment">// A2入栈</span></span><br><span class="line">B---in    <span class="comment">// B2入栈</span></span><br><span class="line">index.jsp</span><br><span class="line">B---out   <span class="comment">// B2出栈</span></span><br><span class="line">A---out   <span class="comment">// A2出栈</span></span><br><span class="line">B---out   <span class="comment">// B1出栈</span></span><br><span class="line">A---out   <span class="comment">// A1出栈</span></span><br></pre></td></tr></table></figure><h4 id="过滤器登录验证实例"><a href="#过滤器登录验证实例" class="headerlink" title="过滤器登录验证实例"></a>过滤器登录验证实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将req进行强转</span></span><br><span class="line">HttpServletRequest request = (HttpServletRequest) req;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置编码</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取uri</span></span><br><span class="line">String uri = request.getRequestURI();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断uri</span></span><br><span class="line"><span class="keyword">if</span>(request.getSession().getAttribute(<span class="string">"login"</span>) != <span class="keyword">null</span> ||</span><br><span class="line">        uri.contains(<span class="string">"/login"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/loginVerifyCodeServlet"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/index.jsp"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/css/"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/js/"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/img/"</span>) ||</span><br><span class="line">        uri.contains(<span class="string">"/fonts/"</span>)</span><br><span class="line">) &#123;</span><br><span class="line">    chain.doFilter(req, resp);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ((HttpServletResponse)resp).setStatus(<span class="number">308</span>);</span><br><span class="line">    request.getRequestDispatcher(<span class="string">"/index.jsp"</span>).forward(req, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="登录Servlet"><a href="#登录Servlet" class="headerlink" title="登录Servlet"></a>登录Servlet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 密码一般使用 post 方法传数据</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse)</span> <span class="keyword">throws</span> ServletExceptoin, IOException</span>&#123;</span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 明文散列：MessageDigest, MD5, SHA1, SHA256</span></span><br><span class="line">        </span><br><span class="line">        request.getSession().setAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="tomcat-提交数据出现乱码"><a href="#tomcat-提交数据出现乱码" class="headerlink" title="tomcat 提交数据出现乱码"></a>tomcat 提交数据出现乱码</h4><p>“中国梦”</p><p>post</p><pre><code>--&gt; post 方式不出错, 在body中，服务器不处理--&gt; request.getParameter()</code></pre><p>get</p><pre><code>--&gt; get 方式出错，在header中--&gt; 数据包含在 url 中，转换为ascii码，效率低，传输数据少--&gt; 一个中文转两个字节(utf-8)--&gt; 服务器首先接收到 url 地址，tomcat用iso8859-1转码（一个字节一个字节的转码）</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对get请求有效，post应该也有效吧</span></span><br><span class="line">String wd = request.getParameter(<span class="string">"wd"</span>);</span><br><span class="line">wd = <span class="keyword">new</span> String(wd.getBytes(<span class="string">"ISO=8859-1"</span>), <span class="string">"UTF-8"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式一，每次都写</span></span><br><span class="line"><span class="comment">// 只对post请求有效，对get请求无效</span></span><br><span class="line"><span class="comment">// 在setCharacterEncoding 之前，不能执行request.getParameter(), 否则，setCharacterEncoding 无效</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式二，Filter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对get请求有效</span></span><br><span class="line"><span class="comment">// 方式三，在 /config/servlet.xml 中的 Connector 组件中添加</span></span><br><span class="line">    URLEncoding=<span class="string">"UTF-8"</span></span><br></pre></td></tr></table></figure><p>response.setCharacterEncoding() vs response.setContentType()</p><pre><code>--&gt; 一般使用response.setContentType()方法来设置HTTP 响应的编码，同时指定了浏览器显示的编码；--&gt; 使用此方法，会自动调用response.setCharacterEncoding()方法来通知浏览器以指定编码来解;--&gt; 使用此方法要在response.getWriter()执行之前或response提交之前；</code></pre><p><a href="https://blog.csdn.net/xiazdong/article/details/7217022/" target="_blank" rel="noopener">get, post乱码请求链接</a></p><h4 id="ServletConfig-读取-web-xml-中的初始化数据"><a href="#ServletConfig-读取-web-xml-中的初始化数据" class="headerlink" title="ServletConfig 读取 web.xml 中的初始化数据"></a>ServletConfig 读取 web.xml 中的初始化数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javax.servlet.*</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// javax.servlet.http.* 中已经重写好了</span></span><br><span class="line">String value = getInitParameter(<span class="string">"servlet"</span>);</span><br></pre></td></tr></table></figure><h4 id="init"><a href="#init" class="headerlink" title="init"></a>init</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种，重载时不需要调用 super.init(config)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException</span></span><br><span class="line"><span class="function"><span class="comment">// 最终被 GenericServlet.init(ServletConfig config)调用</span></span></span><br><span class="line"><span class="function"><span class="comment">// 但是 config仍然可以由getServletConfig() 获取</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 第二种</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException</span></span><br><span class="line"><span class="function"><span class="comment">// 重载时需要调用 super.init(config)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 实现在 Servlet.init(javax.Servlet.ServletConfig)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 综上，推荐使用 init()</span></span></span><br></pre></td></tr></table></figure><hr><p>如何获取 request 的ip 等信息</p><pre><code>--&gt; uri = request.getRequestURI();--&gt; URI = Universal Resource Identifier 统一资源标志符--&gt; URL = Universal Resource Locator 统一资源定位符--&gt; URN = Universal Resource Name 统一资源名称--&gt; URI 包含 URL + URN--&gt; 但一般区别不大，技术多用URI--&gt; A URI 可以进一步被分为定位符、名字或两者都是. 术语“Uniform Resource Locator” (URL) 是URI的子集, 除了确定一个资源,还提供一种定位该资源的主要访问机制(如其网络“位置”);</code></pre><p>明文散列：MessageDigest, MD5, SHA1, SHA256</p><p>实现关键字过滤</p><pre><code>--&gt; 关键字替代为 ***</code></pre><p>​    </p><hr><p>第一次上机作业：</p><pre><code>--&gt; servlet--&gt; jsp--&gt; jquery, ajax--&gt; redius--&gt; 加载资源文件使用相对地址</code></pre><p>​<br>​    </p><h2 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h2><p>类库：</p><pre><code>--&gt; javax.servlet.jsp</code></pre><p>在服务器运行，输出html到客户端</p><p>可以包含动态的js代码，动态的css代码</p><p>jsp 文件可以部署，可以声明配置文件</p><p>第一次访问jsp 文件慢，第二次就快了，（刷新后又慢了），有以下过程：</p><pre><code>time.jsp    --&gt;   time_jsp.java     --&gt;     time_jsp.class</code></pre><p>​    </p><h4 id="jsp-指令"><a href="#jsp-指令" class="headerlink" title="jsp 指令"></a>jsp 指令</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// page 指令</span></span><br><span class="line"><span class="comment">// session 默认是true，可以不写</span></span><br><span class="line"><span class="comment">// 必考：isErrorPage, 默认是false，只有在错误处理页面 /error.jsp 中才是 true</span></span><br><span class="line">&lt;%@ page session=<span class="string">"true"</span>  %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*, java.io.*"</span></span><br><span class="line">         <span class="comment">// contentType="text/html; charset=utf-8" // 不推荐 contentType, 因为肯定是 html，推荐pageEncoding</span></span><br><span class="line">         pageEncoding=<span class="string">"utf-8"</span></span><br><span class="line">         language=<span class="string">"java"</span></span><br><span class="line">         isErrorPage=<span class="string">"true"</span> errorPage=<span class="string">"/error.jsp"</span></span><br><span class="line">         <span class="comment">// buffer="none"   不推荐none，默认8KB</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// include 指令，输出其他文件的内容</span></span><br><span class="line">&lt;$@ include file=<span class="string">"a.html"</span> %&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义标记，这个指令必考</span></span><br><span class="line">&lt;%@ taglib uri=<span class="string">"/WEB-INF/a.tld"</span> prefix=<span class="string">"t"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="jsp-动作"><a href="#jsp-动作" class="headerlink" title="jsp 动作"></a>jsp 动作</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page="/servlet/a"&gt;&lt;/jsp:include&gt;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">&lt;jsp:include page=<span class="string">"/servlet/a"</span> /&gt;</span><br></pre></td></tr></table></figure><p>// 重点重点重点重点重点重点重点重点重点重点重点重点（局部变量创建）<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">"a"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.abc.Student"</span></span><br><span class="line">    scope=<span class="string">"page|request|session|application"</span> /&gt;</span><br><span class="line"><span class="comment">// page，作用域只在当前页面</span></span><br><span class="line"><span class="comment">// request，每次new一个对象</span></span><br><span class="line"><span class="comment">// session，作用域session，先访问session，没有新建，写入session</span></span><br><span class="line"><span class="comment">// application，共享数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 相当于 com.abc.Student  a</span></span><br><span class="line"><span class="comment">// 如果没有，则创建</span></span><br></pre></td></tr></table></figure></p><p>// 获取age<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:getProperty name=<span class="string">"a"</span> property=<span class="string">"age"</span> /&gt;</span><br><span class="line"><span class="comment">// 这个name 与 id 一样</span></span><br></pre></td></tr></table></figure></p><p>// 重设age<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:setProperty name=<span class="string">"a"</span> property=<span class="string">"age"</span> value=<span class="string">"20"</span> /&gt;</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line"><span class="comment">// 从客户端获取 age，写入变量age， 似乎不需要考虑null</span></span><br><span class="line">&lt;jsp:setProperty name=<span class="string">"a"</span> property=<span class="string">"age"</span> param=<span class="string">"age"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>// 匹配<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:setProperty name=<span class="string">"a"</span> property=<span class="string">"*"</span> /&gt;   <span class="comment">// 根据property和param相同值自动匹配</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> age, name, height;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;<span class="keyword">this</span>.age = age;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> age;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 易错 javaBean 首字母全小写</span></span><br><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"PageSize"</span> /&gt;   <span class="comment">// 因为首字母大写，自动匹配时出错,所以要</span></span><br><span class="line">    <span class="comment">// &lt;jsp:setProperty name="a" property="pageSize" param="PageSize" /&gt;</span></span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h4 id="jsp-1"><a href="#jsp-1" class="headerlink" title="jsp"></a>jsp</h4><p>表达式<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= <span class="number">5</span> + <span class="number">6</span> %&gt;        <span class="comment">// 表达式，不能有分号</span></span><br><span class="line">&lt;%= <span class="keyword">new</span> String() %&gt;</span><br></pre></td></tr></table></figure></p><p>声明<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%! <span class="keyword">int</span> i; %&gt;       <span class="comment">// 一般不声明成员变量，多线程并发危险</span></span><br><span class="line">&lt;%! function() %&gt;   <span class="comment">// 一般声明函数</span></span><br></pre></td></tr></table></figure></p><p>注释<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- --&gt;</span><br></pre></td></tr></table></figure></p><h5 id="include动作-vs-include指令"><a href="#include动作-vs-include指令" class="headerlink" title="include动作 vs include指令"></a>include动作 vs include指令</h5><p>include指令(转换时) 只能包含静态文本文件(html, txt)</p><p>include动作(运行时) 既能包含静态文件，又能包含动作文件(/servlet/a)</p><h4 id="提交参数空串与null"><a href="#提交参数空串与null" class="headerlink" title="提交参数空串与null"></a>提交参数空串与null</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String pageSize = request.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://localhost:8080/a/abc.jsp?pageSize=&amp;page=1</span></span><br><span class="line"><span class="comment">// 结果是空串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// http://localhost:8080/a/abc.jsp?pagesize=123</span></span><br><span class="line"><span class="comment">// 返回null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 解决</span></span><br><span class="line"><span class="keyword">if</span>(pageSize == <span class="keyword">null</span>)&#123;</span><br><span class="line">    pageSize = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="jsp-输出信息"><a href="#jsp-输出信息" class="headerlink" title="jsp 输出信息"></a>jsp 输出信息</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法一：嵌套</span></span><br><span class="line">now : &lt;%= <span class="keyword">new</span> java.util.Date() %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二：引入java代码</span></span><br><span class="line">&lt;%</span><br><span class="line">    response.getWriter().println(<span class="string">"now: "</span>);</span><br><span class="line">    response.getWriter(java.util.Date());</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="jsp-变量-必考"><a href="#jsp-变量-必考" class="headerlink" title="jsp 变量(必考)"></a>jsp 变量(必考)</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HttpServletRequest  request</span><br><span class="line">HttpServletResponse response</span><br><span class="line">HttpSession session</span><br><span class="line">ServletConfig config</span><br><span class="line">ServletContext application</span><br><span class="line">**JspWriter out**</span><br><span class="line">**PageContext pageContext**     <span class="comment">// 页面上下文   获取request: pageContext.getRequest();</span></span><br><span class="line">page <span class="keyword">this</span></span><br><span class="line">Exception exception     <span class="comment">// 正常页面中不存在，只在错误处理页面中存在这个对象</span></span><br></pre></td></tr></table></figure><h4 id="JspWriter-vs-PrintWriter"><a href="#JspWriter-vs-PrintWriter" class="headerlink" title="JspWriter vs PrintWriter"></a>JspWriter vs PrintWriter</h4><p>JspWriter 抛出IOException</p><p>JspWriter 流缓存满了，再到 response.getWriter()，默认8KB<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page buffer=<span class="string">"none"</span> %&gt;   <span class="comment">// 没有缓存</span></span><br></pre></td></tr></table></figure></p><h4 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h4><p>常用的大约20种</p><p>fascade 门面模式（要求）</p><p>adapter 适配器模式（要求）</p><p>mvc 设计模式（模型，，适配器）</p><p>mui 设计模式</p><h4 id="pageContext-重点"><a href="#pageContext-重点" class="headerlink" title="pageContext(重点)"></a>pageContext(重点)</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="comment">// 法一</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/b.jsp"</span>).forward(request, response);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 法二</span></span><br><span class="line">pageContext.forward(<span class="string">"b.jsp"</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><hr><p>标记编程</p><p>el表达式语言</p><h2 id="自定义标记"><a href="#自定义标记" class="headerlink" title="自定义标记"></a>自定义标记</h2><p>将 jsp 中的 java 代码分离出</p><p>自定义标记包：javax.servlet.jsp.tagext.*;</p><p>pageContext 包中的东西一定要会</p><h4 id="分页程序"><a href="#分页程序" class="headerlink" title="分页程序"></a>分页程序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PageBean </span></span><br><span class="line"><span class="comment">// view</span></span><br><span class="line"><span class="comment">//      --&gt; s.jsp</span></span><br><span class="line"><span class="comment">//      --&gt; &lt;jsp:useBean id="page" class="PageBean" scope="session" /&gt;</span></span><br><span class="line"><span class="comment">//          --&gt; 这里scope 的值是必考的</span></span><br><span class="line"><span class="comment">//      --&gt; &lt;jsp:setProperty name="page" property="*" /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// jsp 就是展示的，最好不要有业务逻辑</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> list data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentPage;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentPage</span><span class="params">(<span class="keyword">int</span> currentPage)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.currentPage = currentPage;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> list <span class="title">getCurrentPageData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = pageSize * (currentPage - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> end = start + pageSize;</span><br><span class="line">        <span class="keyword">if</span>(end &gt; data.size())&#123;</span><br><span class="line">            end = data.size();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data.subList(start, end);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotalPages</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNextPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ...;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% numguess.reset(); %&gt;</span><br><span class="line">&lt;t: reset /&gt;</span><br><span class="line"></span><br><span class="line">now: &lt;%= <span class="keyword">new</span> java.util.Date() %&gt;</span><br><span class="line">&lt;t:time&gt;</span><br><span class="line"></span><br><span class="line">&lt;/t:time&gt;</span><br></pre></td></tr></table></figure><h4 id="javax-servlet-jsp-tagext"><a href="#javax-servlet-jsp-tagext" class="headerlink" title="javax.servlet.jsp.tagext"></a>javax.servlet.jsp.tagext</h4><p>文档：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 初始化</span><br><span class="line">void setPageContext(PageContext pc);</span><br><span class="line"></span><br><span class="line">// 释放（不被销毁），现在又变成销毁的了</span><br><span class="line">void release();</span><br><span class="line"></span><br><span class="line">// 起始标记</span><br><span class="line">int doStartTag() throws JspException</span><br><span class="line"></span><br><span class="line">// 结束标记</span><br><span class="line">int doEndTag() throws JspException</span><br><span class="line"></span><br><span class="line">// 父亲标记</span><br><span class="line">Tag getParent()</span><br><span class="line">void setParent(Tag t)</span><br></pre></td></tr></table></figure></p><p>实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException</span>&#123;</span><br><span class="line">        <span class="comment">// out.println 抛出异常</span></span><br><span class="line">        <span class="comment">// 但是不能异常声明，因为是继承的 TagSupport, 原函数就是 throws JspException</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// Fascade 设计模式</span></span><br><span class="line">            JspWriter out = pageContext.getOut();</span><br><span class="line">            out.println(<span class="keyword">new</span> java.util.Date());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// return SKIP_BODY;</span></span><br><span class="line">        <span class="comment">// return EVAL_BODY_INCLUDE;</span></span><br><span class="line">        <span class="comment">// return SKIP_PAGE;</span></span><br><span class="line">        <span class="keyword">return</span> EVAL_PAGE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>返回值:</p><pre><code>--&gt; return SKIP_BODY;--&gt; return EVAL_BODY_BUFFERED;--&gt; return EVAL_BODY_INCLUDE;--&gt; return EVAL_PAGE;--&gt; return SKIP_PAGE;</code></pre><h4 id="将数据写到-request-session"><a href="#将数据写到-request-session" class="headerlink" title="将数据写到 request, session"></a>将数据写到 request, session</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request: context...get...setAttribute()</span><br><span class="line">session:</span><br></pre></td></tr></table></figure><h4 id="新版本-tag（tag-handler标记处理程序）"><a href="#新版本-tag（tag-handler标记处理程序）" class="headerlink" title="新版本 tag（tag handler标记处理程序）"></a>新版本 tag（tag handler标记处理程序）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">now: &lt;t:time /&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span></span>&#123;</span><br><span class="line">    <span class="comment">// SimpleTagSupport 下又 getJspContext(), setJspContext()</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException</span>&#123;</span><br><span class="line">        <span class="comment">// pageContext 变成私有，要读写函数才能访问</span></span><br><span class="line">        <span class="comment">// 下面一行错误，getPageContext 处理 http 协议</span></span><br><span class="line">        <span class="comment">// getPageContext().getOut().println(new java.util.Date());</span></span><br><span class="line">        <span class="comment">// getJspContext() 与协议无关</span></span><br><span class="line">        ((PageContext) getJspContext()).getOut().println(<span class="keyword">new</span> java.util.Date();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实例-lt-t-reset-gt"><a href="#实例-lt-t-reset-gt" class="headerlink" title="实例 &lt;t:reset&gt;"></a>实例 &lt;t:reset&gt;</h4><p>实现 &lt;% numguess.reset(); %&gt; 的标记</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> num.NumberGuessBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResetTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException</span>&#123;</span><br><span class="line">        PageContext pc = (PageContext) getJspContext();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// pc.getSession();</span></span><br><span class="line">        <span class="comment">// pc.getOut();</span></span><br><span class="line">        <span class="comment">// pc.getAttribute();</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        </span><br><span class="line">        NumberGuessBean numguess = (NumberGuessBean) pc.getSession().getAttribute(<span class="string">"num"</span>);</span><br><span class="line">        numguess.reset();</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部署 /WEB-INF/a.tld<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tag-lib</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- jar 包，不能在taglib 指令中访问，在这设计，taglib访问 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://www.abc.com/ns/javaee<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>reset<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>ResetTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- &lt;body-content&gt;empty&lt;/body-content&gt; 内容设为空，不能有值 --&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- &lt;body-content&gt;script&lt;/body-content&gt; --&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 默认jsp --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">tag-lib</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命名空间</span></span><br><span class="line">&lt;t:author xmlns=<span class="string">"www.zhengxiang4056.club"</span>   <span class="comment">// 默认命名空间</span></span><br><span class="line">          xmlns:t=<span class="string">"http://www.abc.com/ns/book"</span></span><br><span class="line">          xmlns:p=<span class="string">"wwwwwww.xyz.com"</span></span><br><span class="line">          xmlns:p2=<span class="string">"www.qixqi.club/iqiq"</span>&gt;</span><br><span class="line"><span class="comment">// 这个 http://www.abc.com/ns/book 是uri, 不是url, 不是超链接，只要全世界互联网唯一就行，只是命名，随便写，不一定是url </span></span><br><span class="line"><span class="comment">// 这样 author实际上就是 http://www.abc.com/ns/book/author</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;% numguess.reset(); %&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://www.abc.com/ns/javaee"</span> prefix=<span class="string">"t"</span> %&gt;</span><br></pre></td></tr></table></figure><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ol><li>tag handle<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResetTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException</span>&#123;</span><br><span class="line">        PageContext pc = (PageContext) getJspContext();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// pc.getSession();</span></span><br><span class="line">        <span class="comment">// pc.getOut();</span></span><br><span class="line">        <span class="comment">// pc.getAttribute();</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        </span><br><span class="line">        NumberGuessBean numguess = (NumberGuessBean) pc.getSession().getAttribute(<span class="string">"num"</span>);</span><br><span class="line">        numguess.reset();</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>2 .tld<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/WEB/page.tld</span><br><span class="line"><span class="tag">&lt;<span class="name">tag-lib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uri</span>&gt;</span>mypage<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>page<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>PageTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>data<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>java.util.list<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span> <span class="comment">&lt;!-- true必须提供 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- run time express value --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 默认true, true支持动态表达式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag-lib</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>3 .jsp<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">"/WEB-INF/page.tld"</span> prefix=<span class="string">"x"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;% </span><br><span class="line">&lt;x:page data=&lt;%= list %&gt; &gt;</span><br></pre></td></tr></table></figure></p><h2 id="第三次作业"><a href="#第三次作业" class="headerlink" title="第三次作业"></a>第三次作业</h2><p>增删改查放到Service类中</p><h4 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h4><p>包：javax.sql.DataSource</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Connection</span></span><br><span class="line"><span class="comment">//  Statement   不建议使用，不安全，慢</span></span><br><span class="line"><span class="comment">// PreparedStatement    建议使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这一行如果在 service 中，连接过多，大大降低资源</span></span><br><span class="line"><span class="comment">// 这一行需要建立连接，很慢</span></span><br><span class="line">Connection conn = DriverManager.getConnection(</span><br><span class="line">    <span class="string">"jdbc:mysql://localhost:3306/test"</span>,</span><br><span class="line">    <span class="string">"java"</span>,</span><br><span class="line">    <span class="string">"java1234"</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Driver driverClassName = <span class="keyword">null</span>;</span><br><span class="line">Class.forName(driverClassName);</span><br><span class="line"></span><br><span class="line">Statement stmt = conn.createStatement(<span class="string">"select ..."</span>);</span><br><span class="line">ResultSet rs = stmt.executeQuery(<span class="string">"select ..."</span>);</span><br><span class="line"></span><br><span class="line">PreparedStatement</span><br></pre></td></tr></table></figure><p>读取配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- jdbc.properties --&gt;</span><br><span class="line">driverClassName = com.mysql.jdbc.Driver</span><br><span class="line">username = java</span><br><span class="line">password = java1234</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取文件</span></span><br><span class="line">main()&#123;</span><br><span class="line">    Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">    <span class="comment">// 不推荐下一行的方法</span></span><br><span class="line">    <span class="comment">// InputStream in = new FileInputStream("jdbc.properties");</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 推荐使用</span></span><br><span class="line">    <span class="keyword">this</span>.getClass().getResourceAsStream(<span class="string">"jdbc.properties"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载</span></span><br><span class="line">    p.load(in);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取属性</span></span><br><span class="line">    String driverClassName = p.getProperty(<span class="string">"driverClassName"</span>);</span><br><span class="line">    </span><br><span class="line">    Class.forName(driverClassName);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>连接池<br>/META-INF/context.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span> = <span class="string">""</span> <span class="attr">path</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Resource</span> <span class="attr">name</span>=<span class="string">"jdbc/ExamDB"</span> <span class="attr">auth</span>=<span class="string">"Container"</span> <span class="attr">type</span>=<span class="string">"javax.sql.DataSource"</span> <span class="attr">maxTotal</span>=<span class="string">"100"</span> <span class="attr">maxIdle</span>=<span class="string">"30"</span> <span class="attr">maxWaitMillis</span>=<span class="string">"1"</span> <span class="attr">usernmae</span>=<span class="string">"javauser"</span> <span class="attr">password</span>=<span class="string">"javadude"</span> <span class="attr">driver</span>=<span class="string">""</span> <span class="attr">url</span>=<span class="string">"jdbc:mysql://localhost:3306/javatest"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.*;</span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line">import javax.naming.Context;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 创建命名服务</span><br><span class="line">// javax.naming.Context cxt = new InitialContext();</span><br><span class="line">Context cxt = new InitialContext();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 创建连接池</span><br><span class="line">// java:comp/env 前缀，进程内的，辟邪的</span><br><span class="line">// java:comp/env 分布式，进程外的，不写前缀  ctx.lookup(&quot;jdbc/ExamDB&quot;);</span><br><span class="line">DataSource ds = (DataSource) ctx.lookup(&quot;java:comp/env/jdbc/ExamDB&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// apache common dbcp</span><br><span class="line">DataSource ds = BasicDataSource();</span><br><span class="line">// 法一：静态，最好不用</span><br><span class="line">public DBUtils&#123;</span><br><span class="line">    public static</span><br><span class="line">&#125;</span><br><span class="line">// 法二：存储在 servletContext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 获取连接池中的连接</span><br><span class="line">Connection conn = ds.getConnection();</span><br><span class="line"></span><br><span class="line">Driver driverClassName = null;</span><br><span class="line">Class.forName(driverClassName);</span><br><span class="line"></span><br><span class="line">Statement stmt = conn.createStatement(&quot;select ...&quot;);</span><br><span class="line">ResultSet rs = stmt.executeQuery(&quot;select ...&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">con.close();        // 释放连接</span><br></pre></td></tr></table></figure><h4 id="命名服务"><a href="#命名服务" class="headerlink" title="命名服务"></a>命名服务</h4><p>包: javax.naming.Context</p><pre><code>--&gt; lookfor 函数，返回object，需要强制转换--&gt; bind 函数，绑定--&gt; reBind 函数，重新绑定</code></pre><p>商业包：javax.naming.NamingContext</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">javax.naming.Context cxt = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) ctx.lookup(<span class="string">"java:comp/env/jdbc/ExamDB"</span>);</span><br><span class="line"></span><br><span class="line">Cart cart = <span class="keyword">new</span> Cart();</span><br><span class="line">ctx.bind(<span class="string">"/ABC/XYZ/mycart"</span>, cart);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 法一</span></span><br><span class="line">Context c1 = (Context) ctx.lookup(<span class="string">"/ABC"</span>);</span><br><span class="line">Context c2 = (Context) c1.lookup(<span class="string">"/XYZ"</span>);</span><br><span class="line">Cart cart = (Cart) c2.lookup(<span class="string">"mycart"</span>);</span><br><span class="line"><span class="comment">// 法二</span></span><br><span class="line">Cart cart = (Cart) ctx.lookup(<span class="string">"/ABC/XYZ/mycart"</span>);</span><br></pre></td></tr></table></figure><hr><h2 id="struts-框架"><a href="#struts-框架" class="headerlink" title="struts 框架"></a>struts 框架</h2><p><em>org.apache.struts.actions.DispatchAction(源代码重点)</em></p><p><em>DispatchAction处理函数映射的机制与流程（eg计算器），问答题，详细叙述</em></p><pre><code>--&gt; 类似与 Servlet 中的 service 根据 method 分发为 doGet, doPost</code></pre><p>解决控制器类的复用性 Controller 类，降低类的粒度，提高类的可复用性</p><p>为什么有复用性问题：modules中</p><p>基于 mvc 结构的框架</p><p>a rapid framework for web development based on JavaEE</p><p>请求经过：前端控制器、action、后端控制器、module</p><p>org.apache.struts.action<br>    Action 类</p><p>前端控制器 org.apache.struts.action.ActionServlet</p><p>前端控制器的流程、职责（考试）</p><p>后端控制器是单实例的（考试）</p><p>前端控制器处理输入数据，封装成 Beans 对象</p><pre><code>--&gt; ActionServlet 前端控制器--&gt; struts框架主要实现 ActionForward函数--&gt; public ActionForward execute Action</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Struts Blank Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>action<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.struts.action.ActionServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>config<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">&lt;!-- 考试题：sturts 项目的配置文件不一定是 struts-config.xml , 可以修改--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/struts-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 获取config, getServletConfig().getInitParameter("config"); --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>action<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;url-pattern&gt;/do/delete&lt;/url-pattern&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>action<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">path</span>=<span class="string">"/Input"</span> <span class="attr">type</span>=<span class="string">"org.apache."</span></span></span><br></pre></td></tr></table></figure></p><hr><p>jndi<br>使用 struts 框架的action 做计算器</p><p>Java 反射机制：Class, Method</p><p>calc.add(5, 6)</p><p>String method = request.getParameter(“method”);</p><p>Method m = calc.getClass().getMethod(method);</p><p>m.invoke(m, 5, 6);</p><hr><h2 id="struts-再讲"><a href="#struts-再讲" class="headerlink" title="struts 再讲"></a>struts 再讲</h2><p>controller 控制软件运行的流程，映射成 mapping</p><p>考试：如何导入一个 struts 工程</p><h4 id="建立基于-struts-的web程序"><a href="#建立基于-struts-的web程序" class="headerlink" title="建立基于 struts 的web程序"></a>建立基于 struts 的web程序</h4><ol><li><p>项目结构</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c:\abc\s1</span><br><span class="line">    WEB-INF</span><br><span class="line">        classes</span><br><span class="line">        lib</span><br><span class="line">        web.xml</span><br></pre></td></tr></table></figure></li><li><p>导入 struts</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import struts 1, www.apache.org </span><br><span class="line">    </span><br><span class="line">    unzip, apps, docs, lib,</span><br><span class="line">    </span><br><span class="line">    copy jars to WEB-INF/lib</span><br></pre></td></tr></table></figure></li><li><p>编辑 web.xml, deploy ActionServlet(Front Controller)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 类名考过，选择题 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 命名规范：包名小写，类名大写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.struts.action.ActionServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置信息 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- struts 配置主要是关于后端控制器的 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 读取的信息放到 Map中，key 值是String, 可以根据url地址获取key值 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>config<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- struts 配置文件名可以修改 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/struts-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>s<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 方式一：&lt;url-pattern&gt;/do/*&lt;/url-pattern&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 方式二：使用后缀识别，.do文件类型访问前端控制器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>前端控制器类如何加载后端控制器类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ActionServlet&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(request, response)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 方法一，使用 Action</span></span><br><span class="line">        Action a = (Action) ...;</span><br><span class="line">        a.execute(...);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 方法二：不使用 Action, 使用反射机制</span></span><br><span class="line">        Object o = Beans.instantiate()&#123;</span><br><span class="line">            getClass().getClassLoader(),</span><br><span class="line">            className       <span class="comment">// className在配置文件中</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Method method = o.getClass().getMethod(methodName);</span><br><span class="line">        method.invoke(a, ...);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 区别</span></span><br><span class="line">        <span class="comment">// 方法一：快，眼中依赖 Action，耦合性强(struts1)</span></span><br><span class="line">        <span class="comment">// 方法二：耦合性弱</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>写 Action<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Action,</span><br><span class="line">    </span><br><span class="line"><span class="comment">// Struts 后端控制器的根类：Action类</span></span><br><span class="line"><span class="comment">// request 提交处理不了的请求</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddAction</span> <span class="keyword">extends</span> <span class="title">Action</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        CalcForm form = (CalcForm) form;</span><br><span class="line">        <span class="keyword">int</span> i = Integer.parseInt(form.getV1());     <span class="comment">// 输入数据</span></span><br><span class="line">        <span class="keyword">int</span> j = Integer.parseInt(form.getV2());</span><br><span class="line">        </span><br><span class="line">        Calc c = <span class="keyword">new</span> Calc();</span><br><span class="line">        <span class="keyword">int</span> result = c.add(i, j);</span><br><span class="line">        form.setResult(<span class="string">""</span> + result);</span><br><span class="line">        </span><br><span class="line">        ActionForward r = mapping.findForward(<span class="string">"result"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>struts-config.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struct-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 不考 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">formBean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">formBean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">action-mapping</span> <span class="attr">type</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">path</span>=<span class="string">"/welcome"</span> <span class="attr">forward</span>=<span class="string">"/welcome.jsp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set-property</span> <span class="attr">property</span>=<span class="string">"example"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- add.do 已经在前端控制器类中筛选 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">"AddAction"</span> <span class="attr">path</span>=<span class="string">"/add"</span> <span class="attr">name</span>=<span class="string">"calcForm"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 输出页面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">forward</span> <span class="attr">name</span>=<span class="string">"result"</span> <span class="attr">path</span>=<span class="string">"result.jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struct-config</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>CalcForm 类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalcForm</span> <span class="keyword">extends</span> <span class="title">ActionForm</span></span>&#123;</span><br><span class="line">    <span class="comment">// 最好使用 String, 用 int 转换时可能出现前端异常</span></span><br><span class="line">    <span class="comment">// 数据处理最好不要让前端处理，逻辑放到后端</span></span><br><span class="line">    <span class="keyword">private</span> String v1, v2, result;  </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getV1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> v1;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setV1</span><span class="params">(String v1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.v1 = v1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 提高 public String getV1() 复用性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>提高 public String getV1() 复用性<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynaActioinForm</span> <span class="keyword">extends</span> <span class="title">ActionForm</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data; </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.get(name);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(String v1, Object value)</span></span>&#123;</span><br><span class="line">        map.put(v1, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="降低后端控制器的action"><a href="#降低后端控制器的action" class="headerlink" title="降低后端控制器的action"></a>降低后端控制器的action</h4><p><em>org.apache.struts.actions.DispatchAction(源代码重点)</em></p><p>群里代码</p><p>DispatchAction</p><hr><p>maven</p><p>类: Beans.instantiate();</p><p>java 的反射机制</p><hr><h2 id="struts-后讲"><a href="#struts-后讲" class="headerlink" title="struts 后讲"></a>struts 后讲</h2><p>java 资源文件是 properties</p><pre><code>--&gt; java.util.ResourceBundle 管理资源包--&gt; java.util.ResourceBundle(&quot;s4&quot;, new Locale(&quot;zh&quot;, &quot;CN&quot;));--&gt; 国际化，多语言显示时，可以写入不同的资源文件，根据地址选择不同的资源文件</code></pre><p>代码复用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工具类，业务逻辑</span></span><br><span class="line"><span class="comment">// 继承</span></span><br><span class="line"><span class="comment">// AOP 编程：在两段代码中，只有一行代码，前后代码复用，可以使用AOP 编程</span></span><br></pre></td></tr></table></figure></p><p>html 格式</p><pre><code>--&gt;物理格式： 只有一个根元素--&gt;逻辑格式： 应用逻辑决定存在的元素是否合法 (dtd, xsd&lt;类型丰富&gt;文件检查逻辑格式)</code></pre><p>​    </p><h4 id="struts1-和-struts2-的区别-选择题-，网上找一下"><a href="#struts1-和-struts2-的区别-选择题-，网上找一下" class="headerlink" title="struts1 和 struts2 的区别(选择题)，网上找一下"></a>struts1 和 struts2 的区别(选择题)，网上找一下</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// struts1 Action 函数中有HttpServletRequest, HttpServletResponse</span></span><br><span class="line"><span class="comment">// struts2 中没有</span></span><br><span class="line"><span class="comment">// struts1 中 ActionForward r = mapping.findForward("result");   return r; </span></span><br><span class="line"><span class="comment">// struts2 中 直接返回 return "result"; Action 函数 参数没有 ActionMapping map</span></span><br><span class="line"><span class="comment">// struts2 将ActionForm 与 Action 合并在一起</span></span><br><span class="line"><span class="comment">// struts2 缺点：多实例， struts1 是单实例的</span></span><br></pre></td></tr></table></figure><h4 id="struts2-的配置文件"><a href="#struts2-的配置文件" class="headerlink" title="struts2 的配置文件"></a>struts2 的配置文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">"s4.CalcAction"</span> <span class="attr">path</span>=<span class="string">"calc"</span> <span class="attr">method</span>=<span class="string">"add"</span> /&gt;</span></span><br></pre></td></tr></table></figure><hr><p>mvc 设计模式</p><p>struts commmand命令</p><p>jiveforum 软件，汉化过程就是重写资源包</p><p>native2ascii 软件，转换文本文件的编码</p><hr><h2 id="Spring-框架"><a href="#Spring-框架" class="headerlink" title="Spring 框架"></a>Spring 框架</h2><p>核心概念：Ioc, AOP</p><p>容器，两个对象之间的依赖关系转到对象与容器的依赖关系</p><h4 id="Ioc（必考）"><a href="#Ioc（必考）" class="headerlink" title="Ioc（必考）"></a>Ioc（必考）</h4><p>控制反转  –&gt;  松耦合</p><p>DI（必考）: 依赖注入，即组件之间的依赖关系由容器在运行期决定，形象地说，即由容器动态地将某种依赖关系注入到组件之中。</p><h4 id="初始化函数与构造函数的区别"><a href="#初始化函数与构造函数的区别" class="headerlink" title="初始化函数与构造函数的区别"></a>初始化函数与构造函数的区别</h4><p>构造函数创建类的过程中消耗比较多的内存</p><p>初始化可多次调用</p><h4 id="新建Spring-工程"><a href="#新建Spring-工程" class="headerlink" title="新建Spring 工程"></a>新建Spring 工程</h4><p>org.springframework.context<br>    –&gt; ApplicationContext<br>    –&gt; 封装了资源文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">spring framework</span><br><span class="line">JavaEE platform</span><br><span class="line"></span><br><span class="line">A a = <span class="keyword">new</span> A();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类加载器 getClass().getClassLoader()</span></span><br><span class="line"><span class="comment">// java 根类， java.lang.Object</span></span><br><span class="line"><span class="comment">// java 源类， java.lang.Class，虚拟机加载几个类，内存中就有几个Class类</span></span><br><span class="line">Object java.beans.Beans.instantiate(ClassLoader c1, String className);</span><br><span class="line"></span><br><span class="line">A a = <span class="keyword">new</span> A();</span><br><span class="line">Object o = Beans.instantiate(getClass().getClassLoader(), <span class="string">"A"</span>)  <span class="comment">//运行时创建对象，返回Object</span></span><br><span class="line"></span><br><span class="line">BeanFactory 接口</span><br><span class="line"></span><br><span class="line">考试：ApplicationContext 接口</span><br><span class="line">      FileSystemXmlApplicationContext  类，构造函数，读取xml文件参数，构造 Bean 组件，启动比较慢，可以延迟，没必要，支持多个配置文件，（文件系统）可以使用绝对路径和相对路径，<span class="keyword">new</span>创建，不可以打包到jar</span><br><span class="line">      ClassPathXmlApplicationContext 类，比FileSystem推荐使用, 可以归档到jar包，使用ClassLoader.instantiate 创建</span><br></pre></td></tr></table></figure><p>创建spring 应该放到 listener 中<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span></span></span><br></pre></td></tr></table></figure></p><p>听众接口 servelt.context.listener {servlet init,servlet destory}</p><p>ContextLoaderListener implements ServletContextListener</p><p>读取配置文件中的 listenerlocation<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextLoaderListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent sce)</span></span>&#123;</span><br><span class="line">        ServletContext cxt = sce.getServletContext();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取 xml 配置文件中的内容</span></span><br><span class="line">        String xmlFile = context.getInitParameter(<span class="string">"contextConfigLocation"</span>);</span><br><span class="line">        </span><br><span class="line">        XmlWebApplicationContext ac = <span class="keyword">new</span> XmlWebApplicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>声明 listener 和 读取初始化参数</em></p><h4 id="读取servlet-初始化参数"><a href="#读取servlet-初始化参数" class="headerlink" title="读取servlet 初始化参数"></a>读取servlet 初始化参数</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>a<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>a.AServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>servlet<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>www.baidu.com<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- *表示可以多配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:/resources/spring/*applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">doGet()&#123;</span><br><span class="line">    String value = getInitParameter(<span class="string">"servlet"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 或者</span></span><br><span class="line">    <span class="comment">// HttpServlet 实现了</span></span><br><span class="line">    <span class="comment">// 读取Servlet的配置参数</span></span><br><span class="line">    ServletContext/ServletConfig接口</span><br><span class="line">    String value = getServletConfig().getInitParameter(<span class="string">"servlet"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取整个应用参数</span></span><br><span class="line">    getServletContext().getInitParameter(<span class="string">"contextConfigLocation"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h4><p>Spring 文档</p><pre><code>--&gt; 切面（不是面向对象）--&gt; 连接点 --&gt; 切点（集）--&gt; 增强（advance, 执行的关键函数）</code></pre><hr><p>简单工厂模式、抽象工厂模式、抽象工厂方法</p><hr><h2 id="Spring-再讲"><a href="#Spring-再讲" class="headerlink" title="Spring 再讲"></a>Spring 再讲</h2><h4 id="理解FileSystemXmlApplicationContext-amp-ClassPathXmlApplication"><a href="#理解FileSystemXmlApplicationContext-amp-ClassPathXmlApplication" class="headerlink" title="理解FileSystemXmlApplicationContext &amp; ClassPathXmlApplication"></a>理解FileSystemXmlApplicationContext &amp; ClassPathXmlApplication</h4><p>考试：FileSystemXmlApplicationContext 与 ClassPathXmlApplication 加载文件的区别：</p><p>new FileSystemXmlApplicationContext(“d://beans.xml”);</p><p>new FileSystemXmlApplicationContext(“beans.xml”);   先读配置文件，需要明确文件在哪</p><p>ClassPathXmlApplication 把文件放到Class包中就行，推荐使用，beans.xml 和 class文件放到一起</p><h4 id="理解-XmlWebApp"><a href="#理解-XmlWebApp" class="headerlink" title="理解 XmlWebApp"></a>理解 XmlWebApp</h4><p>new(启动Web程序，new对象) –&gt; ServletContext 对象 –&gt; ServletContextEvent –&gt; ServletListener(定义的事件处理函数：contextInitialized, contextDestroyed) </p><p>servletconfig 是加载组件后才生成的</p><p>一个 Web 程序就有一个 ServletContext(不考虑分布式)</p><p>Listener 也是一个组件，客户端不需要访问，不需要Listener-Mapping，也需要部署到 web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>SpringContextListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">&lt;!-- 组件中的 init, 存在 ServletConfig --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用 获取初始化值函数获取 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>x<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>     <span class="class"><span class="keyword">interface</span> <span class="title">ServletContextListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent sce)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 命名服务</span></span><br><span class="line">        Context cxt = <span class="keyword">new</span> InitialContext();</span><br><span class="line">        <span class="comment">// 本地数据源</span></span><br><span class="line">        DataSource ds = (DataSource)ctx.lookup(<span class="string">"java:comp/env/jdbc/ExamDB"</span>);</span><br><span class="line">        <span class="comment">// 将数据源ds存储在 ServletContext</span></span><br><span class="line">        <span class="comment">// ServletContext sc = (ServletContext) sce.getSource();  // java代码，太过复杂</span></span><br><span class="line">        ServletContext sc = sce.getServletContext();    <span class="comment">// j2ee代码，两个等价</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent sce)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="理解-JavaEE-Web-Application-集成-struts"><a href="#理解-JavaEE-Web-Application-集成-struts" class="headerlink" title="理解 JavaEE Web Application 集成 struts"></a>理解 JavaEE Web Application 集成 struts</h4><h4 id="理解-JaveEE-Web-Application-如何集成-Spring框架（考试重点，分值大）"><a href="#理解-JaveEE-Web-Application-如何集成-Spring框架（考试重点，分值大）" class="headerlink" title="理解 JaveEE Web Application 如何集成 Spring框架（考试重点，分值大）"></a>理解 JaveEE Web Application 如何集成 Spring框架（考试重点，分值大）</h4><p>ContextLoaderListener 实现什么接口 ServletContextListener</p><p>如何读取配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>ServletConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- classpath: 推荐使用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- classpath*: 更慢，谨慎使用，从所有的类加载路径中找spring配置文件，比如jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:/resources/spring/*applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="理解Spring-framework-配置"><a href="#理解Spring-framework-配置" class="headerlink" title="理解Spring framework 配置"></a>理解Spring framework 配置</h4><p>通常 ApplicationContext.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id标识符唯一 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">class</span>=<span class="string">"a.b.c.Hello"</span> /&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- name标识符可以重名，不推荐重名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 也可以给同一个bean组件多个名字，不推荐 </span></span><br><span class="line"><span class="comment">        &lt;bean name="a,b,c" class="" /&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"a"</span> <span class="attr">class</span>=<span class="string">"a.b.c.Hello"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- bean组件不给命名的话，spring自动命名，小写</span></span><br><span class="line"><span class="comment">        &lt;bean class="a.Student" /&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 工厂方法创建 bean</span></span><br><span class="line"><span class="comment">        &lt;bean id="clientService" class="examples.ClientService"</span></span><br><span class="line"><span class="comment">        factory-bean="serviceLocator"</span></span><br><span class="line"><span class="comment">        factory-name="createInstance" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;!-- 使用 examples.ClientService.createInstance函数创建对象 --&gt;</span>(error?)</span><br><span class="line">        <span class="comment">&lt;!-- 加factory-bean后使用 serviceLocator.createInstance创建 --&gt;</span></span><br><span class="line">    --&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>bean 的创建可以由构造函数或者延迟创建<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"beanOne"</span> <span class="attr">class</span>=<span class="string">"x.y.ThingOne"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">ref</span>=<span class="string">"beanTwo"</span> <span class="attr">type</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">ref</span>=<span class="string">"beanThree"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"x.y.ThingTwo"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"x.y.ThingThree"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.ExampleBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">type</span>=<span class="string">"int"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">type</span>=<span class="string">"String"</span> <span class="attr">value</span>=<span class="string">"fe"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.ExampleBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">name</span>=<span class="string">"years"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">name</span>=<span class="string">"ultimateAnswer"</span> <span class="attr">value</span>=<span class="string">"fe"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.ExampleBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">name</span>=<span class="string">"years"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contructor-arg</span> <span class="attr">name</span>=<span class="string">"ultimateAnswer"</span> <span class="attr">value</span>=<span class="string">"fe"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>setter 方法注入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.ExampleBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"beanOne"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"anotherExampleBean"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"beanOne"</span> <span class="attr">rel</span>=<span class="string">"anotherExampleBean"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>java 注解实现bean 配置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConfig</span></span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"myBean"</span>, scope=<span class="string">""</span>)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Spring配置连接池<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="xml-属性-or-子元素"><a href="#xml-属性-or-子元素" class="headerlink" title="xml 属性 or 子元素"></a>xml 属性 or 子元素</h4><p>推荐使用子元素，唯一性的子元素最好使用属性<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">student</span> <span class="attr">id</span>=<span class="string">"201792179"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>郑翔<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">grade</span>&gt;</span>3<span class="tag">&lt;/<span class="name">grade</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h4><p>获取 ApplicationContext</p><ol><li>全局静态变量</li><li>Aware 接口，只有一个函数</li><li>也可以凭借 DI</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicatoinContext act)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ApplicationContext = act;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ApplicationContextAware</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicatoinContext act)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ApplicatoinContext = act;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> getApplicatoinContext</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebApplicatoinContextUtils      工具类中的函数都是静态的</p><h4 id="bean对象的作用域"><a href="#bean对象的作用域" class="headerlink" title="bean对象的作用域"></a>bean对象的作用域</h4><p>默认是单例模式，只有一个实例</p><p>singleton vs prototype 必考</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">""</span>, <span class="attr">scope</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- singleton 单例 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- prototype 模型 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- request  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- session --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- application --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  --&gt;</span></span><br></pre></td></tr></table></figure><h4 id="spring配置文件"><a href="#spring配置文件" class="headerlink" title="spring配置文件"></a>spring配置文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span> /&gt;</span><span class="comment">&lt;!-- 可以不写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">""</span> /&gt;</span><span class="comment">&lt;!-- 扫描 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--spring对配置文件的加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholderlocation="classpath:jdbc.proerties"</span> /&gt;</span><span class="comment">&lt;!-- 最多出现一次 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 加载多个 class="org.springframework.beans.factory.config.Properties" --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注解，在Bean中注入--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--@Value("$&#123;abc&#125;")，自动完成类型转换    --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String abc;--&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Spring-mvc"><a href="#Spring-mvc" class="headerlink" title="Spring mvc"></a>Spring mvc</h2><p>mvc设计模式，具有图形的应用程序，视图与业务逻辑</p><p>控制器的主要功能时 Mapping，控制视图和业务逻辑的映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoader<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLoaction<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/conf/spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取 context-param 中的spring配置文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextLoaderListener</span> <span class="keyword">implements</span> <span class="title">ServletContextLoader</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent sce)</span></span>&#123;</span><br><span class="line">        String filename = sce.getServletContext().getInitParameter(<span class="string">"contextConfigLocation"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Servlet, ServletConfig, HttpServlet, ServletContext</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="web-xml-中导入前端"><a href="#web-xml-中导入前端" class="headerlink" title="web.xml 中导入前端"></a>web.xml 中导入前端</h4><p>HttpServlet 实现 Servlet接口和 ServletContext接口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web.xml --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这个子元素必须有，Servlet容器新增加的特性，支持多模块开发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">absolute-ordering</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>app<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.Dispatcher<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span><span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;param-value&gt;/WEB-INF/spring.xml&lt;/param-value&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多个配置文件一&lt;param-value&gt;/WEB-INF/*.xml&lt;/param-value&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多个配置文件二&lt;param-value&gt;/WEB-INF/a.xml, /WEB-INF/b.xml&lt;/param-value--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用类路径即class文件夹&lt;param-value&gt;classpath:a.xml&lt;/param-value&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用类路径&lt;param-value&gt;classpath*:a.xml&lt;/param-value&gt;不推荐使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- servlet 可以映射给多个 url --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.action<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--拦截所有 &lt;url-pattern&gt;/&lt;/url-pattern&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="对比配置文件"><a href="#对比配置文件" class="headerlink" title="对比配置文件"></a>对比配置文件</h4><p>业务逻辑层，不与视图有关<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLoaction<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/conf/spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>与视图有关<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>两者配置一个就行，老师推荐使用前者（好像是）</p><h4 id="servlet-映射"><a href="#servlet-映射" class="headerlink" title="servlet 映射"></a>servlet 映射</h4><p><url-pattern>中的映射优先级下降顺序（易错 /*优先级更高）</url-pattern></p><p>a.html</p><p>/*</p><p>/*.html</p><p>/</p><h4 id="和-的区别"><a href="#和-的区别" class="headerlink" title="/ 和 /* 的区别"></a>/ 和 /* 的区别</h4><p>tomcat/conf/web.xml</p><p>前端控制器下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>app<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里如果时/* 的话，由于 /* 的优先级比 tomcat/conf/web.xml 中的*.jsp的优先级高，前端控制器会拦截jsp文件，这样tomcat就不会处理jsp文件，把jsp文件当作静态资源返回给客户端，不会解析jsp文件，这样客户端显示的就是jsp源码 --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 方式一 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 由于 /的优先级最低，这样jsp又可以解析了 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 方式二 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 创建子文件夹 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/app/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="如何访问静态资源，不让前端控制器起作用"><a href="#如何访问静态资源，不让前端控制器起作用" class="headerlink" title="如何访问静态资源，不让前端控制器起作用"></a>如何访问静态资源，不让前端控制器起作用</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:resource</span> <span class="attr">mapping</span>=<span class="string">"/js/**"</span> <span class="attr">location</span>=<span class="string">"/js/"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 由于 url-pattern 是 /，则WEB-INF/下的静态资源访问需要这样 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resource</span> <span class="attr">mapping</span>=<span class="string">"/css/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/css/"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>视图层不应该直接访问，给一个逻辑名，比如 a.jsp，由*.do拦截访问（似乎是这样）</p><h4 id="和-的区别-1"><a href="#和-的区别-1" class="headerlink" title="* 和 ** 的区别"></a>* 和 ** 的区别</h4><p>子文件夹下<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mvc:resource mapping="/js/**" location="/js/" .&lt;</span><br></pre></td></tr></table></figure></p><h3 id="spring后端控制器"><a href="#spring后端控制器" class="headerlink" title="spring后端控制器"></a>spring后端控制器</h3><p>spring 配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启mvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 扫描器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:compontent-scan</span> <span class="attr">base-package</span>=<span class="string">"com.abc.project.controller"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这种方式不太好</span></span><br><span class="line"><span class="keyword">package</span> com.abc.project.controller;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="comment">// 模块开发</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/calc"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span></span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="comment">// 这里 v1必须与什么一样，不然不给你笨蛋注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(String v1, String v2)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/substract"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">substract</span><span class="params">(String v1, String v2)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这种方式比较好</span></span><br><span class="line">下课补吧，泪哭</span><br></pre></td></tr></table></figure><h4 id="后端控制器返回对象-8个"><a href="#后端控制器返回对象-8个" class="headerlink" title="后端控制器返回对象(8个)"></a>后端控制器返回对象(8个)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Locale locale, HttpSession session, HttpServeltRequest request, HttpServletResponse response)</span></span></span><br></pre></td></tr></table></figure><p>session</p><p>request</p><p>response</p><p>locale 国家地区，国际化网页</p><h4 id="后端控制器注解"><a href="#后端控制器注解" class="headerlink" title="后端控制器注解"></a>后端控制器注解</h4><p>java.util.Locale<br>@PathVariable</p><p>获取数据</p><p>@RequestParam</p><p>@RequestHead</p><p>@RequestBody    对象与json的转换</p><p>@RequetMapping</p><p>返回数据</p><p>@ResponseBody </p><p>// 将对象转换为 json返回，编码 ISO8859-1(美国国际编码)<br>public @ResponseBody List<student> a(String a){</student></p><p>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- spring配置文件修改 ISO8859-1 为 UTF-8 --&gt;</span><br><span class="line">&lt;mvc:annotation-driven&gt;</span><br><span class="line">    &lt;mvc:message-</span><br><span class="line">&lt;/mvc:annotation-driven&gt;</span><br></pre></td></tr></table></figure></p><p>不同的请求方法<br>@GetMapping, @PostMapping, @PutMapping, @DeleteMapping 这些都等价于 @RequestMapping ，只是请求方法各异</p><h4 id="Controller-与-RestController"><a href="#Controller-与-RestController" class="headerlink" title="Controller 与 RestController"></a>Controller 与 RestController</h4><p>RestController 不需要再用 RequestBody, ResponseBody</p><p>RestController 返回的都是对象 Object</p><h4 id="RequestParam-value-”v1”-与-Request-“v1”"><a href="#RequestParam-value-”v1”-与-Request-“v1”" class="headerlink" title="@RequestParam(value=”v1”) 与 @Request(“v1”)"></a>@RequestParam(value=”v1”) 与 @Request(“v1”)</h4><p>两者等价，因为默认值是 value，设置其他属性就不一样了</p><h4 id="spring-对路径灵活"><a href="#spring-对路径灵活" class="headerlink" title="spring 对路径灵活"></a>spring 对路径灵活</h4><p>模版路径 – 带动态参数的路径</p><p>@RequestMapping(“/student/{studentid}/modify”)</p><p>@RequestMapping(“/student/modify/{studentid}”)</p><h4 id="spring-注入"><a href="#spring-注入" class="headerlink" title="spring 注入"></a>spring 注入</h4><p>spring 是注入技术</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">a</span><span class="params">(HttpServletResponse res, HttpServletRequest req)</span></span>&#123;</span><br><span class="line">    <span class="comment">// res和req的顺序没问题</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>Spring 可以将html form表单提交的数据放入 Map中</p><p>自己做框架</p><p>spring 视图技术 View接口，派发出一堆东西，比如 JSONView, PdfView, ExcelView, 也可以自己写DownloadView</p><p>上传文件，给文件一个不重的随机数修改文件名，源文件名与新文件名放入Model,下载时查找Model，找到要下载的文件</p><p>将文件名与id存入数据库并将文件名修改id，下载时根据文件名到数据库查找id，找到文件的真实 url</p><p>企业自己写View，不如DownloadView</p><p>json 面向对象编程</p><hr><h2 id="Spring-后讲"><a href="#Spring-后讲" class="headerlink" title="Spring 后讲"></a>Spring 后讲</h2><p>spring mvc 支持的视图技术：freemarker, jsp, groovy, markup</p><h4 id="jsp-视图技术"><a href="#jsp-视图技术" class="headerlink" title="jsp 视图技术"></a>jsp 视图技术</h4><p>需要下载 jstl-1.2.jar<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.In"</span></span></span><br><span class="line">    &lt;property name="viewClass" value="org.springframework." /&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>控制器只需要返回视图的逻辑名称</p><p>如果 controller 什么逻辑也不执行，仅仅是转发到某个试图<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">"/jsp/a"</span> <span class="attr">view-name</span>=<span class="string">"a"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>现在不能直接访问 jsp文件</p><p>a.jsp –&gt; /jsp/a</p><p>JSP 的视图类org.springframework.web.servlet.view.InternalResourceViewResolver 实现了View, BeanNameAware, ApplicationContextAware, ServletContextAware 接口</p><p>ServletContextAware: View 知道WEB容器</p><p>ApplicationContextAware: View 知道WEB应用接口，知道应用下的所有组件</p><p>自定义视图时要实现这几个接口</p><h4 id="视图解析"><a href="#视图解析" class="headerlink" title="视图解析"></a>视图解析</h4><p>spring 支持多个viewresolve   @Nullable</p><p><em>考试：</em><br>org.springframework.web.servlet.View 接口中声明的两个抽象函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Nullable</span>       <span class="comment">// 返回值允许为空，spring提供默认类型</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">default</span> String <span class="title">getContentType</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(@Nullable Map&lt;String, ?&gt; model, HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span></span><br></pre></td></tr></table></figure><h4 id="interface-中的-default"><a href="#interface-中的-default" class="headerlink" title="interface 中的 default"></a>interface 中的 default</h4><p>java8 后允许接口中实现函数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">K</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">default</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>&#123;    <span class="comment">// public 和 default可以位置互换</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="范型"><a href="#范型" class="headerlink" title="范型"></a>范型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 具体明确</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">String s = list.get(<span class="number">0</span>);     <span class="comment">// 不需要类型转换，默认好似 Object</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 语法错误，不明确</span></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Student&gt;();</span><br><span class="line"></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// ? 匹配任何类型</span></span><br><span class="line">Map&lt;String, ?&gt; map = <span class="keyword">new</span> HashMap&lt;String,?&gt;();</span><br><span class="line"></span><br><span class="line">上界 下界</span><br><span class="line">&lt;String, ?, extend=  &gt;</span><br><span class="line">&lt;String, ?, <span class="keyword">super</span>=  &gt;</span><br></pre></td></tr></table></figure><h4 id="DownloadView"><a href="#DownloadView" class="headerlink" title="DownloadView"></a>DownloadView</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadView</span> <span class="keyword">implements</span> <span class="title">View</span>, <span class="title">ApplicationContextAware</span>, <span class="title">ServletContextAware</span>, <span class="title">BeanNameAware</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContentType</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"application/x-download; charset=utf-8"</span>;</span><br><span class="line">        <span class="comment">// return "application/json; charset=utf-8"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    *考试：Map&lt;String, ?&gt; 参数的优点和缺点*</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(Map&lt;String, ?&gt; model, HttpServletRequest)</span></span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="jsonView"><a href="#jsonView" class="headerlink" title="jsonView"></a>jsonView</h4><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><ol><li>.html .php</li><li><a href="http://localhost:8080/hello?format=xml" target="_blank" rel="noopener">http://localhost:8080/hello?format=xml</a></li></ol><h4 id="Ordered-接口"><a href="#Ordered-接口" class="headerlink" title="Ordered 接口"></a>Ordered 接口</h4><p>spring 支持 viewresolver, 使用 order（优先级，整数，值越小优先级越高，0最高）</p><h4 id="model"><a href="#model" class="headerlink" title="model"></a>model</h4><p>model.addAttribute(“username”, list);</p><p>${list[2]}</p><p>${list.key}     // Map</p><p>${list.key[2]}  // Map 的value 时数组</p><p>前端 –&gt; 拦截器预处理 –&gt; Controller –&gt; ModelAndView –&gt; 拦截器后处理 –&gt; resolveview –&gt; view</p><hr><p>native2ascii</p><p>pdfView, XMlView, jsonView</p><p>写 excelView</p><hr><h2 id="最后一讲"><a href="#最后一讲" class="headerlink" title="最后一讲"></a>最后一讲</h2><p>spring jdbc 提供了jdbc操作的进一步封装</p><p>org.springframework.jdbc.core.JdbcTemplate 类</p><p>对象到关系数据库的映射：</p><p>O/R Mapping 对象关系映射， Hibernate, MyBatis</p><p>Hibernate 慢，不能处理复杂sql语句，MyBatis 快，JDU 效果不好,没有使用反射机制（快，不好）</p><p>使用 org.springframework.jdbc 就够了</p><p>spring dao 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bag&lt;Apple&gt;b = <span class="keyword">new</span> Bag&lt;RedApple&gt;();      <span class="comment">// 语法错误，范型意味着类型明确，前后不会类型转换，类型不一致</span></span><br></pre></td></tr></table></figure><p>写 MySevice 函数</p><hr><p>学习 MyBatis</p>]]></content>
    
    <summary type="html">
    
      J2EE学习
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Java" scheme="https://qixqi.github.io/tags/Java/"/>
    
      <category term="J2EE" scheme="https://qixqi.github.io/tags/J2EE/"/>
    
      <category term="Web" scheme="https://qixqi.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>manjaro 安装后配置</title>
    <link href="https://qixqi.github.io/2019/05/12/manjaro/"/>
    <id>https://qixqi.github.io/2019/05/12/manjaro/</id>
    <published>2019-05-11T16:23:00.000Z</published>
    <updated>2019-05-13T13:24:16.364Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="同步远程数据包到本地"><a href="#同步远程数据包到本地" class="headerlink" title="同步远程数据包到本地"></a>同步远程数据包到本地</h2><p>没有同步数据包的话，安装软件时可能会出现数据包找不到的 warning，终端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syy</span><br></pre></td></tr></table></figure><hr><h2 id="安装-vim"><a href="#安装-vim" class="headerlink" title="安装 vim"></a>安装 vim</h2><p>vim 无疑是linux下最好用的编辑器，不是很熟悉vim 的可以终端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vimtutor</span><br></pre></td></tr></table></figure><p>获取 《VIM 教程》，讲述了一些必要的基本命令，效果还可以，接下来假定你已经会使用 vim编辑器，如果实在不想学习vim，可以使用一些其他的编辑器，如 nano，也是很方便</p><p>安装 vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S vim</span><br></pre></td></tr></table></figure><hr><h2 id="添加-archlinuxCN-源"><a href="#添加-archlinuxCN-源" class="headerlink" title="添加 archlinuxCN 源"></a>添加 archlinuxCN 源</h2><p>编辑 pacman.conf 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><p>在底部添加(连续按’GG’就可以跳转到文章尾)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>然后终端执行，更新数据包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><hr><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure><p>这一下更新包较多，大概1.5G</p><hr><h2 id="MacBook-Air-安装-Manjaro-不能连接无线网"><a href="#MacBook-Air-安装-Manjaro-不能连接无线网" class="headerlink" title="MacBook Air 安装 Manjaro 不能连接无线网"></a>MacBook Air 安装 Manjaro 不能连接无线网</h2><p>Mac 使用的是博通的网卡，需要自己安装无限网卡驱动，可以使用 “inxi -F” 查看自己的网卡型号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Network:</span><br><span class="line">  Device-1: Broadcom and subsidiaries BCM4360 802.11ac Wireless Network Adapter</span><br><span class="line">  driver: wl</span><br><span class="line">  IF: wlp3s0 state: up mac: d0:81:7a:be:dd:80</span><br></pre></td></tr></table></figure><p>我的网卡型号时 BCM4360</p><p>先连接有线网，sudo pacman -Syu 更新系统，然后在系统设置里找到内核，查看内核版本，选择与内核版本匹配的linux-headers，如我正在运行的内核是 Linux 4.19.36-1，选择 linux419-headers安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S linux-headers 或者 yaourt linux-headers</span><br></pre></td></tr></table></figure><p>最后安装无线网卡驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S broadcom-wl-dkms</span><br></pre></td></tr></table></figure><p>重启，ok</p><hr><h2 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h2><p>Manjaro 下有很多可以选择的输入法，如搜狗、谷歌，个人感觉搜狗更加贴切国内用户的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-sogoupinyin</span><br><span class="line">sudo pacman -S fcitx-im<span class="comment"># 全部安装</span></span><br><span class="line">sudo pacman -S fcitx-configtool<span class="comment"># 图形化配置工具</span></span><br></pre></td></tr></table></figure><p>然后配置中文输入发环境变量，编辑 ~/.xprofile文件（如果不存在，则新建），添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure><p>重启后就可以正常使用了</p><hr><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><h3 id="安装-yaourt-amp-yay"><a href="#安装-yaourt-amp-yay" class="headerlink" title="安装 yaourt &amp; yay"></a>安装 yaourt &amp; yay</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yaourt yay</span><br></pre></td></tr></table></figure><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure><h4 id="设置个人-github-信息"><a href="#设置个人-github-信息" class="headerlink" title="设置个人 github 信息"></a>设置个人 github 信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"github用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"注册邮箱"</span></span><br></pre></td></tr></table></figure><h3 id="安装-zsh-–-shell中的极品"><a href="#安装-zsh-–-shell中的极品" class="headerlink" title="安装 zsh – shell中的极品"></a>安装 zsh – shell中的极品</h3><p>安装 zsh (需要先把 git 安装好)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S zsh</span><br></pre></td></tr></table></figure><p>配置 oh-my-zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><p>更换默认的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsha</span><br></pre></td></tr></table></figure><h3 id="安装-chromium"><a href="#安装-chromium" class="headerlink" title="安装 chromium"></a>安装 chromium</h3><p>chromium 是开发者版的谷歌浏览器，更新较为频繁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S chromium</span><br></pre></td></tr></table></figure><h3 id="安装网易云音乐"><a href="#安装网易云音乐" class="headerlink" title="安装网易云音乐"></a>安装网易云音乐</h3><p>桌面版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S netease-cloud-music</span><br></pre></td></tr></table></figure><p>终端版：<a href="https://github.com/darknessomi/musicbox" target="_blank" rel="noopener">musicbox</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yaourt musicbox</span><br></pre></td></tr></table></figure><p>安装完后终端键入 musicbox 就可以体验终端版的网易云了</p><h3 id="安装-WPS"><a href="#安装-WPS" class="headerlink" title="安装 WPS"></a>安装 WPS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S wps-office</span><br><span class="line">sudo pacman -S ttf-wps-fonts    <span class="comment"># 安装wps字体</span></span><br></pre></td></tr></table></figure><h3 id="安装微信"><a href="#安装微信" class="headerlink" title="安装微信"></a>安装微信</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S electronic-wechat</span><br></pre></td></tr></table></figure><h3 id="安装-ssr"><a href="#安装-ssr" class="headerlink" title="安装 ssr"></a>安装 ssr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S shadowsocks-qt5</span><br></pre></td></tr></table></figure><h3 id="安装坚果云"><a href="#安装坚果云" class="headerlink" title="安装坚果云"></a>安装坚果云</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S nutstore</span><br></pre></td></tr></table></figure><h3 id="安装-VScode"><a href="#安装-VScode" class="headerlink" title="安装 VScode"></a>安装 VScode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S visual-studio-code-bin</span><br></pre></td></tr></table></figure><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>Warning: kde桌面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S papirus-icon-theme</span><br><span class="line">sudo pacman -S arc-kde kvantum-theme-arc</span><br></pre></td></tr></table></figure><p>安装完成之后可以到设置里更改使用</p><h3 id="安装-uget"><a href="#安装-uget" class="headerlink" title="安装 uget"></a>安装 uget</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S uget aria2</span><br></pre></td></tr></table></figure><h4 id="chrome-启用-uget-下载"><a href="#chrome-启用-uget-下载" class="headerlink" title="chrome 启用 uget 下载"></a>chrome 启用 uget 下载</h4><p>打开 uGet 选择 编辑 -&gt; 设置 -&gt; 插件，然后把插件匹配顺序改为：aria2</p><p>然后安装 chrome 浏览器插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S uget-intedrator</span><br><span class="line">sudo pacman -S uget-intedrator-chrome</span><br></pre></td></tr></table></figure><h3 id="安装-pycharm-professional"><a href="#安装-pycharm-professional" class="headerlink" title="安装 pycharm professional"></a>安装 pycharm professional</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pycharm-professional</span><br></pre></td></tr></table></figure><h4 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h4><p>。。。后续</p><h3 id="安装-typora"><a href="#安装-typora" class="headerlink" title="安装 typora"></a>安装 typora</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S typora</span><br></pre></td></tr></table></figure><h3 id="安装-PS-替代品-——-gimp"><a href="#安装-PS-替代品-——-gimp" class="headerlink" title="安装 PS 替代品 —— gimp"></a>安装 PS 替代品 —— gimp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S gimp</span><br></pre></td></tr></table></figure><h3 id="安装-flash"><a href="#安装-flash" class="headerlink" title="安装 flash"></a>安装 flash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pepper-flash</span><br><span class="line">sudo pacman -S flashplugin</span><br></pre></td></tr></table></figure><p>配置：后续。。。</p><h3 id="安装-mysql"><a href="#安装-mysql" class="headerlink" title="安装 mysql"></a>安装 mysql</h3><p><span id="mysql"></span></p><h4 id="安装-mysql-1"><a href="#安装-mysql-1" class="headerlink" title="安装 mysql"></a>安装 mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mysql</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqld --initialize --user=mysql --basedir=/usr --datedir=/var/lib/mysql</span><br></pre></td></tr></table></figure><p>执行结束后默认创建一个 SQL 用户：root 以及 root用户密码</p><h4 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld.service</span><br></pre></td></tr></table></figure><h4 id="启动-MySQL-服务"><a href="#启动-MySQL-服务" class="headerlink" title="启动 MySQL 服务"></a>启动 MySQL 服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mysqld.service<span class="comment"># 启动</span></span><br><span class="line">sudo systemctl status mysqld.service <span class="comment"># 查看状态</span></span><br></pre></td></tr></table></figure><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>输入刚才生成的 root 密码</p><h4 id="修改-root-密码"><a href="#修改-root-密码" class="headerlink" title="修改 root 密码"></a>修改 root 密码</h4><p>首先要连接数据库，然后根据 mysql 版本键入命令</p><p>mysql 8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'新密码'</span>;</span><br></pre></td></tr></table></figure><p>mysql 8.0 以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER user <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'新密码'</span>;</span><br></pre></td></tr></table></figure><h4 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h4><p>mysql 身份验证问题，mariaDB的替换</p><h4 id="安装-mycli"><a href="#安装-mycli" class="headerlink" title="安装 mycli"></a>安装 mycli</h4><p>由于 mysql 在使用过程不提示命令，mycli就可以很好地解决这一点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mycli</span><br></pre></td></tr></table></figure><p>但在MySQL 下，mycli 插件无法使用了，首先要确保 PyMySQL &gt;= 0.6.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><h4 id="安装-mysql-workbench"><a href="#安装-mysql-workbench" class="headerlink" title="安装 mysql workbench"></a>安装 mysql workbench</h4><p>数据库可视化也是很人性化的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mysql-workbench</span><br></pre></td></tr></table></figure><h4 id="Manjaro-下-mysql-巨坑"><a href="#Manjaro-下-mysql-巨坑" class="headerlink" title="Manjaro 下 mysql 巨坑"></a>Manjaro 下 mysql 巨坑</h4><p>Manjaro 每次更新的时候，mysql 都有可能崩溃，因为更新的时候说不定哪个库或者依赖更新，而mysql没有及时更新都会造成 mysql 无法启动成功，很是头疼，正在考虑其他数据库  /(ㄒoㄒ)/~~</p><h3 id="安装-gpick-取色工具"><a href="#安装-gpick-取色工具" class="headerlink" title="安装 gpick 取色工具"></a>安装 gpick 取色工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S gpick</span><br></pre></td></tr></table></figure><h3 id="安装-redshift-gtk-护眼神器"><a href="#安装-redshift-gtk-护眼神器" class="headerlink" title="安装 redshift-gtk 护眼神器"></a>安装 redshift-gtk 护眼神器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S redshift  <span class="comment"># 或者 sudo pacman -S redshift-gtk</span></span><br></pre></td></tr></table></figure><p>在系统设置设置自动启动就可以每次开机连接网络后自动开启护眼模式了</p><h3 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h3><p>Manjaro 默认是有 pip的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S wget</span><br><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo python get-pip.py</span><br></pre></td></tr></table></figure><h3 id="安装-virtualbox"><a href="#安装-virtualbox" class="headerlink" title="安装 virtualbox"></a>安装 virtualbox</h3><p>坑太多，后续。。。</p><hr><h2 id="更新后解决搜狗输入法乱码"><a href="#更新后解决搜狗输入法乱码" class="headerlink" title="更新后解决搜狗输入法乱码"></a>更新后解决搜狗输入法乱码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sogou-qimpanel</span><br></pre></td></tr></table></figure><p>提示找不到依赖库，重新建立软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/lib64/libidn.so.12.6.0 /usr/lib64/libidn.so.11</span><br></pre></td></tr></table></figure><hr><h2 id="pacman-常用命令"><a href="#pacman-常用命令" class="headerlink" title="pacman 常用命令"></a>pacman 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pacman -S  <span class="comment"># 安装</span></span><br><span class="line">pacman -R   <span class="comment"># 删除</span></span><br><span class="line">pacman -Rs  <span class="comment"># 移除已安装不需要软件包</span></span><br><span class="line">pacman -Rsc <span class="comment"># 删除一个包，所有依赖</span></span><br><span class="line">pacman -Syu <span class="comment"># 升级包</span></span><br><span class="line">pacman -Ss  <span class="comment"># 查询包数据库</span></span><br><span class="line">pacman -Qs  <span class="comment"># 搜索已安装的包</span></span><br><span class="line">pacman -Si  <span class="comment"># 显示包大量信息</span></span><br><span class="line">pacman -Qi  <span class="comment"># 本地安装包</span></span><br><span class="line">pacman -Sc  <span class="comment"># 清理包缓存</span></span><br></pre></td></tr></table></figure><hr><h2 id="Manjaro-搭建-Apache、Mysql、PHP-环境"><a href="#Manjaro-搭建-Apache、Mysql、PHP-环境" class="headerlink" title="Manjaro 搭建 Apache、Mysql、PHP 环境"></a>Manjaro 搭建 Apache、Mysql、PHP 环境</h2><h3 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S apache</span><br></pre></td></tr></table></figure><p>查看 Apache 状态和版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status httpd</span><br><span class="line">apachectl -v   <span class="comment"># 或者 httpd -v</span></span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">sudo systemctl restart httpd</span><br></pre></td></tr></table></figure><p>站点根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /srv/http/</span><br></pre></td></tr></table></figure><h3 id="安装-Mysql"><a href="#安装-Mysql" class="headerlink" title="安装 Mysql"></a>安装 Mysql</h3><p><a href="#mysql">a跳转</a></p><p><a href="#mysql">md跳转</a></p><h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S php php-apache</span><br></pre></td></tr></table></figure><p>修改 apache 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p>注释掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule mpm_event_module modules/mod_mpm_event.so</span><br></pre></td></tr></table></figure><p>去掉注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule mpm_prefork_module modules/mod_mpm_prefork.so</span><br></pre></td></tr></table></figure><p>在末尾添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LoadModule php7_module modules/libphp7.so</span><br><span class="line">AddHandler php7-script php</span><br><span class="line">Include conf/extra/php7_module.conf</span><br></pre></td></tr></table></figure><p>测试 php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /srv/http/test.php</span><br></pre></td></tr></table></figure><p>键入php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重启 apache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart httpd</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost/test.php" target="_blank" rel="noopener">http://localhost/test.php</a></p><h3 id="安装-phpMyAdmin"><a href="#安装-phpMyAdmin" class="headerlink" title="安装 phpMyAdmin"></a>安装 phpMyAdmin</h3><p>与 mysql workbench 类似，phpMyAdmin也是将数据库图形化，优点是浏览器访问，可以跨平台使用，也可以用在服务器端的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S phpmyadmin</span><br></pre></td></tr></table></figure><p>编辑 php 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/php/php.ini</span><br></pre></td></tr></table></figure><p>确认接下来几行没有被注释掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[...]</span><br><span class="line">extension=bz2.so<span class="comment"># 我的是 extension=bz2</span></span><br><span class="line">extension=mysqli.so     <span class="comment"># extension=mysqli</span></span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><p>然后，创建 phpmyadmin的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/httpd/conf/extra/phpmyadmin.conf</span><br></pre></td></tr></table></figure><p>添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Alias /phpmyadmin <span class="string">"/usr/share/webapps/phpMyAdmin"</span></span><br><span class="line">&lt;Directory <span class="string">"/usr/share/webapps/phpMyAdmin"</span>&gt;</span><br><span class="line">DirectoryIndex index.php</span><br><span class="line">AllowOverride All</span><br><span class="line">Options FollowSymlinks</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>然后，打开 apache 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p>末尾添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Include conf/extra/phpmyadmin.conf</span><br></pre></td></tr></table></figure><p>重启 apache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart httpd</span><br></pre></td></tr></table></figure><p>测试 phpmyadmin    <a href="http://localhost/phpmyadmin" target="_blank" rel="noopener">http://localhost/phpmyadmin</a></p><p>进入主界面如果在底部出现error: “The configuration file now needs a secret passphrase (blowfish_secret)” ，编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/webapps/phpmyadmin/config.inc.php</span><br></pre></td></tr></table></figure><p>找到以下代码并编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cfg</span>[<span class="string">'blowfish_secret'</span>] = <span class="string">'`MyP@$S`'</span>; /* YOU MUST FILL IN THIS FOR COOKIE AUTH!$ /**</span><br></pre></td></tr></table></figure><p>重启 apache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart httpd</span><br></pre></td></tr></table></figure><p>坑，后续。。。</p><hr><h2 id="Manjaro-使用-Wine"><a href="#Manjaro-使用-Wine" class="headerlink" title="Manjaro 使用 Wine"></a>Manjaro 使用 Wine</h2><h3 id="安装配置-Wine"><a href="#安装配置-Wine" class="headerlink" title="安装配置 Wine"></a>安装配置 Wine</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S wine wine_gecko wine_mono</span><br></pre></td></tr></table></figure><p>配置 64 &amp; 32 位环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv ~/.wine ~/.wine64</span><br><span class="line"><span class="comment"># 使用WINEARCH建立32位环境配置</span></span><br><span class="line">WINEARCH=win32 WINEPREFIX=~/.wine winecfg</span><br></pre></td></tr></table></figure><p>安装32位显卡驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S lib32-mesa lib32-nvidia-utils</span><br></pre></td></tr></table></figure><h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><p><a href="https://blog.csdn.net/zbgjhy88/article/details/85110956" target="_blank" rel="noopener">https://blog.csdn.net/zbgjhy88/article/details/85110956</a>  </p><p>后续。。。</p><h3 id="运行-Windows-应用"><a href="#运行-Windows-应用" class="headerlink" title="运行 Windows 应用"></a>运行 Windows 应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine exe文件名</span><br></pre></td></tr></table></figure><h3 id="安装-Windows-应用"><a href="#安装-Windows-应用" class="headerlink" title="安装 Windows 应用"></a>安装 Windows 应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msiexec -i msi安装包</span><br></pre></td></tr></table></figure><h3 id="卸载应用"><a href="#卸载应用" class="headerlink" title="卸载应用"></a>卸载应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine uninstaller</span><br></pre></td></tr></table></figure><h3 id="wine-菜单管理"><a href="#wine-菜单管理" class="headerlink" title="wine 菜单管理"></a>wine 菜单管理</h3><p>wine 中安装的应用可以在系统菜单中以 Wine 子菜单的形式呈现</p><p>后续。。。</p><h3 id="Deepin-Wine"><a href="#Deepin-Wine" class="headerlink" title="Deepin-Wine"></a>Deepin-Wine</h3><p>Deepin-Wine 是国产操作系统 Deepin 移植的Wine，对国内软件，有着更好的兼容性和使用体验</p><p>Warning: Deepin-Wine 32位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S deepin-wine</span><br></pre></td></tr></table></figure><p>安装 exe程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deepin-wine QQBrowser.exe</span><br></pre></td></tr></table></figure><p>打开注册表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deepin-wine regedit</span><br></pre></td></tr></table></figure><hr><h2 id="bash-脚本"><a href="#bash-脚本" class="headerlink" title="bash 脚本"></a>bash 脚本</h2><p>自己根据自己环境配置编写的 shell 文件，能够比较快捷简单的配置环境 <a href="https://www.qixqi.club/upload/manjaro.sh" download target="_blank" rel="noopener">manjaro.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># manjaro 安装后配置以及软件安装</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步远程数据库到本地</span></span><br><span class="line">sudo pacman -Syy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 vim</span></span><br><span class="line">sudo pacman -S vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 archlinuxCN 源</span></span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">[archlinuxcn]</span></span><br><span class="line"><span class="string">SigLevel = Optional TrustedOnly</span></span><br><span class="line"><span class="string">Server = https://mirrors.ustc.edu.cn/archlinuxcn/\$arch"</span> &gt;&gt; /etc/pacman.conf</span><br><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">sudo pacman -Syu</span><br><span class="line"></span><br><span class="line"><span class="comment"># MacBook Air 安装无线网卡驱动</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If your computer can connect to the wireless network(Y/N): "</span> CONN</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$CONN</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Ok, you are lucky :)"</span></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Sad, there are another packets you need to install :("</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"If your system kernel is 4.19 and your network card model is Broadcom 4360(Y/N): "</span> KERNEL</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$KERNEL</span>"</span> <span class="keyword">in</span></span><br><span class="line">            [yY] | [yY][eE][sS])</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Good Luck :)"</span></span><br><span class="line">                sudo pacman -S linux419-headers broadcom-wl-dkms</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Everything will be ok after reboot ..."</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">read</span> -p <span class="string">"If you want to reboot to use wireless network now(Y/N): "</span> WIRELESS</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"<span class="variable">$WIRELESS</span>"</span> <span class="keyword">in</span></span><br><span class="line">                    [yY] | [yY][eE][sS])</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"reboot ..."</span></span><br><span class="line">                        reboot</span><br><span class="line">                        ;;</span><br><span class="line">                    [nN] | [nN][oO])</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"That's Ok, but you cannot use wireless network until reboot"</span></span><br><span class="line">                        ;;</span><br><span class="line">                    *)</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">                        ;;</span><br><span class="line">                <span class="keyword">esac</span></span><br><span class="line">                </span><br><span class="line">                reboot</span><br><span class="line">                ;;</span><br><span class="line">            [nN] | [nN][oO])</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Sad, now I cannot resolve it ...."</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"But I will resolve soon"</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  安装搜狗输入法</span></span><br><span class="line">sudo pacman -S fcitx-sogoupinyin fcitx-im fcitx-configtool</span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">export GTK_IM_MODULE=fcitx</span></span><br><span class="line"><span class="string">export QT_IM_MODULE=fcitx</span></span><br><span class="line"><span class="string">export XMODIFIERS=\"@im=fcitx\""</span> &gt;&gt; ~/.xprofile</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to reboot to use sogoupinyin now(Y/N): "</span> CHOOSE</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$CHOOSE</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"reboot ..."</span></span><br><span class="line">        reboot</span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Ok, but you cannot use sogoupinyin until reboot"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid choose :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装常用的软件</span></span><br><span class="line">sudo pacman -S yaourt yay git zsh chromium netease-cloud-music wps-office ttf-wps-fonts electronic-wechat shadowsocks-qt5 nutstore uget aria2 pepper-flash flashplugin redshift</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装软件配置编程环境</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to configure programming environment(Y/N): "</span> CODE</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$CODE</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"You must be a qualified programmer :)"</span></span><br><span class="line">        sudo pacman -S visual-studio-code-bin pycharm-professional typora gimp gpick </span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Your work must be more comfortable than me :("</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 github 信息</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to set your github info now(Y/N): "</span> GITHUB</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$GITHUB</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"Enter your github username: "</span> GITHUB_USERNAME</span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"Enter your github registered email: "</span> GITHUB_EMAIL</span><br><span class="line">        git config --global user.name <span class="string">"<span class="variable">$GITHUB_USERNAME</span>"</span></span><br><span class="line">        git config --global user.email <span class="string">"<span class="variable">$GITHUB_EMAIL</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"success to your github info"</span></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Ok, you can set it yourself later"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line">chsh -s /bin/zsha</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 musicbox</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to try musicbox(netease-cloud-music on terminal)(Y/N): "</span> MUSICBOX</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$MUSICBOX</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        yaourt musicbox</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"input \"musicbox\" in terminal, then you can have a try"</span></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO]</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Unfortunately, you miss a chance to \"装B\""</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid choose :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装主题</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If your stystem is kde desktop(Y/N): "</span> DESKTOP</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$DESKTOP</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line"></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"Would you like to try another theme of your system(Y/N): "</span> THEME</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$THEME</span>"</span> <span class="keyword">in</span></span><br><span class="line">            [yY] | [yY][eE][sS])</span><br><span class="line">                sudo pacman -S papirus-icon-theme arc-kde kvantum-theme-arc</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"success to theme"</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"You can choose the theme in system settings"</span></span><br><span class="line">                ;;</span><br><span class="line">            [nN] | [nN])</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"That's OK"</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"That's OK"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 mariadb</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to install mysql(mariadb is better in Manjaro)(Y/N): "</span> MARIADB</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$MARIADB</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        sudo pacman -S mariadb mycli mysql-workbench</span><br><span class="line">        sudo mysqld --initialize --user=mysql --basedir=/usr --datedir=/var/lib/mysql</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"If you want to start mysql when boot up: "</span> MYSQL_START</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$MYSQL_START</span>"</span> <span class="keyword">in</span></span><br><span class="line">            [yY] | [yY][eE][sS])</span><br><span class="line">                sudo systemctl <span class="built_in">enable</span> mysqld.service</span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        sudo systemctl start mysqld.service</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"success to install mysql"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"change mysql password by this: "</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码'; "</span></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"That's Ok"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建 Apache、PHP 环境</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to configure the environment with Apache and PHP(Y/N): "</span> AP</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$AP</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        sudo pacman -S apache phpmyadmin</span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"If you want to start Apache when boot up: "</span> APACHE_START</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$APACHE_START</span>"</span> <span class="keyword">in</span></span><br><span class="line">            [yY] | [yY][eE][sS])</span><br><span class="line">                sudo systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">        sudo systemctl restart httpd</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"success to apache, and the location of site is /srv/http/"</span></span><br><span class="line">        </span><br><span class="line">        sudo pacman -S php php-apache</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"修改/etc/httpd/conf/httpd.conf 文件"</span></span><br><span class="line"></span><br><span class="line">        sudo pacman -S phpmyadmin</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"编辑/etc/php/php.ini 文件"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">            Alias /phpmyadmin \"/usr/share/webapps/phpMyAdmin\"</span></span><br><span class="line"><span class="string">            &lt;Directory \"/usr/share/webapps/phpMyAdmin\"&gt;</span></span><br><span class="line"><span class="string">            DirectoryIndex index.php</span></span><br><span class="line"><span class="string">            AllowOverride All</span></span><br><span class="line"><span class="string">            Options FollowSymlinks</span></span><br><span class="line"><span class="string">            Require all granted</span></span><br><span class="line"><span class="string">            &lt;/Directory&gt;"</span> &gt;&gt; /etc/httpd/conf/extra/phpmyadmin.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">            Include conf/extra/phpmyadmin.conf"</span> &gt;&gt; /etc/httpd/conf/httpd.conf</span><br><span class="line">        sudo systemctl restart httpd</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"访问 http://localhost/phpmyadmin"</span></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="string">"That's OK, you can configure youself later if you want"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Wine</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"If you want to use wine to run windows software(Y/N): "</span> WINE</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$WINE</span>"</span> <span class="keyword">in</span></span><br><span class="line">    [yY] | [yY][eE][sS])</span><br><span class="line">        sudo pacman -S wine wine_gecko wine_mono</span><br><span class="line">        mv ~/.wine ~/.wine64</span><br><span class="line">        WINEARCH=win32 WINEPREFIX=~/.wine winecfg</span><br><span class="line">        sudo pacman -S lib32-mesa lib32-nvidia-utils</span><br><span class="line"></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"If you want to use Deepin-Wine(Y/N): "</span> DEEPIN_WINE</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$DEEPIN_WINE</span>"</span> <span class="keyword">in</span></span><br><span class="line">            [yY] | [yY][eE][sS])</span><br><span class="line">                sudo pacman -S deepin-wine</span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        ;;</span><br><span class="line">    [nN] | [nN][oO])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"That's Ok"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Invalid answer :/"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现简单的图形界面</span></span><br><span class="line"><span class="comment"># 实现安装过的跳过</span></span><br><span class="line"><span class="comment"># 实现自动读取系统信息，配置个性化环境</span></span><br><span class="line"><span class="comment"># 如何获取最小权限修改只读文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前序工作：</span></span><br><span class="line"><span class="comment"># chmod 755 manjaro.sh</span></span><br><span class="line"><span class="comment"># sudo ./manjaro.sh</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      小白配置 Manjaro 的辛酸历史，自己虽然linux学的不是很高深，但奈何搞坏系统的能力与日俱增，配置 Manjaro 环境也有7~8次了，配置过 xfce桌面、gnome桌面、kde桌面，这里主要是 Manjaro + kde.
    
    </summary>
    
      <category term="Manjaro" scheme="https://qixqi.github.io/categories/Manjaro/"/>
    
      <category term="beautify" scheme="https://qixqi.github.io/categories/Manjaro/beautify/"/>
    
    
      <category term="Manjaro" scheme="https://qixqi.github.io/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>vultr 搭建ssr/bbr加速</title>
    <link href="https://qixqi.github.io/2019/04/28/ssr-creat/"/>
    <id>https://qixqi.github.io/2019/04/28/ssr-creat/</id>
    <published>2019-04-27T16:18:13.000Z</published>
    <updated>2019-07-15T16:51:31.786Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="创建Vultr账号"><a href="#创建Vultr账号" class="headerlink" title="创建Vultr账号"></a>创建Vultr账号</h2><p>现在vultr有活动，注册领取25美金，💰<a href="https://www.vultr.com/?ref=8055946" target="_blank" rel="noopener">vultr</a> ，可以使用好几个月了，要是再拉几个小伙伴，一起越狱，那就更舒服了。</p><p>首先，访问 <a href="https://www.vultr.com/?ref=8055946" target="_blank" rel="noopener">vultr</a> ，创建vultr账号（注意要验证邮箱，否则搭建不了服务器）。</p><p>然后，阿里支付，vultr可以直接使用阿里支付和微信支付，还是比较好的，</p><p><img src="/2019/04/28/ssr-creat/vultr1.png" alt="aratar"></p><p>最低支付为10美元，可以用两个月了</p><hr><h2 id="搭建Vultr服务器"><a href="#搭建Vultr服务器" class="headerlink" title="搭建Vultr服务器"></a>搭建Vultr服务器</h2><p>选择服务器，个人感觉洛杉矶的挺好的</p><p><img src="/2019/04/28/ssr-creat/vultr2.png" alt="aratar"></p><p>选择系统，由于我的腾讯云服务器安装的centos，比较熟悉，这里我就选择centos吧，你当然可以选择ubuntu等</p><p>Server Size: 选择5美元的，每个月1个T，绰绰有余了，网速还可以</p><p><img src="/2019/04/28/ssr-creat/vultr3.png" alt="aratar"></p><p>额外的功能，选上 “Enable IPv6” 和 “Enable Private Networking” 只要免费就选上啊😄</p><p><img src="/2019/04/28/ssr-creat/vultr4.png" alt="aratar"></p><p>最后，选择 Server HostName</p><p><img src="/2019/04/28/ssr-creat/vultr5.png" alt="aratar"></p><p>稍等两分钟，服务器便搭建成功了</p><hr><h2 id="安装xshell"><a href="#安装xshell" class="headerlink" title="安装xshell"></a>安装xshell</h2><h3 id="Manjaro-linux-使用ssh"><a href="#Manjaro-linux-使用ssh" class="headerlink" title="Manjaro/linux 使用ssh"></a>Manjaro/linux 使用ssh</h3><p>Mac 和 linux 系统一般自带 ssh</p><h3 id="windows-使用ssh"><a href="#windows-使用ssh" class="headerlink" title="windows 使用ssh"></a>windows 使用ssh</h3><p><del>目前，手头咩有windows系统，过几天再说</del></p><p>安装 openssh 后就可以在windows命令行上使用 ssh, scp 命令了</p><p>没安装 openssh 的小伙伴，软件挂在 <a href="https://qixqi.club/php/show_upload.php" target="_blank" rel="noopener">upload</a> ，第42个文件</p><p>然后一路高歌猛进，默认安装即可</p><p>检查安装是否成功：”windows” + R  &gt;&gt; cmd &gt;&gt; 输入ssh / scp 不报错就完成安装了</p><hr><h2 id="搭建SSR服务"><a href="#搭建SSR服务" class="headerlink" title="搭建SSR服务"></a>搭建SSR服务</h2><p>查看服务器ip和root密码</p><p><img src="/2019/04/28/ssr-creat/vultr6.png" alt="aratar"></p><p><img src="/2019/04/28/ssr-creat/vultr7.png" alt="aratar"></p><p>然后Linux/Mac 打开终端连接服务器    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@你的服务器ip</span><br><span class="line">(然后根据交互过程输入密码)</span><br></pre></td></tr></table></figure><p>连接服务器成功后，下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/flyzy2005/ss-fly</span><br></pre></td></tr></table></figure><p>然后运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss-fly/ss-fly.sh -ssr</span><br></pre></td></tr></table></figure><p>然后，根据交互过程填写端口，密码，加密方式，协议，混淆等，也可以一直按回车默认。</p><p>相关ssr操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks start  <span class="comment"># 启动</span></span><br><span class="line">/etc/init.d/shadowsocks stop <span class="comment"># 停止</span></span><br><span class="line">/etc/init.d/shadowsocks restart <span class="comment"># 重启</span></span><br><span class="line">/etc/init.d/shadowsocks status<span class="comment"># 状态</span></span><br><span class="line">/etc/shadowsocks.json<span class="comment"># 配置文件</span></span><br><span class="line">/var/<span class="built_in">log</span>/shadowsocks.log<span class="comment"># 日志文件</span></span><br><span class="line">/usr/<span class="built_in">local</span>/shadowsocks  <span class="comment"># 代码安装目录</span></span><br></pre></td></tr></table></figure><p>卸载ssr服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocksR.sh uninstall</span><br></pre></td></tr></table></figure><hr><h2 id="开启BBR服务"><a href="#开启BBR服务" class="headerlink" title="开启BBR服务"></a>开启BBR服务</h2><p>现在已经成功配置了SSR服务，可以用来查找谷歌资料了，但是速度方面还是有些慢</p><p>开启BBR服务，可以有效提高速度，在刚才的目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss-fly/ss-fly.sh -bbr</span><br></pre></td></tr></table></figure><p>装完后需要重启系统</p><p>重启完后，重新连接服务器，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>如果显示为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure><p>顺序不重要，只要有bbr 就行</p><hr><h2 id="SSR地址"><a href="#SSR地址" class="headerlink" title="SSR地址"></a>SSR地址</h2><p>Windows 客户端: <a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p><p>Mac 客户端：<a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/ShadowsocksX-NG/releases</a></p><p>Linux 客户端：<a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki/Installation" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-qt5/wiki/Installation</a></p><p>Android 客户端: <a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-android/releases</a></p><p>iOS 客户端: 应用商店(美区Apple ID) shadowsocks下载</p><hr><p>感谢：<a href="https://www.2cto.com/kf/201808/764719.html" target="_blank" rel="noopener">https://www.2cto.com/kf/201808/764719.html</a></p>]]></content>
    
    <summary type="html">
    
      利用vultr成功搭建ssr，查找资料再也不用酸酸乳了，看看油管、爬爬谷歌、玩转telegram，耶✌️
    
    </summary>
    
      <category term="SSR" scheme="https://qixqi.github.io/categories/SSR/"/>
    
    
      <category term="SSR" scheme="https://qixqi.github.io/tags/SSR/"/>
    
      <category term="Vultr" scheme="https://qixqi.github.io/tags/Vultr/"/>
    
  </entry>
  
  <entry>
    <title>hexo blog 美化升级</title>
    <link href="https://qixqi.github.io/2019/04/19/hexo-beautify/"/>
    <id>https://qixqi.github.io/2019/04/19/hexo-beautify/</id>
    <published>2019-04-19T12:24:16.000Z</published>
    <updated>2020-03-26T18:02:55.425Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">"Way Back Home"</span> <span class="string">"SHAUN"</span> <span class="string">"https://qixqi.club/audio/homeway.mp3"</span>  <span class="string">"https://qixqi.club/images/zhaolei1.jpeg"</span> %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=https://qixqi.club/video/dingning.mp4"</span> <span class="string">"pic=https://qixqi.club/images/zhaolei1.jpeg"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br></pre></td></tr></table></figure><h2 id="将-Blog-分发到不同的库"><a href="#将-Blog-分发到不同的库" class="headerlink" title="将 Blog 分发到不同的库"></a>将 Blog 分发到不同的库</h2><p>由于某度相当变态的爬虫算法，Github 完全反对某度爬取，所以使用 Github 不得不放弃某度国内庞大的用户，但可以通过将 blog 分发到不同的库，可以同样方便的将自己的 blog 推送到某度。</p><h3 id="上篇已经布置了-Github-Pages"><a href="#上篇已经布置了-Github-Pages" class="headerlink" title="上篇已经布置了 Github Pages"></a>上篇已经布置了 Github Pages</h3><h3 id="Gitee-Pages"><a href="#Gitee-Pages" class="headerlink" title="Gitee Pages"></a>Gitee Pages</h3><ul><li><p><a href="https://gitee.com" target="_blank" rel="noopener">码云</a>，同样提供免费的 Page 服务，注册后（用户名尽量精简），新建一个<b>与用户名相同</b>的仓库（不区分大小写），这样可以避免二级域名</p></li><li><p>开启 Pages服务：在仓库目录下，在上方”服务”中开启 “Gitee Pages”，生成网址：<a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a></p></li><li><p>然后到本地博客目录，我的是blog，修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d;</span><br></pre></td></tr></table></figure></li><li><p>更新 Pages 服务：码云恶心的一点就是提交 blog 后每次需要手动更新Pages 服务，否则访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> 仍是上次提交的blog，亟需解决的问题。</p></li><li>然后访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> ，OK</li></ul><h3 id="Coding-目前Coding-已经被腾讯云开发者平台包揽"><a href="#Coding-目前Coding-已经被腾讯云开发者平台包揽" class="headerlink" title="Coding (目前Coding 已经被腾讯云开发者平台包揽)"></a>Coding (目前Coding 已经被腾讯云开发者平台包揽)</h3><ul><li><p>同样注册账号，创建与用户名一样的仓库</p></li><li><p>在仓库中左侧”代码”中开启 Pages 服务，生成 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a></p></li><li><p>修改本地 blog 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         </span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog，Coding与Github一样，提交后无需再更新Pages服务，直接访问 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a> 即可，多刷新几次就可以</p></li></ul><h3 id="在自己的服务器上搭建-blog"><a href="#在自己的服务器上搭建-blog" class="headerlink" title="在自己的服务器上搭建 blog"></a>在自己的服务器上搭建 blog</h3><p>由于先前自己搭建了一台腾讯云的服务器，学生版，一年才 ¥120，很便宜的；</p><ul><li><p>服务器用 nginx 挂出多个网站</p><p>服务器只用来写 blog 未免有些浪费，可以另开一个网站来挂载 blog</p><p>由于 80端口已经监听 http, 443端口监听 https，需要新开一个端口来监听 blog网站</p><p>访问<a href="https://console.qcloud.com/cvm/securitygroup" target="_blank" rel="noopener">腾讯云安全组</a> ，添加入站规则，类型：自定义，来源：0.0.0.0/0，协议端口：TCP: 90，策略：允许 （根据自己惨痛教训，必须要在安全组开启端口）</p><p>连接服务器，编辑 /etc/nginx/conf.d/virtual.conf（没有新建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  listen 90;   <span class="comment"># 新建的端口</span></span><br><span class="line">  root /usr/share/nginx/qixqi;<span class="comment"># blog 根目录（与网站根目录类似)</span></span><br><span class="line">  server_name: localhost;</span><br><span class="line">  charset: utf-8;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只是简单配置一下 blog 的配置，更详细的可以参考网站的配置</p><p>最后一步：在服务器配置 git</p><p>​    安装 git: </p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></code></pre><p>​    创建 git 仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/git/</span><br><span class="line">chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /home/git/</span><br><span class="line">chmod -R 755 /home/git</span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line">git init --bare qixqi.git<span class="comment"># qixqi 为仓库名，可以自设</span></span><br></pre></td></tr></table></figure><p>​    创建一个新的 git 钩子</p><p>在 /home/git/qixqi.git/hooks 文件下新建钩子文件 post-receive</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/qixqi.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/usr/share/nginx/qixqi --git-dir=/home/git/qixqi.git checkout -f</span><br></pre></td></tr></table></figure></li></ul><p>​        工作原理是，提交时先访问 /home/git/qixqi.git ，然后receive，提交到 blog根.        目录，/usr/share/nginx/qixqi/</p><ul><li>修改本地 blog 的配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         - root@qixqi.club:/home/git/qixqi</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>其中 <a href="http://www.qixqi.club" target="_blank" rel="noopener">www.qixqi.club</a> 是我新申请的域名，一年才¥1</p><ul><li>提交</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d</span><br></pre></td></tr></table></figure><p>这样提交一次，会同时分发到4个库</p><p>到这里为止，就配置好了，当然你可以不用4个都分发，只需要选择Github 和另外一个即可，推荐 Gitee，因为Coding 速度最慢，而服务器最快，但收费啊。</p><hr><h2 id="创建-“分类”-“标签”-“关于”-页面"><a href="#创建-“分类”-“标签”-“关于”-页面" class="headerlink" title="创建 “分类” “标签” “关于” 页面"></a>创建 “分类” “标签” “关于” 页面</h2><p>在 blog 站点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br><span class="line">hexo new page <span class="string">"tags"</span></span><br><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure><p>这样就在 blog/source 目录下创建了 “categories”, “tags”, “about” 文件夹，包含的index.md 分别是页面的主页</p><p>但这时候还不能在主页菜单中显示 “分类” “标签” “关于”，需要修改<b>主题</b>配置文件，在 blog/themes/next/下修改 _config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat    #腾讯404公益页面</span></span><br></pre></td></tr></table></figure><p>那么怎样给创建的博文添加标签并分类呢？</p><p>只需要新建博客的时候，修改 .md 文件头部即可，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: <span class="comment">#标题</span></span><br><span class="line">author: <span class="comment">#作者</span></span><br><span class="line">date: <span class="comment">#新建博客的时间</span></span><br><span class="line">tags: <span class="comment">#添加多个标签，Hexo与next并行关系</span></span><br><span class="line">  - Hexo</span><br><span class="line">  - next</span><br><span class="line">categories: <span class="comment">#添加分类，Hexo与next是包含关系</span></span><br><span class="line">  - Hexo</span><br><span class="line">  - next</span><br><span class="line">toc: <span class="literal">true</span>  <span class="comment">#生成文章目录</span></span><br><span class="line">description: <span class="comment">#描述，首页文章显示的摘要</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这样就添加了标签与分类</p><hr><h2 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h2><p>编辑<b>主题</b>配置文件，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  Github: https://github.com/用户民 || github</span><br><span class="line">  E-Mail: mailto:你的邮件 || envelope</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>根据自身需要增减</p><hr><h2 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h2><p>编辑<b>主题</b>配置文件，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">links_title: 友情链接</span><br><span class="line">links:</span><br><span class="line">  Github: https://www.github.com</span><br><span class="line">  Telegram: https://www.telegram.org</span><br></pre></td></tr></table></figure><p>根据需要增减</p><hr><h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>选择好图片后，在 blog 站点下的source 文件夹下，新建 upload 文件夹，在到upload 文件夹下新建 image 文件夹，将图片放到image 文件夹下</p><p>然后配置<b>主题</b>配置文件，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /upload/image/<span class="string">"图像名"</span></span><br></pre></td></tr></table></figure><hr><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>修改 blog 站点的配置文件，即根目录下的_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: <span class="comment">#标题</span></span><br><span class="line">subtitle: <span class="comment">#副标题</span></span><br><span class="line">description: Keep fucking the world <span class="comment">#站点描述</span></span><br><span class="line">author: <span class="comment">#作者</span></span><br><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><hr><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>Next 主题自带4中外观，在<b>主题</b>配置文件中修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scheme: Muse</span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><p>看看自己喜欢哪个😍</p><hr><h2 id="阅读更多"><a href="#阅读更多" class="headerlink" title="阅读更多"></a>阅读更多</h2><p>默认首页的文章会全部显示文章，在.md文件中加入 description 就可以只显示摘要，阅读更多显示全文</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">title: hexo blog 美化升级</span><br><span class="line">author: qixqi</span><br><span class="line">date: 2019-04-19 20:24:16</span><br><span class="line">tags:</span><br><span class="line"><span class="code">- Hexo</span></span><br><span class="line">categories:</span><br><span class="line"><span class="code">- Hexo</span></span><br><span class="line"><span class="code">- Next</span></span><br><span class="line">toc: true</span><br><span class="line">description:</span><br><span class="line"><span class="code">这篇随笔记录了自己 Github Pages 美化的过程，以及添加一系列的常用功能，持续更新 ...</span></span><br></pre></td></tr></table></figure><p>这样首页只显示摘要，不会显示全文</p><hr><h2 id="评论系统valine"><a href="#评论系统valine" class="headerlink" title="评论系统valine"></a>评论系统valine</h2><ul><li>valine 是免费、简洁、快速、高效、界面友好、轻量易用的评论系统</li></ul><h3 id="注册-LeanCloud"><a href="#注册-LeanCloud" class="headerlink" title="注册 LeanCloud"></a>注册 LeanCloud</h3><p>跟着提示注册即可</p><h3 id="创建LeanCloud-应用"><a href="#创建LeanCloud-应用" class="headerlink" title="创建LeanCloud 应用"></a>创建LeanCloud 应用</h3><p>选择”开发版”</p><p><img src="/2019/04/19/hexo-beautify/leancloud1.png" alt="aratar"></p><p>在设置  &gt; 应用Key， 就能看到自己应用的 App ID, App Key了</p><p><img src="/2019/04/19/hexo-beautify/leancloud2.png" alt="aratar"></p><p>在设置 &gt; 安全中心 &gt; Web 安全域名 ，添加自己的域名和本地的 localhost:4000</p><p><img src="/2019/04/19/hexo-beautify/leancloud3.png" alt="aratar"></p><p>比如我的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000</span><br><span class="line">https://qixqi.github.io</span><br><span class="line">https://qixqi.gitee.io</span><br><span class="line">https://qixxqi.coding.me</span><br><span class="line">http://qixqi.club:90</span><br><span class="line">https://qixqi.club:91</span><br><span class="line">http://zhengxiang4056.club:90</span><br><span class="line">https://zhengxiang4056.club:91</span><br></pre></td></tr></table></figure><p>你的可能没那么多，全添加上就行了，然后保存</p><h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在 blog/theme/next/ 下，修改<b>主题</b>配置文件，修改 valine</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: <span class="comment">#你的App id，最好复制，自己输入出错率高</span></span><br><span class="line">  appkey: <span class="comment">#你的App key</span></span><br><span class="line">  notify: <span class="literal">false</span></span><br><span class="line">  verify: <span class="literal">false</span></span><br><span class="line">  placeholder: ヾﾉ≧∀≦)来啊，快活啊 </span><br><span class="line">  avatar: mm</span><br><span class="line">  guest_info: nick, mail, link</span><br><span class="line">  pageSize: 10</span><br></pre></td></tr></table></figure><p>这样就添加了评论系统，快去快去快活吧ヾﾉ≧∀≦)</p><hr><h2 id="添加站内搜索功能"><a href="#添加站内搜索功能" class="headerlink" title="添加站内搜索功能"></a>添加站内搜索功能</h2><p>先安装 hexo-generator-searchdb 插件，在 blog 根目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>然后修改<b>站点</b>配置文件，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>然后修改<b>主题</b>配置文件，修改 local_search</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后菜单中就会出现 “搜索” 来实现本地搜索了</p><hr><h2 id="顶部加载条"><a href="#顶部加载条" class="headerlink" title="顶部加载条"></a>顶部加载条</h2><p>在 blog/themes/next/ 下，修改主题配置文件，找到 “pace”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line">pace: <span class="literal">true</span></span><br><span class="line"><span class="comment"># Themes list:</span></span><br><span class="line"><span class="comment">#pace-theme-big-counter</span></span><br><span class="line"><span class="comment">#pace-theme-bounce</span></span><br><span class="line"><span class="comment">#pace-theme-barber-shop</span></span><br><span class="line"><span class="comment">#pace-theme-center-atom</span></span><br><span class="line"><span class="comment">#pace-theme-center-circle</span></span><br><span class="line"><span class="comment">#pace-theme-center-radar</span></span><br><span class="line"><span class="comment">#pace-theme-center-simple</span></span><br><span class="line"><span class="comment">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="comment">#pace-theme-fill-left</span></span><br><span class="line"><span class="comment">#pace-theme-flash</span></span><br><span class="line"><span class="comment">#pace-theme-loading-bar</span></span><br><span class="line"><span class="comment">#pace-theme-mac-osx</span></span><br><span class="line"><span class="comment">#pace-theme-minimal</span></span><br><span class="line"><span class="comment"># For example</span></span><br><span class="line"><span class="comment"># pace_theme: pace-theme-center-simple</span></span><br><span class="line">pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><p>其中 “pace_theme” 是加载条的样式，选择一个就可以了</p><hr><h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>然后修改主题配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><hr><h2 id="点击桃心效果"><a href="#点击桃心效果" class="headerlink" title="点击桃心效果"></a>点击桃心效果</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>首先，在 blog/themes/next/source/js/src/ 下新建 love.js，然后将上面👆的代码copy到love.js</p><p>然后修改<b>主题</b>配置文件，添加 love: true</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击爱心</span></span><br><span class="line">love: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>最后，在 blog/themes/next/layout/_layout.swig 文件<b>末尾</b>，body之前引入下面代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.love %&#125;</span><br><span class="line">  &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>如果想取消点击桃心效果，可以在<b>主题</b>配置文件中，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击爱心</span></span><br><span class="line">love: <span class="literal">false</span></span><br></pre></td></tr></table></figure><hr><h2 id="修改文章内超链接的样式"><a href="#修改文章内超链接的样式" class="headerlink" title="修改文章内超链接的样式"></a>修改文章内超链接的样式</h2><p>修改 themes/next/source/css/_common/components/post/post.styl，在末尾添加(@import 之前)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">  color: <span class="comment">#0593d3;</span></span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid <span class="comment">#0593d3;</span></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: <span class="comment">#fc6423;</span></span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid <span class="comment">#fc6423;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 .post-body, p是为了限定 a 的范围，不影响其他如标题的样式</p><hr><h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p>修改 blog/themes/next/layout/_macro/post.swig，</p><p>找到这一行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"&#123;&#123; url_for(tag.path) &#125;&#125;"</span> rel=<span class="string">"tag"</span>&gt;<span class="comment"># &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p>将其修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"&#123;&#123; url_for(tag.path) &#125;&#125;"</span> rel=<span class="string">"tag"</span>&gt;&lt;i class=<span class="string">"fa fa-tag"</span>&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="实现点击爆炸效果"><a href="#实现点击爆炸效果" class="headerlink" title="实现点击爆炸效果"></a>实现点击爆炸效果</h2><p>首先，在 themes/next/source/js/src/ 下新建 firework.js，复制一下代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>然后，在主题配置文件中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击爆炸效果</span></span><br><span class="line">fireworks: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>最后，和点击桃心效果一样，修改 themes/next/layout/_layout.swig, 在 body 之前添加代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">  &lt;canvas class=<span class="string">"fireworks"</span> style=<span class="string">"position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;"</span>&gt;&lt;/canvas&gt;</span><br><span class="line">  &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>同样，想要取消点击爆炸效果时，在<b>主题</b>配置文件中修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点击爆炸效果</span></span><br><span class="line">fireworks: <span class="literal">false</span></span><br></pre></td></tr></table></figure><hr><h2 id="实现打赏功能"><a href="#实现打赏功能" class="headerlink" title="实现打赏功能"></a>实现打赏功能</h2><p>首先，要有 微信和支付宝的收款二维码，放到 blog/source/upload/image/ 下</p><p>然后，在<b>配置</b>配置文件中，修改 “Reward”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward</span></span><br><span class="line">reward_comment: 小礼物走一走</span><br><span class="line">wechatpay: /upload/image/wechatpay.jpeg</span><br><span class="line">alipay: /upload/image/alipay.png</span><br><span class="line"><span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure><p>其中 “wechatpay.jpeg”， “alipay.png” 修改为你自己的图像名就可以了</p><hr><h2 id="实现打赏字体只闪动三次"><a href="#实现打赏字体只闪动三次" class="headerlink" title="实现打赏字体只闪动三次"></a>实现打赏字体只闪动三次</h2><p>修改文件 blog/themes/next/source/css/_common/components/post/post-reward.styl</p><p>找到 “#wechat”, “#alipay”，修改如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#wechat</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">    <span class="attribute">-moz-animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#alipay</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">    <span class="attribute">-moz-animation</span>: roll <span class="number">0.1s</span> <span class="number">3</span> linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="修改favicon图标"><a href="#修改favicon图标" class="headerlink" title="修改favicon图标"></a>修改favicon图标</h2><p>首先要有一个 32 × 32 的图标(.ico, .png 都可以)，放到 blog/source/upload/image文件夹下</p><p>然后，在<b>主题</b>配置文件中，定位到 “favicon”，只修改 medium 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">small: /images/favicon-16×16-next.png</span><br><span class="line">medium: /upload/image/图标名</span><br><span class="line">apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">safari_pinned_tab: /images/logo.svg</span><br><span class="line"><span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line"><span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><hr><h2 id="为博客加入动态背景"><a href="#为博客加入动态背景" class="headerlink" title="为博客加入动态背景"></a>为博客加入动态背景</h2><p>首先，在 blog/themes/source/js/src/ 下新建文件 particle.js，copy 以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">n,e,t</span>)</span>&#123;<span class="keyword">return</span> n.getAttribute(e)||t&#125;<span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(n)&#125;<span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=e(<span class="string">"script"</span>),o=t.length,i=t[o<span class="number">-1</span>];<span class="keyword">return</span>&#123;<span class="attr">l</span>:o,<span class="attr">z</span>:n(i,<span class="string">"zIndex"</span>,<span class="number">-1</span>),<span class="attr">o</span>:n(i,<span class="string">"opacity"</span>,<span class="number">.5</span>),<span class="attr">c</span>:n(i,<span class="string">"color"</span>,<span class="string">"0,0,0"</span>),<span class="attr">n</span>:n(i,<span class="string">"count"</span>,<span class="number">99</span>)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;c=u.width=<span class="built_in">window</span>.innerWidth||<span class="built_in">document</span>.documentElement.clientWidth||<span class="built_in">document</span>.body.clientWidth,a=u.height=<span class="built_in">window</span>.innerHeight||<span class="built_in">document</span>.documentElement.clientHeight||<span class="built_in">document</span>.body.clientHeight&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>)</span>&#123;l.clearRect(<span class="number">0</span>,<span class="number">0</span>,c,a);<span class="keyword">var</span> n,e,t,o,u,d,x=[w].concat(y);y.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;<span class="keyword">for</span>(i.x+=i.xa,i.y+=i.ya,i.xa*=i.x&gt;c||i.x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>,i.ya*=i.y&gt;a||i.y&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>,l.fillRect(i.x<span class="number">-.5</span>,i.y<span class="number">-.5</span>,<span class="number">1</span>,<span class="number">1</span>),e=<span class="number">0</span>;e&lt;x.length;e++)n=x[e],i!==n&amp;&amp;<span class="literal">null</span>!==n.x&amp;&amp;<span class="literal">null</span>!==n.y&amp;&amp;(o=i.x-n.x,u=i.y-n.y,d=o*o+u*u,d&lt;n.max&amp;&amp;(n===w&amp;&amp;d&gt;=n.max/<span class="number">2</span>&amp;&amp;(i.x-=<span class="number">.03</span>*o,i.y-=<span class="number">.03</span>*u),t=(n.max-d)/n.max,l.beginPath(),l.lineWidth=t/<span class="number">2</span>,l.strokeStyle=<span class="string">"rgba("</span>+m.c+<span class="string">","</span>+(t+<span class="number">.2</span>)+<span class="string">")"</span>,l.moveTo(i.x,i.y),l.lineTo(n.x,n.y),l.stroke()));x.splice(x.indexOf(i),<span class="number">1</span>)&#125;),r(i)&#125;<span class="keyword">var</span> c,a,u=<span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>),m=t(),d=<span class="string">"c_n"</span>+m.l,l=u.getContext(<span class="string">"2d"</span>),r=<span class="built_in">window</span>.requestAnimationFrame||<span class="built_in">window</span>.webkitRequestAnimationFrame||<span class="built_in">window</span>.mozRequestAnimationFrame||<span class="built_in">window</span>.oRequestAnimationFrame||<span class="built_in">window</span>.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;<span class="built_in">window</span>.setTimeout(n,<span class="number">1e3</span>/<span class="number">45</span>)&#125;,x=<span class="built_in">Math</span>.random,w=&#123;<span class="attr">x</span>:<span class="literal">null</span>,<span class="attr">y</span>:<span class="literal">null</span>,<span class="attr">max</span>:<span class="number">2e4</span>&#125;;u.id=d,u.style.cssText=<span class="string">"position:fixed;top:0;left:0;z-index:"</span>+m.z+<span class="string">";opacity:"</span>+m.o,e(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(u),o(),<span class="built_in">window</span>.onresize=o,<span class="built_in">window</span>.onmousemove=<span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;n=n||<span class="built_in">window</span>.event,w.x=n.clientX,w.y=n.clientY&#125;,<span class="built_in">window</span>.onmouseout=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;w.x=<span class="literal">null</span>,w.y=<span class="literal">null</span>&#125;;<span class="keyword">for</span>(<span class="keyword">var</span> y=[],s=<span class="number">0</span>;m.n&gt;s;s++)&#123;<span class="keyword">var</span> f=x()*c,h=x()*a,g=<span class="number">2</span>*x()<span class="number">-1</span>,p=<span class="number">2</span>*x()<span class="number">-1</span>;y.push(&#123;<span class="attr">x</span>:f,<span class="attr">y</span>:h,<span class="attr">xa</span>:g,<span class="attr">ya</span>:p,<span class="attr">max</span>:<span class="number">6e3</span>&#125;)&#125;setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;i()&#125;,<span class="number">100</span>)&#125;();</span><br></pre></td></tr></table></figure><p>然后，找到 blog/themes/next/layout/_layout.swig，在末尾，body 之前 加上下列代码：</p><p>这里给出两种样式：</p><ul><li>默认灰色线条</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/particle.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>浅蓝色线条</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/particle.js"</span> count=<span class="string">"50"</span> zindex=<span class="string">"-2"</span> opacity=<span class="string">"1"</span> color=<span class="string">"0, 104, 183"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当然你也可以自定义自己喜欢的样式😍</p><hr><h2 id="为项目主页添加-README-md"><a href="#为项目主页添加-README-md" class="headerlink" title="为项目主页添加 README.md"></a>为项目主页添加 README.md</h2><p>项目需要添加 README.md 说明文件，由于 .md 文件解析时会被自动生成 html 网页，所以解析时需要跳过 README.md</p><p>首先，把 “README.md” 文件放到 blog/source/ 目录下</p><p>然后，在<b>站点</b>配置文件中，搜索 “skip_render”，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>这样 “hexo g”生成时就会跳过”README.md”</p><hr><h2 id="文章结束语"><a href="#文章结束语" class="headerlink" title="文章结束语"></a>文章结束语</h2><p>首先，在 themes/next/layout/_macro 中新建 passage-end-tag.swig，添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">&lt;div style=<span class="string">"text-align: center; color: #ccc; font-size: 14px;"</span>&gt;</span><br><span class="line">----------本文结束&lt;i class=<span class="string">"fa fa-paw"</span>&gt;&lt;/i&gt;感谢您的阅读----------</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后，在 themes/next/layout/_macro/post.swig 文件中，找到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br><span class="line">&#123;<span class="comment">### END POST BODY ###&#125;</span></span><br><span class="line">&#123;<span class="comment">#####################&#125;</span></span><br></pre></td></tr></table></figure><p>在上面代码👆之前添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&#123;% <span class="keyword">if</span> not is_index and theme.passage_end_tag: %&#125;</span><br><span class="line">&#123;% include <span class="string">'passage-end-tag.swig'</span> %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>最后，在<b>主题</b>配置文件中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加标记</span></span><br><span class="line">passage_end_tag: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>将 passage_end_tag 设置为 false ，就不显示了</p><hr><h2 id="添加-fork-me-on-github"><a href="#添加-fork-me-on-github" class="headerlink" title="添加 fork me on github"></a>添加 fork me on github</h2><h3 id="复制代码"><a href="#复制代码" class="headerlink" title="复制代码"></a>复制代码</h3><p>Form me on Github 彩带的默认样式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"https://github.com/you"</span>&gt;     </span><br><span class="line">    &lt;img style=<span class="string">"position: absolute; top: 0;</span></span><br><span class="line"><span class="string">    left: 0; border: 0;"</span> src=<span class="string">"https://camo.githubusercontent.com/567c3a48d796e2fc0</span></span><br><span class="line"><span class="string">    6ea80409cc9dd82bf714434/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769</span></span><br><span class="line"><span class="string">    746875622f726962626f6e732f666f726b6d655f6c6566745f6461726b626c75655f3132313632</span></span><br><span class="line"><span class="string">    312e706e67"</span> alt=<span class="string">"Fork me on GitHub"</span> data-canonical-</span><br><span class="line">    src=<span class="string">"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png"</span>&gt;</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>目前，彩带网站凉了</p><p>Github corners 的默认样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://your-url"</span> <span class="attr">class</span>=<span class="string">"github-corner"</span> <span class="attr">aria-label</span>=<span class="string">"View source on GitHub"</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 250 250"</span> <span class="attr">style</span>=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">style</span>=<span class="string">"transform-origin: 130px 106px;"</span> <span class="attr">class</span>=<span class="string">"octo-arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">class</span>=<span class="string">"octo-body"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;@<span class="keyword">keyframes</span> octocat-wave&#123;0%,100%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(0)&#125;20%,60%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(-25deg)&#125;40%,80%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(10deg)&#125;&#125;@<span class="keyword">media</span> (max-width:<span class="number">500px</span>)&#123;<span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:none&#125;<span class="selector-class">.github-corner</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>点击<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>获取更多样式</p><h3 id="粘贴代码"><a href="#粘贴代码" class="headerlink" title="粘贴代码"></a>粘贴代码</h3><p>在 blog/themes/next/layout/_layout.swig 文件中找到 class=”headband” ，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"headband"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;header id=<span class="string">"header"</span> class=<span class="string">"header"</span> itemscope itemtype=<span class="string">"http://schema.org/WPHeader"</span>&gt;</span><br><span class="line">      &lt;a href=<span class="string">"https://github.com/QIXQI"</span> class=<span class="string">"github-corner"</span> aria-label=<span class="string">"View source on GitHub"</span>&gt;&lt;svg width=<span class="string">"80"</span> height=<span class="string">"80"</span> viewBox=<span class="string">"0 0 250 250"</span> style=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;path d=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> fill=<span class="string">"currentColor"</span> style=<span class="string">"transform-origin: 130px 106px;"</span> class=<span class="string">"octo-arm"</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> fill=<span class="string">"currentColor"</span> class=<span class="string">"octo-body"</span>&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br><span class="line">      &lt;div class=<span class="string">"header-inner"</span>&gt; &#123;%- include <span class="string">'_partials/header.swig'</span> %&#125; &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br></pre></td></tr></table></figure><p>将 a 元素的 href 改为你自己的github 地址，如 <a href="https://github.com/QIXQI" target="_blank" rel="noopener">https://github.com/QIXQI</a></p><p>Perfect…<strong>装逼格调</strong>从此高大上</p><hr><h2 id="浏览文章时显示浏览进度"><a href="#浏览文章时显示浏览进度" class="headerlink" title="浏览文章时显示浏览进度"></a>浏览文章时显示浏览进度</h2><p>修改<b>主题</b>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line">scrollpercent: <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><h2 id="添加不蒜子站点统计"><a href="#添加不蒜子站点统计" class="headerlink" title="添加不蒜子站点统计"></a>添加不蒜子站点统计</h2><p>编辑<b>主题</b>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt; 访客数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  <span class="comment">#custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt; 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  <span class="comment">#custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">true</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i&gt; 阅读次数</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>其中，enable 是整个 busuanzi 统计系统的开关</p><p>site_uv 统计整个站点的访客数</p><p>site_pv 统计整个站点的访问量</p><p>page_pv 统计单页面的阅读次数</p><p>但是，由于busuanzi 作者的域名被收回，还需要重新设置域名</p><p>在 blog/themes/next/layout/_third-party/analytics 下，修改 busuanzi-counter.swig</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">找到如下代码</span><br><span class="line">&lt;script async src=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">修改为：</span><br><span class="line">&lt;script async src=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这样就可以了</p><hr><h2 id="添加-ShareSDK-分享"><a href="#添加-ShareSDK-分享" class="headerlink" title="添加 ShareSDK 分享"></a>添加 ShareSDK 分享</h2><p>多说分享凉了，也不太喜欢主题提供的分享，爬到博主<a href="http://blog.magicer.xyz/2016/04/add-sharesdk/" target="_blank" rel="noopener">Magicer</a>的ShareSDK分享，还不错</p><h3 id="注册-ShareSDK"><a href="#注册-ShareSDK" class="headerlink" title="注册 ShareSDK"></a>注册 ShareSDK</h3><p>简单填写信息注册后，可以先不实名注册，添加应用，生成 appid 和 appkey</p><p>然后在左边👈 添加 ShareSDK，就可以了</p><h3 id="创建-sharesdk-swig"><a href="#创建-sharesdk-swig" class="headerlink" title="创建 sharesdk.swig"></a>创建 sharesdk.swig</h3><p>在 blog/themes/next/layout/_partials/share/ 文件夹下，创建sharesdk.swig，添加一下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--MOB SHARE BEGIN--&gt;</span><br><span class="line">&lt;div class=<span class="string">"-mob-share-ui-button -mob-share-open"</span>&gt;分享&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"-mob-share-ui"</span> style=<span class="string">"display: none"</span>&gt;</span><br><span class="line">    &lt;ul class=<span class="string">"-mob-share-list"</span>&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-weibo"</span>&gt;&lt;p&gt;新浪微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-tencentweibo"</span>&gt;&lt;p&gt;腾讯微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-qzone"</span>&gt;&lt;p&gt;QQ空间&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-qq"</span>&gt;&lt;p&gt;QQ好友&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-renren"</span>&gt;&lt;p&gt;人人网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-kaixin"</span>&gt;&lt;p&gt;开心网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-douban"</span>&gt;&lt;p&gt;豆瓣&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-facebook"</span>&gt;&lt;p&gt;Facebook&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class=<span class="string">"-mob-share-twitter"</span>&gt;&lt;p&gt;Twitter&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;div class=<span class="string">"-mob-share-close"</span>&gt;取消&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"-mob-share-ui-bg"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script id=<span class="string">"-mob-share"</span> src=<span class="string">"https://f1.webshare.mob.com/code/mob-share.js?appkey=&#123;&#123;theme.shareSDKappkey&#125;&#125;"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;!--MOB SHARE END--&gt;</span><br></pre></td></tr></table></figure><h3 id="添加可选配置"><a href="#添加可选配置" class="headerlink" title="添加可选配置"></a>添加可选配置</h3><p>在 blog/themes/blog/layout/post.swig中，修改一下部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"post-spread"</span>&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.jiathis %&#125;</span><br><span class="line">        &#123;% include <span class="string">'_partials/share/jiathis.swig'</span> %&#125;</span><br><span class="line">      &#123;% elseif theme.baidushare %&#125;</span><br><span class="line">        &#123;% include <span class="string">'_partials/share/baidushare.swig'</span> %&#125;</span><br><span class="line">      &#123;% elseif theme.add_this_id %&#125;</span><br><span class="line">        &#123;% include <span class="string">'_partials/share/add-this.swig'</span> %&#125;</span><br><span class="line">      &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% include <span class="string">'_partials/share/duoshuo_share.swig'</span> %&#125;</span><br><span class="line">      &#123;% elseif theme.sharesdk %&#125;</span><br><span class="line">        &#123;% include <span class="string">'_partials/share/sharesdk.swig'</span> %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="修改主题配置文件-1"><a href="#修改主题配置文件-1" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在<b>主题</b>配置文件中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sharesdk</span></span><br><span class="line">sharesdk: <span class="literal">true</span></span><br><span class="line">shareSDKappkey: 你的appkey</span><br></pre></td></tr></table></figure><p>这样不想使用时，改为 sharesdk: false 就可以了</p><hr><h2 id="添加字数统计、阅读时长"><a href="#添加字数统计、阅读时长" class="headerlink" title="添加字数统计、阅读时长"></a>添加字数统计、阅读时长</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><b>站点</b>根目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>有提示说 Node版本 7.6.0 之前，请安装 2.x 版本，不过我没遇到这个 bug，那就放在这里Warning 一下吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><h3 id="修改主题配置文件-2"><a href="#修改主题配置文件-2" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在 <b>主题</b> 配置文件下修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">post_wordcount:</span><br><span class="line">item_text: <span class="literal">true</span></span><br><span class="line">wordcount: <span class="literal">true</span>  <span class="comment"># 单篇 字数统计</span></span><br><span class="line">min2read: <span class="literal">true</span>  <span class="comment"># 单篇 阅读时长</span></span><br><span class="line">totalcount: <span class="literal">true</span><span class="comment"># 网站 字数统计</span></span><br><span class="line">separated_meta: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="修改显示文字"><a href="#修改显示文字" class="headerlink" title="修改显示文字"></a>修改显示文字</h3><p>其实，到这里已经配好了，这部分知识修改显示的文字</p><p>在 blog/themes/next/layout/_macro/post.swig 文件中，找到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>然后修改，加上单位字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>同样的，可以修改 “阅读时长”，加上单位分钟</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span title=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="修改作者头像为可以旋转的圆形"><a href="#修改作者头像为可以旋转的圆形" class="headerlink" title="修改作者头像为可以旋转的圆形"></a>修改作者头像为可以旋转的圆形</h2><p>在 blog/themes/next/source/css/_common/components/sidebar/sidebar-author.styl 文件末尾添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="隐藏网页底部-强力驱动与主题"><a href="#隐藏网页底部-强力驱动与主题" class="headerlink" title="隐藏网页底部 强力驱动与主题"></a>隐藏网页底部 强力驱动与主题</h2><p>打开<b>主题</b>配置文件，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo link (Powered by Hexo)</span></span><br><span class="line">powered: <span class="literal">false</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">theme:</span><br><span class="line"><span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line"><span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line"><span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">version: <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><h2 id="修改网页底部桃心变星星✨"><a href="#修改网页底部桃心变星星✨" class="headerlink" title="修改网页底部桃心变星星✨"></a>修改网页底部桃心变星星✨</h2><p>在 blog/themes/next/layout/_partials/footer.swig 中 找到 “with-love”，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=<span class="string">"with-love"</span>&gt;</span><br><span class="line">&lt;i class=<span class="string">"fa fa-star"</span>&gt;&lt;/i&gt;</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>当然，可以在 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">图标库</a> 选择自己喜欢的图标</p><hr><h2 id="插入音频"><a href="#插入音频" class="headerlink" title="插入音频"></a>插入音频</h2><h3 id="方式一：html"><a href="#方式一：html" class="headerlink" title="方式一：html"></a>方式一：html</h3><p>由于 .md 文件可以方便的导入 html 代码，所以 html 引入音乐的方式可以考虑</p><p>有两种方式，一个是 flash，另一个是 html5，由于 flash 逐渐被淘汰，而且ios移动端不支持 flash ，这里只介绍 html5 方式</p><p>在 博客.md 文件中插入  audio 元素</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"https://qixqi.club/audio/homeway.mp3"</span> <span class="attr">controls</span> <span class="attr">none</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="code">    This browser does not support our audio format.</span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>效果如下：</p><audio src="https://qixqi.club/audio/homeway.mp3" controls none><br>  <p><br>    This browser does not support our audio format.<br>  </p><br></audio><h3 id="方式二：网易云音乐的外链"><a href="#方式二：网易云音乐的外链" class="headerlink" title="方式二：网易云音乐的外链"></a>方式二：网易云音乐的外链</h3><p><img src="/2019/04/19/hexo-beautify/iframe1.png" alt="aratar"></p><p><img src="/2019/04/19/hexo-beautify/iframe2.png" alt="aratar"></p><p>最后不要自动播放，一个是好多浏览器对自动播放不太友好，二是对用户也不太友好</p><p>然后在 博客.md 文件中插入  iframe 元素</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=28267530&amp;auto=0&amp;height=66"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>效果如下：</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28267530&auto=0&height=66"></iframe><h3 id="方式三：借助插件"><a href="#方式三：借助插件" class="headerlink" title="方式三：借助插件"></a>方式三：借助插件</h3><p>在<b>站点</b>根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>在 博客 .md 文件中插入</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer "南方姑娘" "赵雷" "https://qixqi.club/audio/southern-girl.mp3" "https://qixqi.club/images/southern-girl.jpg" "autoplay=false" %&#125;</span><br></pre></td></tr></table></figure><p>同样最好不要自动播放，同时 “autoplay=false”报错：Unrecognized tag argument，所以删去后效果如下</p>        <div id="aplayer-VcSOAwCV" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-VcSOAwCV"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "南方姑娘",              author: "赵雷",              url: "https://qixqi.club/audio/southern-girl.mp3",              pic: "https://qixqi.club/images/southern-girl.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><h3 id="方式一：html-1"><a href="#方式一：html-1" class="headerlink" title="方式一：html"></a>方式一：html</h3><p>html 同样有两种方式插入视频， flash, html5，这里只介绍 html5方式</p><p>在博客 .md 文件中插入 video 元素</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"https://qixqi.club/video/puppy.mp4"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">poster</span>=<span class="string">"https://qixqi.club/images/puppy.png"</span> <span class="attr">preload</span>=<span class="string">"metadata"</span> <span class="attr">controls</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;p&gt;浏览器不支持&lt;/p&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>效果如下</p><video src="https://qixqi.club/video/puppy.mp4" width="400" height="300" poster="https://qixqi.club/images/puppy.png" preload="metadata" controls><br>    <p>浏览器不支持</p><br></video><h3 id="方式二：bilibili-的-外链"><a href="#方式二：bilibili-的-外链" class="headerlink" title="方式二：bilibili 的 外链"></a>方式二：bilibili 的 外链</h3><p>在博客 .md 文件中插入 iframe 元素</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=49966170&amp;cid=87480266&amp;page=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?aid=49966170&cid=87480266&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h3 id="方式三：借助插件-1"><a href="#方式三：借助插件-1" class="headerlink" title="方式三：借助插件"></a>方式三：借助插件</h3><p>在 <b>站点</b> 根目录下，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><p>在博客 .md 文件中插入 video 元素</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer "url=https://qixqi.club/video/puppy.mp4" "pic=https://qixqi.club/images/puppy.png" "loop=yes" "theme=#FADFA3" "autoplay=false" "token=tokendemo" %&#125;</span><br></pre></td></tr></table></figure><p>同样不自动播放，但奇怪的是”autoplay=false”不报错，那就不删除了</p><p>效果如下：</p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"https://qixqi.club/video/puppy.mp4","pic":"https://qixqi.club/images/puppy.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><hr><h2 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2><p>在<b>站点</b>根目录下，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure><p>然后在 &lt;主题&gt; 配置文件下，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 看板娘</span></span><br><span class="line">live2d:</span><br><span class="line"><span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">scriptFrom: <span class="built_in">local</span></span><br><span class="line">pluginRootPath: live2dw/</span><br><span class="line">pluginJsPath: lib/</span><br><span class="line">pluginModelPath: assets/</span><br><span class="line">tagMode: <span class="literal">false</span></span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">model: </span><br><span class="line">use: live2d-widget-model-wanko</span><br><span class="line">display:</span><br><span class="line">position: right</span><br><span class="line">width: 150</span><br><span class="line">height: 300</span><br><span class="line">mobile:</span><br><span class="line">show: <span class="literal">true</span></span><br><span class="line">react:</span><br><span class="line">opacity: 0.7</span><br></pre></td></tr></table></figure><p>目前暂时不能通过 enable: false 来取消看板娘效果，但可以通过可以卸载扩展</p><p>在<b>站点</b>根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure><p>通过插件安装的看板娘是个哑巴，不能看她换衣服，十分不爽，该考试了，下次再仔细研究看板娘的穿衣打扮，目前养个漂亮的小哑巴还是不错的。</p><p>未完待续。。。</p><hr><h2 id="提交百度和Google收录"><a href="#提交百度和Google收录" class="headerlink" title="提交百度和Google收录"></a>提交百度和Google收录</h2><h3 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改主题与站点配置文件均可，添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动生成 sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml<span class="comment"># Google</span></span><br><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml<span class="comment"># 百度</span></span><br></pre></td></tr></table></figure><h3 id="提交给Google"><a href="#提交给Google" class="headerlink" title="提交给Google"></a>提交给Google</h3><p>关于如何使用Google，相信你们都有办法，资金充足的话可以自建服务器来科学浏览网页<a href="https://qixqi.club:91/2019/04/28/ssr-creat" target="_blank" rel="noopener">vultr</a>，有详细的教程，如果不想破费的话，可以留言，留下联系方式，我会分享自己知道的方法。</p><p>登陆 <a href="https://www.google.com/webmasters/" target="_blank" rel="noopener">Google站长</a></p>]]></content>
    
    <summary type="html">
    
      这篇随笔记录了自己 Github Pages 美化的过程，以及添加一系列的常用功能，持续更新
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro/MacOS 搭建 Github Pages 个人博客</title>
    <link href="https://qixqi.github.io/2019/04/15/hexo/"/>
    <id>https://qixqi.github.io/2019/04/15/hexo/</id>
    <published>2019-04-14T16:37:44.000Z</published>
    <updated>2019-04-21T12:12:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这篇主要是小白记录新建 Github Pages 的过程，大佬手下留情 :-D</p><p>有疑问可以交流的啊  <a href="https://github.com/QIXQI/qixqi.github.io/issues" target="_blank" rel="noopener">Github</a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28267530&auto=0&height=66"></iframe><h2 id="配置本地-Hexo"><a href="#配置本地-Hexo" class="headerlink" title="配置本地 Hexo:"></a>配置本地 Hexo:</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Ｎode.js"></a>安装 Ｎode.js</h3><p>Manjaro  利用 nvm 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装 nvm 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><p>MacOS 利用 Homebrew 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</span><br></pre></td></tr></table></figure><p>安装 brew 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>Manjaro 似乎默认已经安装，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h3 id="全局安装-Hexo"><a href="#全局安装-Hexo" class="headerlink" title="全局安装 Hexo"></a>全局安装 Hexo</h3><p>Manjaro</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="创建blog文件"><a href="#创建blog文件" class="headerlink" title="创建blog文件"></a>创建blog文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="启动-Hexo"><a href="#启动-Hexo" class="headerlink" title="启动 Hexo"></a>启动 Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="替换为next主题"><a href="#替换为next主题" class="headerlink" title="替换为next主题"></a>替换为next主题</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改 blog 目录下的 _config.yml 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>将 theme: landscape 替换为 theme: next</p><h3 id="启动-hexo-服务器"><a href="#启动-hexo-服务器" class="headerlink" title="启动 hexo 服务器"></a>启动 hexo 服务器</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在执行完上面三条命令后，终端中显示 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  ，就会看到本地 hexo 服务器已经配置成功</p><p>效果图</p><p><img src="/2019/04/15/hexo/next.png" alt="aratar"></p><h3 id="开启-MathJax"><a href="#开启-MathJax" class="headerlink" title="开启 MathJax"></a>开启 MathJax</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./themes/next/_config.yml</span><br></pre></td></tr></table></figure><p>找到 mathjax</p><p>修改为  mathjax:</p><p>​         enable: true</p><hr><h2 id="Github-Pages-配置"><a href="#Github-Pages-配置" class="headerlink" title="Github Pages 配置"></a>Github Pages 配置</h2><p>hexo 在本地已经配置好本地服务器，接下来需要在github上创建 repository</p><h3 id="选择New-repository"><a href="#选择New-repository" class="headerlink" title="选择New repository"></a>选择New repository</h3><h3 id="选择repository-name"><a href="#选择repository-name" class="headerlink" title="选择repository name"></a>选择repository name</h3><p>repository name 一般设置为　“username.github.io”, 其中”username” 一般是你的github 用户名，</p><p>选择库名后，在页面底端勾选”Initialize this repository with a README “;</p><p>创建成功后就可以在浏览器中使用 https://用户名.github.io 来访问</p><hr><h2 id="将本地配置的-blog-提交到-Github-Pages"><a href="#将本地配置的-blog-提交到-Github-Pages" class="headerlink" title="将本地配置的 blog 提交到 Github Pages"></a>将本地配置的 blog 提交到 Github Pages</h2><h3 id="Clone-repository"><a href="#Clone-repository" class="headerlink" title="Clone repository"></a>Clone repository</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure><h3 id="生成-index-html"><a href="#生成-index-html" class="headerlink" title="生成 index.html"></a>生成 index.html</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd username.github.io</span><br><span class="line">echo "Hello World" &gt; index.html</span><br></pre></td></tr></table></figure><h3 id="推送本地文件到-Github-Pages"><a href="#推送本地文件到-Github-Pages" class="headerlink" title="推送本地文件到 Github Pages"></a>推送本地文件到 Github Pages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m "Initial commit"</span><br><span class="line">git config --global user.name "github用户名"</span><br><span class="line">git config --global user.email github邮箱</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果输入　“git push -u origin master” 后邮箱报错，可以到 <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> 的 “Setting” 中的 “Email” 取消勾选 “Keep my email address private”</p><hr><h2 id="同步本地的-hexo-博客到-github-上"><a href="#同步本地的-hexo-博客到-github-上" class="headerlink" title="同步本地的 hexo 博客到 github 上"></a>同步本地的 hexo 博客到 github 上</h2><h3 id="安装一个扩展"><a href="#安装一个扩展" class="headerlink" title="安装一个扩展"></a>安装一个扩展</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><p>修改添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/username/username.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="清除缓存上传-hexo-到-Github-Pages"><a href="#清除缓存上传-hexo-到-Github-Pages" class="headerlink" title="清除缓存上传 hexo 到 Github Pages"></a>清除缓存上传 hexo 到 Github Pages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p> 这时候在浏览器中输入 https://用户名.github.io 就可以访问博客了</p><hr><h2 id="美化：更换-theme"><a href="#美化：更换-theme" class="headerlink" title="美化：更换 theme"></a>美化：更换 theme</h2><p>CyanStyle 是 Wordpress 的 Twentytwelve 主题在 Hexo 上的迁移，清新简约，个人感觉良好</p><h3 id="clone-hexo-theme-cyanstyle"><a href="#clone-hexo-theme-cyanstyle" class="headerlink" title="clone hexo-theme-cyanstyle"></a>clone hexo-theme-cyanstyle</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/wizardforcel/hexo-theme-cyanstyle themes/cyanstyle</span><br></pre></td></tr></table></figure><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改 _config.yml"></a>修改 _config.yml</h3><p>在 blog 目录下，</p><p>修改 _config.yml 中的 theme 为 theme: cyanstyle</p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/2019/04/15/hexo/cyanstyle.png" alt="aratar"></p><p>个人觉得挺好看的</p><h3 id="提交到-Github-Repositories"><a href="#提交到-Github-Repositories" class="headerlink" title="提交到 Github Repositories"></a>提交到 Github Repositories</h3><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="浏览器浏览"><a href="#浏览器浏览" class="headerlink" title="浏览器浏览"></a>浏览器浏览</h3><hr><h2 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h2><p>主要解决在 hexo 博客中插入图片路径问题</p><h3 id="修改-config-yml-1"><a href="#修改-config-yml-1" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><p>在 blog 目录下修改 _config.yml 配置文件中的 post_asset_folder: true</p><p>此时在新建博客的时候会自动创建一个文件夹</p><h3 id="安装一个扩展-1"><a href="#安装一个扩展-1" class="headerlink" title="安装一个扩展"></a>安装一个扩展</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "博客名"</span><br></pre></td></tr></table></figure><p>之后会在 blog/source/_post/下出现 “博客名.md” 和 “博客名”文件夹</p><h3 id="编写-md-文件"><a href="#编写-md-文件" class="headerlink" title="编写 .md 文件"></a>编写 .md 文件</h3><p>编写 blog/source/_post/“博客名.md”</p><p>markdown 是一种标记语言，网上教程太多，这里不再赘述了 O(∩_∩)O~~</p><h3 id="在-md-文件中插入图片"><a href="#在-md-文件中插入图片" class="headerlink" title="在 .md 文件中插入图片"></a>在 .md 文件中插入图片</h3><p>先将图片文件放到 /blog/source/_post/“博客名” 文件夹下</p><p>然后在 .md 文件中 插入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![aratar](图像名)</span><br></pre></td></tr></table></figure><p>输入图像名的时候不能有路径，只需要图像名和后缀即可，比如 “cyanstyle.png”</p><p>注意：不要通过 “选择本地文件” 方式插入图片，这种方式插入图片时是绝对路径</p><h3 id="本地预览-1"><a href="#本地预览-1" class="headerlink" title="本地预览"></a>本地预览</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><h3 id="提交到-Github-Repositories-1"><a href="#提交到-Github-Repositories-1" class="headerlink" title="提交到 Github Repositories"></a>提交到 Github Repositories</h3><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>浏览器访问 https://用户名.github.io</p><p><br>    <span>参考：<a href="https://www.jianshu.com/p/e49eeafe506e" target="_blank" rel="noopener">https://www.jianshu.com/p/e49eeafe506e</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">https://www.jianshu.com/p/c2ba9533088a</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/cf0628478a4e" target="_blank" rel="noopener">https://www.jianshu.com/p/cf0628478a4e</a></span><br><br></p>]]></content>
    
    <summary type="html">
    
      本文主要涉及hexo next建站初期的详细过程，目前暂不包括美化过程，持续更新 ......
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
