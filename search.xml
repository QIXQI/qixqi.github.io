<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo blog 美化升级]]></title>
    <url>%2F2019%2F04%2F19%2Fhexo-beautify%2F</url>
    <content type="text"><![CDATA[1&#123;% aplayer "Way Back Home" "SHAUN" "https://qixqi.club/audio/homeway.mp3" "https://qixqi.club/images/zhaolei1.jpeg" %&#125; 1&#123;% dplayer "url=https://qixqi.club/video/dingning.mp4" "pic=https://qixqi.club/images/zhaolei1.jpeg" "loop=yes" "theme=#FADFA3" "token=tokendemo" %&#125; 将 Blog 分发到不同的库由于某度相当变态的爬虫算法，Github 完全反对某度爬取，所以使用 Github 不得不放弃某度国内庞大的用户，但可以通过将 blog 分发到不同的库，可以同样方便的将自己的 blog 推送到某度。 上篇已经布置了 Github PagesGitee Pages 码云，同样提供免费的 Page 服务，注册后（用户名尽量精简），新建一个与用户名相同的仓库（不区分大小写），这样可以避免二级域名 开启 Pages服务：在仓库目录下，在上方”服务”中开启 “Gitee Pages”，生成网址：https://qixqi.gitee.io 然后到本地博客目录，我的是blog，修改配置文件 123456deploy: type: git repository: - https://github.com/QIXQI/qixqi.github.io.git - https://gitee.com/QIXQI/qixqi.git branch: master 提交 blog 1hexo clean; hexo g; hexo d; 更新 Pages 服务：码云恶心的一点就是提交 blog 后每次需要手动更新Pages 服务，否则访问 https://qixqi.gitee.io 仍是上次提交的blog，亟需解决的问题。 然后访问 https://qixqi.gitee.io ，OK Coding (目前Coding 已经被腾讯云开发者平台包揽) 同样注册账号，创建与用户名一样的仓库 在仓库中左侧”代码”中开启 Pages 服务，生成 https://qixxqi.coding.me 修改本地 blog 配置 12345678deploy: type: git repository: - https://github.com/QIXQI/qixqi.github.io.git - https://gitee.com/QIXQI/qixqi.git - https://git.dev.tencent.com/QIXXQI/qixxqi.git branch: master 提交 blog，Coding与Github一样，提交后无需再更新Pages服务，直接访问 https://qixxqi.coding.me 即可，多刷新几次就可以 在自己的服务器上搭建 blog由于先前自己搭建了一台腾讯云的服务器，学生版，一年才 ¥120，很便宜的； 服务器用 nginx 挂出多个网站 服务器只用来写 blog 未免有些浪费，可以另开一个网站来挂载 blog 由于 80端口已经监听 http, 443端口监听 https，需要新开一个端口来监听 blog网站 访问腾讯云安全组 ，添加入站规则，类型：自定义，来源：0.0.0.0/0，协议端口：TCP: 90，策略：允许 （根据自己惨痛教训，必须要在安全组开启端口） 连接服务器，编辑 /etc/nginx/conf.d/virtual.conf（没有新建） 12345678910server&#123; listen 90; # 新建的端口 root /usr/share/nginx/qixqi; # blog 根目录（与网站根目录类似) server_name: localhost; charset: utf-8; location / &#123; index index.php index.html index.htm; &#125;&#125; 这里只是简单配置一下 blog 的配置，更详细的可以参考网站的配置 最后一步：在服务器配置 git ​ 安装 git: 1yum install git ​ 创建 git 仓库 12345mkdir /home/git/chown -R $USER:$USER /home/git/chmod -R 755 /home/gitcd /home/gitgit init --bare qixqi.git # qixqi 为仓库名，可以自设 ​ 创建一个新的 git 钩子 在 /home/git/qixqi.git/hooks 文件下新建钩子文件 post-receive 12cd /home/git/qixqi.git/hooksvim post-receive 修改 12#!/bin/bashgit --work-tree=/usr/share/nginx/qixqi --git dir=/home/git/qixqi.git checkout -f ​ 工作原理是，提交时先访问 /home/git/qixqi.git ，然后receive，提交到 blog根. 目录，/usr/share/nginx/qixqi/ 修改本地 blog 的配置文件 12345678deploy: type: git repository: - https://github.com/QIXQI/qixqi.github.io.git - https://gitee.com/QIXQI/qixqi.git - https://git.dev.tencent.com/QIXXQI/qixxqi.git - root@qixqi.club:/home/git/qixqi branch: master 其中 www.qixqi.club 是我新申请的域名，一年才¥1 提交 1hexo clean; hexo g; hexo d 这样提交一次，会同时分发到4个库 到这里为止，就配置好了，当然你可以不用4个都分发，只需要选择Github 和另外一个即可，推荐 Gitee，因为Coding 速度最慢，而服务器最快，但收费啊。 创建 “分类” “标签” “关于” 页面在 blog 站点目录下 123hexo new page "categories"hexo new page "tags"hexo new page "about" 这样就在 blog/source 目录下创建了 “categories”, “tags”, “about” 文件夹，包含的index.md 分别是页面的主页 但这时候还不能在主页菜单中显示 “分类” “标签” “关于”，需要修改主题配置文件，在 blog/themes/next/下修改 _config.yml 1234567menu: home: / || home archives: /archives/ || archive categories: /categories/ || th tags: /tags/ || tags about: /about/ || user #commonweal: /404/ || heartbeat #腾讯404公益页面 那么怎样给创建的博文添加标签并分类呢？ 只需要新建博客的时候，修改 .md 文件头部即可，比如： 12345678910111213---title: #标题author: #作者date: #新建博客的时间tags: #添加多个标签，Hexo与next并行关系 - Hexo - nextcategories: #添加分类，Hexo与next是包含关系 - Hexo - nexttoc: true #生成文章目录description: #描述，首页文章显示的摘要--- 这样就添加了标签与分类 设置头像选择好图片后，在 blog 站点下的source 文件夹下，新建 upload 文件夹，在到upload 文件夹下新建 image 文件夹，将图片放到image 文件夹下 然后配置主题配置文件，修改 1avatar: /upload/image/"图像名" 基本设置修改 blog 站点的配置文件，即根目录下的_config.yml 12345title: #标题subtitle: #副标题description: Keep fucking the world #站点描述author: #作者language: zh-Hans 主题设置Next 主题自带4中外观，在主题配置文件中修改 1234scheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini 看看自己喜欢哪个😍 评论系统valine valine 是免费、简洁、快速、高效、界面友好、轻量易用的评论系统 注册 LeanCloud跟着提示注册即可 创建LeanCloud 应用选择”开发版” 在设置 &gt; 应用Key， 就能看到自己应用的 App ID, App Key了 在设置 &gt; 安全中心 &gt; Web 安全域名 ，添加自己的域名和本地的 localhost:4000 比如我的： 12345678http://localhost:4000https://qixqi.github.iohttps://qixqi.gitee.iohttps://qixxqi.coding.mehttp://qixqi.club:90https://qixqi.club:91http://zhengxiang4056.club:90https://zhengxiang4056.club:91 你的可能没那么多，全添加上就行了，然后保存 修改主题配置文件在 blog/theme/next/ 下，修改主题配置文件，修改 valine 12345678910valine: enable: true appid: #你的App id，最好复制，自己输入出错率高 appkey: #你的App key notify: false verify: false placeholder: ヾﾉ≧∀≦)来啊，快活啊 avatar: mm guest_info: nick, mail, link pageSize: 10 这样就添加了评论系统，快去快去快活吧ヾﾉ≧∀≦) 添加站内搜索功能先安装 hexo-generator-searchdb 插件，在 blog 根目录执行 1npm install hexo-generator-searchdb --save 然后修改站点配置文件，添加代码 12345search: path: search.xml field: post format: html limit: 10000 然后修改主题配置文件，修改 local_search 12local_search: enable: true 然后菜单中就会出现 “搜索” 来实现本地搜索了 顶部加载条在 blog/themes/next/ 下，修改主题配置文件，找到 “pace” 12345678910111213141516171819# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal 其中 “pace_theme” 是加载条的样式，选择一个就可以了 添加RSS安装插件 1npm install hexo-generator-feed --save 然后修改主题配置文件 1rss: /atom.xml 点击桃心效果1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 首先，在 blog/themes/next/source/js/src/ 下新建 love.js，然后将上面👆的代码copy到love.js 然后修改主题配置文件，添加 love: true 12# 点击爱心love: true 最后，在 blog/themes/next/layout/_layout.swig 文件末尾，body之前引入下面代码 123&#123;% if theme.love %&#125; &lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 如果想取消点击桃心效果，可以在主题配置文件中，修改 12# 点击爱心love: false 修改文章内超链接的样式修改 themes/next/source/css/_common/components/post/post.styl，在末尾添加(@import 之前) 12345678910.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 其中 .post-body, p是为了限定 a 的范围，不影响其他如标题的样式 修改文章底部的那个带#号的标签修改 blog/themes/next/layout/_macro/post.swig， 找到这一行： 1&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;# &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 将其修改为： 1&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; 实现点击爆炸效果首先，在 themes/next/source/js/src/ 下新建 firework.js，复制一下代码: 1"use strict";function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:"linear",duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(".fireworks");if(canvasEl)&#123;var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)&#125;"use strict";function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:"linear",duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(".fireworks");if(canvasEl)&#123;var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)&#125;; 然后，在主题配置文件中添加： 12# 点击爆炸效果fireworks: true 最后，和点击桃心效果一样，修改 themes/next/layout/_layout.swig, 在 body 之前添加代码: 1234&#123;% if theme.fireworks %&#125; &lt;canvas class="fireworks" style="position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;"&gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 同样，想要取消点击爆炸效果时，在主题配置文件中修改 12# 点击爆炸效果fireworks: false 实现打赏字体只闪动三次修改文件 blog/themes/next/source/css/_common/components/post/post-reward.styl 找到 “#wechat”, “#alipay”，修改如下 12345678910#wechat:hover p&#123; animation: roll 0.1s 3 linear; -webkit-animation: roll 0.1s 3 linear; -moz-animation: roll 0.1s 3 linear;&#125;#alipay:hover p&#123; animation: roll 0.1s 3 linear; -webkit-animation: roll 0.1s 3 linear; -moz-animation: roll 0.1s 3 linear;&#125;]]></content>
      <categories>
        <category>Hexo</category>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Manjaro/MacOS 搭建 Github Pages 个人博客]]></title>
    <url>%2F2019%2F04%2F15%2Fhexo%2F</url>
    <content type="text"><![CDATA[这篇主要是小白记录新建 Github Pages 的过程，大佬手下留情 :-D 有疑问可以交流的啊 Github 配置本地 Hexo:安装 Ｎode.jsManjaro 利用 nvm 安装 Node.js 1wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装 nvm 后安装 Node.js 1nvm install stable MacOS 利用 Homebrew 安装 Node.js 1curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1 安装 brew 后安装 Node.js 1brew install node 安装gitManjaro 似乎默认已经安装， 1sudo pacman -S git MacOS 1brew install git 全局安装 HexoManjaro 1sudo npm install -g hexo MacOS 1npm install -g hexo 创建blog文件1hexo init blog 安装12cd blognpm install 启动 Hexo1hexo s 替换为next主题在 blog 目录下 1git clone https://github.com/iissnan/hexo-theme-next themes/next 修改 blog 目录下的 _config.yml 文件 1vim _config.yml 将 theme: landscape 替换为 theme: next 启动 hexo 服务器在 blog 目录下 123hexo cleanhexo ghexo s 在执行完上面三条命令后，终端中显示 http://localhost:4000 ，在浏览器中输入 http://localhost:4000 ，就会看到本地 hexo 服务器已经配置成功 效果图 开启 MathJax在 blog 目录下 1vim ./themes/next/_config.yml 找到 mathjax 修改为 mathjax: ​ enable: true Github Pages 配置hexo 在本地已经配置好本地服务器，接下来需要在github上创建 repository 选择New repository选择repository namerepository name 一般设置为 “username.github.io”, 其中”username” 一般是你的github 用户名， 选择库名后，在页面底端勾选”Initialize this repository with a README “; 创建成功后就可以在浏览器中使用 https://用户名.github.io 来访问 将本地配置的 blog 提交到 Github PagesClone repository1git clone https://github.com/username/username.github.io 生成 index.html12cd username.github.ioecho "Hello World" &gt; index.html 推送本地文件到 Github Pages12345git add --allgit commit -m "Initial commit"git config --global user.name "github用户名"git config --global user.email github邮箱git push -u origin master 如果输入 “git push -u origin master” 后邮箱报错，可以到 https://github.com 的 “Setting” 中的 “Email” 取消勾选 “Keep my email address private” 同步本地的 hexo 博客到 github 上安装一个扩展在 blog 目录下 1sudo npm install hexo-deployer-git --save 配置_config.yml修改添加 1234deploy:type: gitrepository: https://github.com/username/username.github.io.gitbranch: master 清除缓存上传 hexo 到 Github Pages123hexo cleanhexo ghexo d 这时候在浏览器中输入 https://用户名.github.io 就可以访问博客了 美化：更换 themeCyanStyle 是 Wordpress 的 Twentytwelve 主题在 Hexo 上的迁移，清新简约，个人感觉良好 clone hexo-theme-cyanstyle在 blog 目录下 1git clone https://github.com/wizardforcel/hexo-theme-cyanstyle themes/cyanstyle 修改 _config.yml在 blog 目录下， 修改 _config.yml 中的 theme 为 theme: cyanstyle 本地预览在 blog 目录下 123hexo cleanhexo ghexo s 个人觉得挺好看的 提交到 Github Repositories在 blog 目录下 123hexo cleanhexo ghexo d 浏览器浏览 新建博文主要解决在 hexo 博客中插入图片路径问题 修改_config.yml在 blog 目录下修改 _config.yml 配置文件中的 post_asset_folder: true 此时在新建博客的时候会自动创建一个文件夹 安装一个扩展在 blog 目录下执行 1npm install https://github.com/CodeFalling/hexo-asset-image --save 创建博客在 blog 目录下执行 1hexo new "博客名" 之后会在 blog/source/_post/下出现 “博客名.md” 和 “博客名”文件夹 编写 .md 文件编写 blog/source/_post/“博客名.md” markdown 是一种标记语言，网上教程太多，这里不再赘述了 O(∩_∩)O~~ 在 .md 文件中插入图片先将图片文件放到 /blog/source/_post/“博客名” 文件夹下 然后在 .md 文件中 插入 1![aratar](图像名) 输入图像名的时候不能有路径，只需要图像名和后缀即可，比如 “cyanstyle.png” 注意：不要通过 “选择本地文件” 方式插入图片，这种方式插入图片时是绝对路径 本地预览在 blog 目录下执行 123hexo cleanhexo ghexo s 浏览器访问 http://localhost:4000 提交到 Github Repositories在 blog 目录下执行 123hexo cleanhexo ghexo d 浏览器访问 https://用户名.github.io 参考：https://www.jianshu.com/p/e49eeafe506e 参考：https://www.jianshu.com/p/c2ba9533088a 参考：https://www.jianshu.com/p/cf0628478a4e]]></content>
      <categories>
        <category>Hexo</category>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
