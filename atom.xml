<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QIXQI&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qixqi.github.io/"/>
  <updated>2019-04-19T13:44:36.083Z</updated>
  <id>https://qixqi.github.io/</id>
  
  <author>
    <name>QIXQI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo blog 美化升级</title>
    <link href="https://qixqi.github.io/2019/04/19/hexo-beautify/"/>
    <id>https://qixqi.github.io/2019/04/19/hexo-beautify/</id>
    <published>2019-04-19T12:24:16.000Z</published>
    <updated>2019-04-19T13:44:36.083Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-mYdvFnOE" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-mYdvFnOE"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "Way Back Home",              author: "SHAUN",              url: "http://qixqi.club/audio/homeway.mp3",              pic: "http://qixqi.club/images/zhaolei1.jpeg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script> <h2>将 Blog 分发到不同的库:</h2><p>由于某度相当变态的爬虫算法，Github 完全反对某度爬取，所以使用 Github 不得不放弃某度国内庞大的用户，但可以通过将 blog 分发到不同的库，可以同样方便的将自己的 blog 推送到某度。</p><h4>1. 上篇已经布置了 Github Pages</h4><h4>2. Gitee Pages</h4><ul><li><p><a href="https://gitee.com" target="_blank" rel="noopener">码云</a>，同样提供免费的 Page 服务，注册后（用户名尽量精简），新建一个<b>与用户名相同</b>的仓库（不区分大小写），这样可以避免二级域名</p></li><li><p>开启 Pages服务：在仓库目录下，在上方”服务”中开启 “Gitee Pages”，生成网址：<a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a></p></li><li><p>然后到本地博客目录，我的是blog，修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d;</span><br></pre></td></tr></table></figure></li><li><p>更新 Pages 服务：码云恶心的一点就是提交 blog 后每次需要手动更新Pages 服务，否则访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> 仍是上次提交的blog，亟需解决的问题。</p></li><li>然后访问 <a href="https://qixqi.gitee.io" target="_blank" rel="noopener">https://qixqi.gitee.io</a> ，OK</li></ul><h4>3. Coding (目前Coding 已经被腾讯云开发者平台包揽)</h4><ul><li><p>同样注册账号，创建与用户名一样的仓库</p></li><li><p>在仓库中左侧”代码”中开启 Pages 服务，生成 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a></p></li><li><p>修改本地 blog 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         </span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>提交 blog，Coding与Github一样，提交后无需再更新Pages服务，直接访问 <a href="https://qixxqi.coding.me" target="_blank" rel="noopener">https://qixxqi.coding.me</a> 即可，多刷新几次就可以</p></li></ul><h4>4. 在自己的服务器上搭建 blog</h4><p>由于先前自己搭建了一台腾讯云的服务器，学生版，一年才 ¥120，很便宜的；</p><ul><li><p>服务器用 nginx 挂出多个网站</p><p>服务器只用来写 blog 未免有些浪费，可以另开一个网站来挂载 blog</p><p>由于 80端口已经监听 http, 443端口监听 https，需要新开一个端口来监听 blog网站</p><p>访问<a href="https://console.qcloud.com/cvm/securitygroup" target="_blank" rel="noopener">腾讯云安全组</a> ，添加入站规则，类型：自定义，来源：0.0.0.0/0，协议端口：TCP: 90，策略：允许 （根据自己惨痛教训，必须要在安全组开启端口）</p><p>连接服务器，编辑 /etc/nginx/conf.d/virtual.conf（没有新建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  listen 90;   <span class="comment"># 新建的端口</span></span><br><span class="line">  root /usr/share/nginx/qixqi;<span class="comment"># blog 根目录（与网站根目录类似)</span></span><br><span class="line">  server_name: localhost;</span><br><span class="line">  charset: utf-8;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只是简单配置一下 blog 的配置，更详细的可以参考网站的配置</p><p>最后一步：在服务器配置 git</p><p>​    安装 git: </p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></code></pre><p>​    创建 git 仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/git/</span><br><span class="line">chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /home/git/</span><br><span class="line">chmod -R 755 /home/git</span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line">git init --bare qixqi.git<span class="comment"># qixqi 为仓库名，可以自设</span></span><br></pre></td></tr></table></figure><p>​    创建一个新的 git 钩子</p><p>在 /home/git/qixqi.git/hooks 文件下新建钩子文件 post-receive</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/qixqi.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/usr/share/nginx/qixqi --git dir=/home/git/qixqi.git checkout -f</span><br></pre></td></tr></table></figure></li></ul><p>​        工作原理是，提交时先访问 /home/git/qixqi.git ，然后receive，提交到 blog根.        目录，/usr/share/nginx/qixqi/</p><ul><li>修改本地 blog 的配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repository:</span><br><span class="line">         - https://github.com/QIXQI/qixqi.github.io.git</span><br><span class="line">         - https://gitee.com/QIXQI/qixqi.git</span><br><span class="line">         - https://git.dev.tencent.com/QIXXQI/qixxqi.git</span><br><span class="line">         - root@qixqi.club:/home/git/qixqi</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>其中 <a href="http://www.qixqi.club" target="_blank" rel="noopener">www.qixqi.club</a> 是我新申请的域名，一年才¥1</p><ul><li>提交</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo g; hexo d</span><br></pre></td></tr></table></figure><p>这样提交一次，会同时分发到4个库</p><p>到这里为止，就配置好了，当然你可以不用4个都分发，只需要选择Github 和另外一个即可，推荐 Gitee，因为Coding 速度最慢，而服务器最快，但收费啊。</p>]]></content>
    
    <summary type="html">
    
      这篇随笔记录了自己 Github Pages 美化的过程，以及添加一系列的常用功能，持续更新
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro/MacOS 搭建 Github Pages 个人博客</title>
    <link href="https://qixqi.github.io/2019/04/15/hexo/"/>
    <id>https://qixqi.github.io/2019/04/15/hexo/</id>
    <published>2019-04-14T16:37:44.000Z</published>
    <updated>2019-04-19T12:34:55.198Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这篇主要是小白记录新建 Github Pages 的过程，大佬手下留情 :-D</p><p>有疑问可以交流的啊  <a href="https://github.com/QIXQI/qixqi.github.io/issues" target="_blank" rel="noopener">Github</a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28267530&auto=1&height=66"></iframe><h2>配置本地 Hexo:</h2><h4>1. 安装 Ｎode.js</h4><p>Manjaro  利用 nvm 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装 nvm 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><p>MacOS 利用 Homebrew 安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</span><br></pre></td></tr></table></figure><p>安装 brew 后安装 Node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h4>2. 安装git</h4><p>Manjaro 似乎默认已经安装，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h4>3. 全局安装 Hexo</h4><p>Manjaro</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><p>MacOS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h4>4. 创建blog文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h4>5. 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4>6. 启动 Hexo</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4>7. 替换为next主题</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改 blog 目录下的 _config.yml 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>将 theme: landscape 替换为 theme: next</p><h4>8. 启动 hexo 服务器</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在执行完上面三条命令后，终端中显示 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>  ，就会看到本地 hexo 服务器已经配置成功</p><p>效果图</p><p><img src="/2019/04/15/hexo/next.png" alt="aratar"></p><h4>9. 开启 MathJax</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./themes/next/_config.yml</span><br></pre></td></tr></table></figure><p>找到 mathjax</p><p>修改为  mathjax:</p><p>​         enable: true</p><hr><h2>Github Pages 配置</h2><p>hexo 在本地已经配置好本地服务器，接下来需要在github上创建 repository</p><h4>1. 选择New repository</h4><h4>2. 选择repository name </h4><p>repository name 一般设置为　“username.github.io”, 其中”username” 一般是你的github 用户名，</p><p>选择库名后，在页面底端勾选”Initialize this repository with a README “;</p><p>创建成功后就可以在浏览器中使用 https://用户名.github.io 来访问</p><hr><h2>将本地配置的 blog 提交到 Github Pages</h2><h4>1. Clone repository</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure><h4>2. 生成 index.html</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd username.github.io</span><br><span class="line">echo "Hello World" &gt; index.html</span><br></pre></td></tr></table></figure><h4>3. 推送本地文件到 Github Pages</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m "Initial commit"</span><br><span class="line">git config --global user.name "github用户名"</span><br><span class="line">git config --global user.email github邮箱</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>如果输入　“git push -u origin master” 后邮箱报错，可以到 <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a> 的 “Setting” 中的 “Email” 取消勾选 “Keep my email address private”</p><hr><h2>同步本地的 hexo 博客到 github 上</h2><h4>1. 安装一个扩展</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4>2. 配置_config.yml</h4><p>修改添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/username/username.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h4>3. 清除缓存上传 hexo 到 Github Pages<br></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p> 这时候在浏览器中输入 https://用户名.github.io 就可以访问博客了</p><hr><h2>美化：更换 theme</h2><p>CyanStyle 是 Wordpress 的 Twentytwelve 主题在 Hexo 上的迁移，清新简约，个人感觉良好</p><h4>1. clone hexo-theme-cyanstyle</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/wizardforcel/hexo-theme-cyanstyle themes/cyanstyle</span><br></pre></td></tr></table></figure><h4>2. 修改 _config.yml</h4><p>在 blog 目录下，</p><p>修改 _config.yml 中的 theme 为 theme: cyanstyle</p><h4>3. 本地预览 </h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/2019/04/15/hexo/cyanstyle.png" alt="aratar"></p><p>个人觉得挺好看的</p><h4>4. 提交到 Github Repositories</h4><p>在 blog 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4>5. 浏览器浏览</h4><hr><h2>新建博文</h2><p>主要解决在 hexo 博客中插入图片路径问题</p><h4>1. 修改_config.yml</h4><p>在 blog 目录下修改 _config.yml 配置文件中的 post_asset_folder: true</p><p>此时在新建博客的时候会自动创建一个文件夹</p><h4>2. 安装一个扩展</h4><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h4>3. 创建博客</h4><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "博客名"</span><br></pre></td></tr></table></figure><p>之后会在 blog/source/_post/下出现 “博客名.md” 和 “博客名”文件夹</p><h4>4. 编写 .md 文件</h4><p>编写 blog/source/_post/“博客名.md”</p><p>markdown 是一种标记语言，网上教程太多，这里不再赘述了 O(∩_∩)O~~</p><h4>5. 在 .md 文件中插入图片</h4><p>先将图片文件放到 /blog/source/_post/“博客名” 文件夹下</p><p>然后在 .md 文件中 插入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![aratar](图像名)</span><br></pre></td></tr></table></figure><p>输入图像名的时候不能有路径，只需要图像名和后缀即可，比如 “cyanstyle.png”</p><p>注意：不要通过 “选择本地文件” 方式插入图片，这种方式插入图片时是绝对路径</p><h4>6. 本地预览 </h4><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><h4>7. 提交到 Github Repositories</h4><p>在 blog 目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>浏览器访问 https://用户名.github.io</p><p><br>    <span>参考：<a href="https://www.jianshu.com/p/e49eeafe506e" target="_blank" rel="noopener">https://www.jianshu.com/p/e49eeafe506e</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">https://www.jianshu.com/p/c2ba9533088a</a></span><br><br>    <span>参考：<a href="https://www.jianshu.com/p/cf0628478a4e" target="_blank" rel="noopener">https://www.jianshu.com/p/cf0628478a4e</a></span><br><br></p>]]></content>
    
    <summary type="html">
    
      本文主要涉及hexo next建站初期的详细过程，目前暂不包括美化过程，持续更新 ......
    
    </summary>
    
      <category term="Hexo" scheme="https://qixqi.github.io/categories/Hexo/"/>
    
      <category term="Next" scheme="https://qixqi.github.io/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="https://qixqi.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
